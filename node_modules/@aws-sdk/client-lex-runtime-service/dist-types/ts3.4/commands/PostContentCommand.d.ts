import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  LexRuntimeServiceClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LexRuntimeServiceClient";
import { PostContentRequest, PostContentResponse } from "../models/models_0";
declare type PostContentCommandInputType = Pick<
  PostContentRequest,
  Exclude<keyof PostContentRequest, "inputStream">
> & {
  inputStream: PostContentRequest["inputStream"] | string | Uint8Array | Buffer;
};
export interface PostContentCommandInput extends PostContentCommandInputType {}
export interface PostContentCommandOutput
  extends PostContentResponse,
    __MetadataBearer {}
export declare class PostContentCommand extends $Command<
  PostContentCommandInput,
  PostContentCommandOutput,
  LexRuntimeServiceClientResolvedConfig
> {
  readonly input: PostContentCommandInput;
  constructor(input: PostContentCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: LexRuntimeServiceClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<PostContentCommandInput, PostContentCommandOutput>;
  private serialize;
  private deserialize;
}
export {};
