import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  LexRuntimeServiceClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LexRuntimeServiceClient";
import { PutSessionRequest, PutSessionResponse } from "../models/models_0";
export interface PutSessionCommandInput extends PutSessionRequest {}
export interface PutSessionCommandOutput
  extends PutSessionResponse,
    __MetadataBearer {}
export declare class PutSessionCommand extends $Command<
  PutSessionCommandInput,
  PutSessionCommandOutput,
  LexRuntimeServiceClientResolvedConfig
> {
  readonly input: PutSessionCommandInput;
  constructor(input: PutSessionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: LexRuntimeServiceClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<PutSessionCommandInput, PutSessionCommandOutput>;
  private serialize;
  private deserialize;
}
