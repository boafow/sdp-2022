import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { LocationServiceException as __BaseException } from "./LocationServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AssociateTrackerConsumerRequest {
  TrackerName: string | undefined;
  ConsumerArn: string | undefined;
}
export interface AssociateTrackerConsumerResponse {}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  $retryable: {};
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  $retryable: {};
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ValidationExceptionField {
  Name: string | undefined;
  Message: string | undefined;
}
export declare type ValidationExceptionReason =
  | "CannotParse"
  | "FieldValidationFailed"
  | "Missing"
  | "Other"
  | "UnknownOperation";
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  Reason: ValidationExceptionReason | string | undefined;
  FieldList: ValidationExceptionField[] | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface BatchDeleteDevicePositionHistoryRequest {
  TrackerName: string | undefined;
  DeviceIds: string[] | undefined;
}
export declare type BatchItemErrorCode =
  | "AccessDeniedError"
  | "ConflictError"
  | "InternalServerError"
  | "ResourceNotFoundError"
  | "ThrottlingError"
  | "ValidationError";
export interface BatchItemError {
  Code?: BatchItemErrorCode | string;
  Message?: string;
}
export interface BatchDeleteDevicePositionHistoryError {
  DeviceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchDeleteDevicePositionHistoryResponse {
  Errors: BatchDeleteDevicePositionHistoryError[] | undefined;
}
export interface BatchDeleteGeofenceRequest {
  CollectionName: string | undefined;
  GeofenceIds: string[] | undefined;
}
export interface BatchDeleteGeofenceError {
  GeofenceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchDeleteGeofenceResponse {
  Errors: BatchDeleteGeofenceError[] | undefined;
}
export interface PositionalAccuracy {
  Horizontal: number | undefined;
}
export interface DevicePositionUpdate {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy;
  PositionProperties?: Record<string, string>;
}
export interface BatchEvaluateGeofencesRequest {
  CollectionName: string | undefined;
  DevicePositionUpdates: DevicePositionUpdate[] | undefined;
}
export interface BatchEvaluateGeofencesError {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchEvaluateGeofencesResponse {
  Errors: BatchEvaluateGeofencesError[] | undefined;
}
export interface BatchGetDevicePositionRequest {
  TrackerName: string | undefined;
  DeviceIds: string[] | undefined;
}
export interface DevicePosition {
  DeviceId?: string;
  SampleTime: Date | undefined;
  ReceivedTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy;
  PositionProperties?: Record<string, string>;
}
export interface BatchGetDevicePositionError {
  DeviceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchGetDevicePositionResponse {
  Errors: BatchGetDevicePositionError[] | undefined;
  DevicePositions: DevicePosition[] | undefined;
}
export interface Circle {
  Center: number[] | undefined;
  Radius: number | undefined;
}
export interface GeofenceGeometry {
  Polygon?: number[][][];
  Circle?: Circle;
}
export interface BatchPutGeofenceRequestEntry {
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
}
export interface BatchPutGeofenceRequest {
  CollectionName: string | undefined;
  Entries: BatchPutGeofenceRequestEntry[] | undefined;
}
export interface BatchPutGeofenceError {
  GeofenceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchPutGeofenceSuccess {
  GeofenceId: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface BatchPutGeofenceResponse {
  Successes: BatchPutGeofenceSuccess[] | undefined;
  Errors: BatchPutGeofenceError[] | undefined;
}
export interface BatchUpdateDevicePositionRequest {
  TrackerName: string | undefined;
  Updates: DevicePositionUpdate[] | undefined;
}
export interface BatchUpdateDevicePositionError {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchUpdateDevicePositionResponse {
  Errors: BatchUpdateDevicePositionError[] | undefined;
}
export interface CalculateRouteCarModeOptions {
  AvoidFerries?: boolean;
  AvoidTolls?: boolean;
}
export declare type DistanceUnit = "Kilometers" | "Miles";
export declare type TravelMode = "Car" | "Truck" | "Walking";
export declare type DimensionUnit = "Feet" | "Meters";
export interface TruckDimensions {
  Length?: number;
  Height?: number;
  Width?: number;
  Unit?: DimensionUnit | string;
}
export declare type VehicleWeightUnit = "Kilograms" | "Pounds";
export interface TruckWeight {
  Total?: number;
  Unit?: VehicleWeightUnit | string;
}
export interface CalculateRouteTruckModeOptions {
  AvoidFerries?: boolean;
  AvoidTolls?: boolean;
  Dimensions?: TruckDimensions;
  Weight?: TruckWeight;
}
export interface CalculateRouteRequest {
  CalculatorName: string | undefined;
  DeparturePosition: number[] | undefined;
  DestinationPosition: number[] | undefined;
  WaypointPositions?: number[][];
  TravelMode?: TravelMode | string;
  DepartureTime?: Date;
  DepartNow?: boolean;
  DistanceUnit?: DistanceUnit | string;
  IncludeLegGeometry?: boolean;
  CarModeOptions?: CalculateRouteCarModeOptions;
  TruckModeOptions?: CalculateRouteTruckModeOptions;
}
export interface LegGeometry {
  LineString?: number[][];
}
export interface Step {
  StartPosition: number[] | undefined;
  EndPosition: number[] | undefined;
  Distance: number | undefined;
  DurationSeconds: number | undefined;
  GeometryOffset?: number;
}
export interface Leg {
  StartPosition: number[] | undefined;
  EndPosition: number[] | undefined;
  Distance: number | undefined;
  DurationSeconds: number | undefined;
  Geometry?: LegGeometry;
  Steps: Step[] | undefined;
}
export interface CalculateRouteSummary {
  RouteBBox: number[] | undefined;
  DataSource: string | undefined;
  Distance: number | undefined;
  DurationSeconds: number | undefined;
  DistanceUnit: DistanceUnit | string | undefined;
}
export interface CalculateRouteResponse {
  Legs: Leg[] | undefined;
  Summary: CalculateRouteSummary | undefined;
}
export interface CalculateRouteMatrixRequest {
  CalculatorName: string | undefined;
  DeparturePositions: number[][] | undefined;
  DestinationPositions: number[][] | undefined;
  TravelMode?: TravelMode | string;
  DepartureTime?: Date;
  DepartNow?: boolean;
  DistanceUnit?: DistanceUnit | string;
  CarModeOptions?: CalculateRouteCarModeOptions;
  TruckModeOptions?: CalculateRouteTruckModeOptions;
}
export declare type RouteMatrixErrorCode =
  | "DeparturePositionNotFound"
  | "DestinationPositionNotFound"
  | "OtherValidationError"
  | "PositionsNotFound"
  | "RouteNotFound"
  | "RouteTooLong";
export interface RouteMatrixEntryError {
  Code: RouteMatrixErrorCode | string | undefined;
  Message?: string;
}
export interface RouteMatrixEntry {
  Distance?: number;
  DurationSeconds?: number;
  Error?: RouteMatrixEntryError;
}
export interface CalculateRouteMatrixSummary {
  DataSource: string | undefined;
  RouteCount: number | undefined;
  ErrorCount: number | undefined;
  DistanceUnit: DistanceUnit | string | undefined;
}
export interface CalculateRouteMatrixResponse {
  RouteMatrix: RouteMatrixEntry[][] | undefined;
  SnappedDeparturePositions?: number[][];
  SnappedDestinationPositions?: number[][];
  Summary: CalculateRouteMatrixSummary | undefined;
}
export declare type PricingPlan =
  | "MobileAssetManagement"
  | "MobileAssetTracking"
  | "RequestBasedUsage";
export interface CreateGeofenceCollectionRequest {
  CollectionName: string | undefined;
  PricingPlan?: PricingPlan | string;
  PricingPlanDataSource?: string;
  Description?: string;
  Tags?: Record<string, string>;
  KmsKeyId?: string;
}
export interface CreateGeofenceCollectionResponse {
  CollectionName: string | undefined;
  CollectionArn: string | undefined;
  CreateTime: Date | undefined;
}
export interface MapConfiguration {
  Style: string | undefined;
}
export interface CreateMapRequest {
  MapName: string | undefined;
  Configuration: MapConfiguration | undefined;
  PricingPlan?: PricingPlan | string;
  Description?: string;
  Tags?: Record<string, string>;
}
export interface CreateMapResponse {
  MapName: string | undefined;
  MapArn: string | undefined;
  CreateTime: Date | undefined;
}
export declare type IntendedUse = "SingleUse" | "Storage";
export interface DataSourceConfiguration {
  IntendedUse?: IntendedUse | string;
}
export interface CreatePlaceIndexRequest {
  IndexName: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | string;
  Description?: string;
  DataSourceConfiguration?: DataSourceConfiguration;
  Tags?: Record<string, string>;
}
export interface CreatePlaceIndexResponse {
  IndexName: string | undefined;
  IndexArn: string | undefined;
  CreateTime: Date | undefined;
}
export interface CreateRouteCalculatorRequest {
  CalculatorName: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | string;
  Description?: string;
  Tags?: Record<string, string>;
}
export interface CreateRouteCalculatorResponse {
  CalculatorName: string | undefined;
  CalculatorArn: string | undefined;
  CreateTime: Date | undefined;
}
export declare type PositionFiltering =
  | "AccuracyBased"
  | "DistanceBased"
  | "TimeBased";
export interface CreateTrackerRequest {
  TrackerName: string | undefined;
  PricingPlan?: PricingPlan | string;
  KmsKeyId?: string;
  PricingPlanDataSource?: string;
  Description?: string;
  Tags?: Record<string, string>;
  PositionFiltering?: PositionFiltering | string;
}
export interface CreateTrackerResponse {
  TrackerName: string | undefined;
  TrackerArn: string | undefined;
  CreateTime: Date | undefined;
}
export interface DeleteGeofenceCollectionRequest {
  CollectionName: string | undefined;
}
export interface DeleteGeofenceCollectionResponse {}
export interface DeleteMapRequest {
  MapName: string | undefined;
}
export interface DeleteMapResponse {}
export interface DeletePlaceIndexRequest {
  IndexName: string | undefined;
}
export interface DeletePlaceIndexResponse {}
export interface DeleteRouteCalculatorRequest {
  CalculatorName: string | undefined;
}
export interface DeleteRouteCalculatorResponse {}
export interface DeleteTrackerRequest {
  TrackerName: string | undefined;
}
export interface DeleteTrackerResponse {}
export interface DescribeGeofenceCollectionRequest {
  CollectionName: string | undefined;
}
export interface DescribeGeofenceCollectionResponse {
  CollectionName: string | undefined;
  CollectionArn: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | string;
  PricingPlanDataSource?: string;
  KmsKeyId?: string;
  Tags?: Record<string, string>;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface DescribeMapRequest {
  MapName: string | undefined;
}
export interface DescribeMapResponse {
  MapName: string | undefined;
  MapArn: string | undefined;
  PricingPlan?: PricingPlan | string;
  DataSource: string | undefined;
  Configuration: MapConfiguration | undefined;
  Description: string | undefined;
  Tags?: Record<string, string>;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface DescribePlaceIndexRequest {
  IndexName: string | undefined;
}
export interface DescribePlaceIndexResponse {
  IndexName: string | undefined;
  IndexArn: string | undefined;
  PricingPlan?: PricingPlan | string;
  Description: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  DataSource: string | undefined;
  DataSourceConfiguration: DataSourceConfiguration | undefined;
  Tags?: Record<string, string>;
}
export interface DescribeRouteCalculatorRequest {
  CalculatorName: string | undefined;
}
export interface DescribeRouteCalculatorResponse {
  CalculatorName: string | undefined;
  CalculatorArn: string | undefined;
  PricingPlan?: PricingPlan | string;
  Description: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  DataSource: string | undefined;
  Tags?: Record<string, string>;
}
export interface DescribeTrackerRequest {
  TrackerName: string | undefined;
}
export interface DescribeTrackerResponse {
  TrackerName: string | undefined;
  TrackerArn: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | string;
  PricingPlanDataSource?: string;
  Tags?: Record<string, string>;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  KmsKeyId?: string;
  PositionFiltering?: PositionFiltering | string;
}
export interface DisassociateTrackerConsumerRequest {
  TrackerName: string | undefined;
  ConsumerArn: string | undefined;
}
export interface DisassociateTrackerConsumerResponse {}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface GetGeofenceRequest {
  CollectionName: string | undefined;
  GeofenceId: string | undefined;
}
export interface GetGeofenceResponse {
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
  Status: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListGeofenceCollectionsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListGeofenceCollectionsResponseEntry {
  CollectionName: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | string;
  PricingPlanDataSource?: string;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListGeofenceCollectionsResponse {
  Entries: ListGeofenceCollectionsResponseEntry[] | undefined;
  NextToken?: string;
}
export interface ListGeofencesRequest {
  CollectionName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListGeofenceResponseEntry {
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
  Status: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListGeofencesResponse {
  Entries: ListGeofenceResponseEntry[] | undefined;
  NextToken?: string;
}
export interface PutGeofenceRequest {
  CollectionName: string | undefined;
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
}
export interface PutGeofenceResponse {
  GeofenceId: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface UpdateGeofenceCollectionRequest {
  CollectionName: string | undefined;
  PricingPlan?: PricingPlan | string;
  PricingPlanDataSource?: string;
  Description?: string;
}
export interface UpdateGeofenceCollectionResponse {
  CollectionName: string | undefined;
  CollectionArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface GetDevicePositionRequest {
  TrackerName: string | undefined;
  DeviceId: string | undefined;
}
export interface GetDevicePositionResponse {
  DeviceId?: string;
  SampleTime: Date | undefined;
  ReceivedTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy;
  PositionProperties?: Record<string, string>;
}
export interface GetDevicePositionHistoryRequest {
  TrackerName: string | undefined;
  DeviceId: string | undefined;
  NextToken?: string;
  StartTimeInclusive?: Date;
  EndTimeExclusive?: Date;
  MaxResults?: number;
}
export interface GetDevicePositionHistoryResponse {
  DevicePositions: DevicePosition[] | undefined;
  NextToken?: string;
}
export interface GetMapGlyphsRequest {
  MapName: string | undefined;
  FontStack: string | undefined;
  FontUnicodeRange: string | undefined;
}
export interface GetMapGlyphsResponse {
  Blob?: Uint8Array;
  ContentType?: string;
}
export interface GetMapSpritesRequest {
  MapName: string | undefined;
  FileName: string | undefined;
}
export interface GetMapSpritesResponse {
  Blob?: Uint8Array;
  ContentType?: string;
}
export interface GetMapStyleDescriptorRequest {
  MapName: string | undefined;
}
export interface GetMapStyleDescriptorResponse {
  Blob?: Uint8Array;
  ContentType?: string;
}
export interface GetMapTileRequest {
  MapName: string | undefined;
  Z: string | undefined;
  X: string | undefined;
  Y: string | undefined;
}
export interface GetMapTileResponse {
  Blob?: Uint8Array;
  ContentType?: string;
}
export interface GetPlaceRequest {
  IndexName: string | undefined;
  PlaceId: string | undefined;
  Language?: string;
}
export interface PlaceGeometry {
  Point?: number[];
}
export interface TimeZone {
  Name: string | undefined;
  Offset?: number;
}
export interface Place {
  Label?: string;
  Geometry: PlaceGeometry | undefined;
  AddressNumber?: string;
  Street?: string;
  Neighborhood?: string;
  Municipality?: string;
  SubRegion?: string;
  Region?: string;
  Country?: string;
  PostalCode?: string;
  Interpolated?: boolean;
  TimeZone?: TimeZone;
  UnitType?: string;
  UnitNumber?: string;
}
export interface GetPlaceResponse {
  Place: Place | undefined;
}
export interface ListDevicePositionsRequest {
  TrackerName: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListDevicePositionsResponseEntry {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy;
  PositionProperties?: Record<string, string>;
}
export interface ListDevicePositionsResponse {
  Entries: ListDevicePositionsResponseEntry[] | undefined;
  NextToken?: string;
}
export interface ListMapsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListMapsResponseEntry {
  MapName: string | undefined;
  Description: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | string;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListMapsResponse {
  Entries: ListMapsResponseEntry[] | undefined;
  NextToken?: string;
}
export interface ListPlaceIndexesRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListPlaceIndexesResponseEntry {
  IndexName: string | undefined;
  Description: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | string;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListPlaceIndexesResponse {
  Entries: ListPlaceIndexesResponseEntry[] | undefined;
  NextToken?: string;
}
export interface ListRouteCalculatorsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListRouteCalculatorsResponseEntry {
  CalculatorName: string | undefined;
  Description: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | string;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListRouteCalculatorsResponse {
  Entries: ListRouteCalculatorsResponseEntry[] | undefined;
  NextToken?: string;
}
export interface ListTrackerConsumersRequest {
  TrackerName: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListTrackerConsumersResponse {
  ConsumerArns: string[] | undefined;
  NextToken?: string;
}
export interface ListTrackersRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListTrackersResponseEntry {
  TrackerName: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | string;
  PricingPlanDataSource?: string;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListTrackersResponse {
  Entries: ListTrackersResponseEntry[] | undefined;
  NextToken?: string;
}
export interface UpdateMapRequest {
  MapName: string | undefined;
  PricingPlan?: PricingPlan | string;
  Description?: string;
}
export interface UpdateMapResponse {
  MapName: string | undefined;
  MapArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface SearchPlaceIndexForPositionRequest {
  IndexName: string | undefined;
  Position: number[] | undefined;
  MaxResults?: number;
  Language?: string;
}
export interface SearchForPositionResult {
  Place: Place | undefined;
  Distance: number | undefined;
  PlaceId?: string;
}
export interface SearchPlaceIndexForPositionSummary {
  Position: number[] | undefined;
  MaxResults?: number;
  DataSource: string | undefined;
  Language?: string;
}
export interface SearchPlaceIndexForPositionResponse {
  Summary: SearchPlaceIndexForPositionSummary | undefined;
  Results: SearchForPositionResult[] | undefined;
}
export interface SearchPlaceIndexForSuggestionsRequest {
  IndexName: string | undefined;
  Text: string | undefined;
  BiasPosition?: number[];
  FilterBBox?: number[];
  FilterCountries?: string[];
  MaxResults?: number;
  Language?: string;
}
export interface SearchForSuggestionsResult {
  Text: string | undefined;
  PlaceId?: string;
}
export interface SearchPlaceIndexForSuggestionsSummary {
  Text: string | undefined;
  BiasPosition?: number[];
  FilterBBox?: number[];
  FilterCountries?: string[];
  MaxResults?: number;
  DataSource: string | undefined;
  Language?: string;
}
export interface SearchPlaceIndexForSuggestionsResponse {
  Summary: SearchPlaceIndexForSuggestionsSummary | undefined;
  Results: SearchForSuggestionsResult[] | undefined;
}
export interface SearchPlaceIndexForTextRequest {
  IndexName: string | undefined;
  Text: string | undefined;
  BiasPosition?: number[];
  FilterBBox?: number[];
  FilterCountries?: string[];
  MaxResults?: number;
  Language?: string;
}
export interface SearchForTextResult {
  Place: Place | undefined;
  Distance?: number;
  Relevance?: number;
  PlaceId?: string;
}
export interface SearchPlaceIndexForTextSummary {
  Text: string | undefined;
  BiasPosition?: number[];
  FilterBBox?: number[];
  FilterCountries?: string[];
  MaxResults?: number;
  ResultBBox?: number[];
  DataSource: string | undefined;
  Language?: string;
}
export interface SearchPlaceIndexForTextResponse {
  Summary: SearchPlaceIndexForTextSummary | undefined;
  Results: SearchForTextResult[] | undefined;
}
export interface UpdatePlaceIndexRequest {
  IndexName: string | undefined;
  PricingPlan?: PricingPlan | string;
  Description?: string;
  DataSourceConfiguration?: DataSourceConfiguration;
}
export interface UpdatePlaceIndexResponse {
  IndexName: string | undefined;
  IndexArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface UpdateRouteCalculatorRequest {
  CalculatorName: string | undefined;
  PricingPlan?: PricingPlan | string;
  Description?: string;
}
export interface UpdateRouteCalculatorResponse {
  CalculatorName: string | undefined;
  CalculatorArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface UpdateTrackerRequest {
  TrackerName: string | undefined;
  PricingPlan?: PricingPlan | string;
  PricingPlanDataSource?: string;
  Description?: string;
  PositionFiltering?: PositionFiltering | string;
}
export interface UpdateTrackerResponse {
  TrackerName: string | undefined;
  TrackerArn: string | undefined;
  UpdateTime: Date | undefined;
}
export declare const AssociateTrackerConsumerRequestFilterSensitiveLog: (
  obj: AssociateTrackerConsumerRequest
) => any;
export declare const AssociateTrackerConsumerResponseFilterSensitiveLog: (
  obj: AssociateTrackerConsumerResponse
) => any;
export declare const ValidationExceptionFieldFilterSensitiveLog: (
  obj: ValidationExceptionField
) => any;
export declare const BatchDeleteDevicePositionHistoryRequestFilterSensitiveLog: (
  obj: BatchDeleteDevicePositionHistoryRequest
) => any;
export declare const BatchItemErrorFilterSensitiveLog: (
  obj: BatchItemError
) => any;
export declare const BatchDeleteDevicePositionHistoryErrorFilterSensitiveLog: (
  obj: BatchDeleteDevicePositionHistoryError
) => any;
export declare const BatchDeleteDevicePositionHistoryResponseFilterSensitiveLog: (
  obj: BatchDeleteDevicePositionHistoryResponse
) => any;
export declare const BatchDeleteGeofenceRequestFilterSensitiveLog: (
  obj: BatchDeleteGeofenceRequest
) => any;
export declare const BatchDeleteGeofenceErrorFilterSensitiveLog: (
  obj: BatchDeleteGeofenceError
) => any;
export declare const BatchDeleteGeofenceResponseFilterSensitiveLog: (
  obj: BatchDeleteGeofenceResponse
) => any;
export declare const PositionalAccuracyFilterSensitiveLog: (
  obj: PositionalAccuracy
) => any;
export declare const DevicePositionUpdateFilterSensitiveLog: (
  obj: DevicePositionUpdate
) => any;
export declare const BatchEvaluateGeofencesRequestFilterSensitiveLog: (
  obj: BatchEvaluateGeofencesRequest
) => any;
export declare const BatchEvaluateGeofencesErrorFilterSensitiveLog: (
  obj: BatchEvaluateGeofencesError
) => any;
export declare const BatchEvaluateGeofencesResponseFilterSensitiveLog: (
  obj: BatchEvaluateGeofencesResponse
) => any;
export declare const BatchGetDevicePositionRequestFilterSensitiveLog: (
  obj: BatchGetDevicePositionRequest
) => any;
export declare const DevicePositionFilterSensitiveLog: (
  obj: DevicePosition
) => any;
export declare const BatchGetDevicePositionErrorFilterSensitiveLog: (
  obj: BatchGetDevicePositionError
) => any;
export declare const BatchGetDevicePositionResponseFilterSensitiveLog: (
  obj: BatchGetDevicePositionResponse
) => any;
export declare const CircleFilterSensitiveLog: (obj: Circle) => any;
export declare const GeofenceGeometryFilterSensitiveLog: (
  obj: GeofenceGeometry
) => any;
export declare const BatchPutGeofenceRequestEntryFilterSensitiveLog: (
  obj: BatchPutGeofenceRequestEntry
) => any;
export declare const BatchPutGeofenceRequestFilterSensitiveLog: (
  obj: BatchPutGeofenceRequest
) => any;
export declare const BatchPutGeofenceErrorFilterSensitiveLog: (
  obj: BatchPutGeofenceError
) => any;
export declare const BatchPutGeofenceSuccessFilterSensitiveLog: (
  obj: BatchPutGeofenceSuccess
) => any;
export declare const BatchPutGeofenceResponseFilterSensitiveLog: (
  obj: BatchPutGeofenceResponse
) => any;
export declare const BatchUpdateDevicePositionRequestFilterSensitiveLog: (
  obj: BatchUpdateDevicePositionRequest
) => any;
export declare const BatchUpdateDevicePositionErrorFilterSensitiveLog: (
  obj: BatchUpdateDevicePositionError
) => any;
export declare const BatchUpdateDevicePositionResponseFilterSensitiveLog: (
  obj: BatchUpdateDevicePositionResponse
) => any;
export declare const CalculateRouteCarModeOptionsFilterSensitiveLog: (
  obj: CalculateRouteCarModeOptions
) => any;
export declare const TruckDimensionsFilterSensitiveLog: (
  obj: TruckDimensions
) => any;
export declare const TruckWeightFilterSensitiveLog: (obj: TruckWeight) => any;
export declare const CalculateRouteTruckModeOptionsFilterSensitiveLog: (
  obj: CalculateRouteTruckModeOptions
) => any;
export declare const CalculateRouteRequestFilterSensitiveLog: (
  obj: CalculateRouteRequest
) => any;
export declare const LegGeometryFilterSensitiveLog: (obj: LegGeometry) => any;
export declare const StepFilterSensitiveLog: (obj: Step) => any;
export declare const LegFilterSensitiveLog: (obj: Leg) => any;
export declare const CalculateRouteSummaryFilterSensitiveLog: (
  obj: CalculateRouteSummary
) => any;
export declare const CalculateRouteResponseFilterSensitiveLog: (
  obj: CalculateRouteResponse
) => any;
export declare const CalculateRouteMatrixRequestFilterSensitiveLog: (
  obj: CalculateRouteMatrixRequest
) => any;
export declare const RouteMatrixEntryErrorFilterSensitiveLog: (
  obj: RouteMatrixEntryError
) => any;
export declare const RouteMatrixEntryFilterSensitiveLog: (
  obj: RouteMatrixEntry
) => any;
export declare const CalculateRouteMatrixSummaryFilterSensitiveLog: (
  obj: CalculateRouteMatrixSummary
) => any;
export declare const CalculateRouteMatrixResponseFilterSensitiveLog: (
  obj: CalculateRouteMatrixResponse
) => any;
export declare const CreateGeofenceCollectionRequestFilterSensitiveLog: (
  obj: CreateGeofenceCollectionRequest
) => any;
export declare const CreateGeofenceCollectionResponseFilterSensitiveLog: (
  obj: CreateGeofenceCollectionResponse
) => any;
export declare const MapConfigurationFilterSensitiveLog: (
  obj: MapConfiguration
) => any;
export declare const CreateMapRequestFilterSensitiveLog: (
  obj: CreateMapRequest
) => any;
export declare const CreateMapResponseFilterSensitiveLog: (
  obj: CreateMapResponse
) => any;
export declare const DataSourceConfigurationFilterSensitiveLog: (
  obj: DataSourceConfiguration
) => any;
export declare const CreatePlaceIndexRequestFilterSensitiveLog: (
  obj: CreatePlaceIndexRequest
) => any;
export declare const CreatePlaceIndexResponseFilterSensitiveLog: (
  obj: CreatePlaceIndexResponse
) => any;
export declare const CreateRouteCalculatorRequestFilterSensitiveLog: (
  obj: CreateRouteCalculatorRequest
) => any;
export declare const CreateRouteCalculatorResponseFilterSensitiveLog: (
  obj: CreateRouteCalculatorResponse
) => any;
export declare const CreateTrackerRequestFilterSensitiveLog: (
  obj: CreateTrackerRequest
) => any;
export declare const CreateTrackerResponseFilterSensitiveLog: (
  obj: CreateTrackerResponse
) => any;
export declare const DeleteGeofenceCollectionRequestFilterSensitiveLog: (
  obj: DeleteGeofenceCollectionRequest
) => any;
export declare const DeleteGeofenceCollectionResponseFilterSensitiveLog: (
  obj: DeleteGeofenceCollectionResponse
) => any;
export declare const DeleteMapRequestFilterSensitiveLog: (
  obj: DeleteMapRequest
) => any;
export declare const DeleteMapResponseFilterSensitiveLog: (
  obj: DeleteMapResponse
) => any;
export declare const DeletePlaceIndexRequestFilterSensitiveLog: (
  obj: DeletePlaceIndexRequest
) => any;
export declare const DeletePlaceIndexResponseFilterSensitiveLog: (
  obj: DeletePlaceIndexResponse
) => any;
export declare const DeleteRouteCalculatorRequestFilterSensitiveLog: (
  obj: DeleteRouteCalculatorRequest
) => any;
export declare const DeleteRouteCalculatorResponseFilterSensitiveLog: (
  obj: DeleteRouteCalculatorResponse
) => any;
export declare const DeleteTrackerRequestFilterSensitiveLog: (
  obj: DeleteTrackerRequest
) => any;
export declare const DeleteTrackerResponseFilterSensitiveLog: (
  obj: DeleteTrackerResponse
) => any;
export declare const DescribeGeofenceCollectionRequestFilterSensitiveLog: (
  obj: DescribeGeofenceCollectionRequest
) => any;
export declare const DescribeGeofenceCollectionResponseFilterSensitiveLog: (
  obj: DescribeGeofenceCollectionResponse
) => any;
export declare const DescribeMapRequestFilterSensitiveLog: (
  obj: DescribeMapRequest
) => any;
export declare const DescribeMapResponseFilterSensitiveLog: (
  obj: DescribeMapResponse
) => any;
export declare const DescribePlaceIndexRequestFilterSensitiveLog: (
  obj: DescribePlaceIndexRequest
) => any;
export declare const DescribePlaceIndexResponseFilterSensitiveLog: (
  obj: DescribePlaceIndexResponse
) => any;
export declare const DescribeRouteCalculatorRequestFilterSensitiveLog: (
  obj: DescribeRouteCalculatorRequest
) => any;
export declare const DescribeRouteCalculatorResponseFilterSensitiveLog: (
  obj: DescribeRouteCalculatorResponse
) => any;
export declare const DescribeTrackerRequestFilterSensitiveLog: (
  obj: DescribeTrackerRequest
) => any;
export declare const DescribeTrackerResponseFilterSensitiveLog: (
  obj: DescribeTrackerResponse
) => any;
export declare const DisassociateTrackerConsumerRequestFilterSensitiveLog: (
  obj: DisassociateTrackerConsumerRequest
) => any;
export declare const DisassociateTrackerConsumerResponseFilterSensitiveLog: (
  obj: DisassociateTrackerConsumerResponse
) => any;
export declare const ListTagsForResourceRequestFilterSensitiveLog: (
  obj: ListTagsForResourceRequest
) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const TagResourceResponseFilterSensitiveLog: (
  obj: TagResourceResponse
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UntagResourceResponseFilterSensitiveLog: (
  obj: UntagResourceResponse
) => any;
export declare const GetGeofenceRequestFilterSensitiveLog: (
  obj: GetGeofenceRequest
) => any;
export declare const GetGeofenceResponseFilterSensitiveLog: (
  obj: GetGeofenceResponse
) => any;
export declare const ListGeofenceCollectionsRequestFilterSensitiveLog: (
  obj: ListGeofenceCollectionsRequest
) => any;
export declare const ListGeofenceCollectionsResponseEntryFilterSensitiveLog: (
  obj: ListGeofenceCollectionsResponseEntry
) => any;
export declare const ListGeofenceCollectionsResponseFilterSensitiveLog: (
  obj: ListGeofenceCollectionsResponse
) => any;
export declare const ListGeofencesRequestFilterSensitiveLog: (
  obj: ListGeofencesRequest
) => any;
export declare const ListGeofenceResponseEntryFilterSensitiveLog: (
  obj: ListGeofenceResponseEntry
) => any;
export declare const ListGeofencesResponseFilterSensitiveLog: (
  obj: ListGeofencesResponse
) => any;
export declare const PutGeofenceRequestFilterSensitiveLog: (
  obj: PutGeofenceRequest
) => any;
export declare const PutGeofenceResponseFilterSensitiveLog: (
  obj: PutGeofenceResponse
) => any;
export declare const UpdateGeofenceCollectionRequestFilterSensitiveLog: (
  obj: UpdateGeofenceCollectionRequest
) => any;
export declare const UpdateGeofenceCollectionResponseFilterSensitiveLog: (
  obj: UpdateGeofenceCollectionResponse
) => any;
export declare const GetDevicePositionRequestFilterSensitiveLog: (
  obj: GetDevicePositionRequest
) => any;
export declare const GetDevicePositionResponseFilterSensitiveLog: (
  obj: GetDevicePositionResponse
) => any;
export declare const GetDevicePositionHistoryRequestFilterSensitiveLog: (
  obj: GetDevicePositionHistoryRequest
) => any;
export declare const GetDevicePositionHistoryResponseFilterSensitiveLog: (
  obj: GetDevicePositionHistoryResponse
) => any;
export declare const GetMapGlyphsRequestFilterSensitiveLog: (
  obj: GetMapGlyphsRequest
) => any;
export declare const GetMapGlyphsResponseFilterSensitiveLog: (
  obj: GetMapGlyphsResponse
) => any;
export declare const GetMapSpritesRequestFilterSensitiveLog: (
  obj: GetMapSpritesRequest
) => any;
export declare const GetMapSpritesResponseFilterSensitiveLog: (
  obj: GetMapSpritesResponse
) => any;
export declare const GetMapStyleDescriptorRequestFilterSensitiveLog: (
  obj: GetMapStyleDescriptorRequest
) => any;
export declare const GetMapStyleDescriptorResponseFilterSensitiveLog: (
  obj: GetMapStyleDescriptorResponse
) => any;
export declare const GetMapTileRequestFilterSensitiveLog: (
  obj: GetMapTileRequest
) => any;
export declare const GetMapTileResponseFilterSensitiveLog: (
  obj: GetMapTileResponse
) => any;
export declare const GetPlaceRequestFilterSensitiveLog: (
  obj: GetPlaceRequest
) => any;
export declare const PlaceGeometryFilterSensitiveLog: (
  obj: PlaceGeometry
) => any;
export declare const TimeZoneFilterSensitiveLog: (obj: TimeZone) => any;
export declare const PlaceFilterSensitiveLog: (obj: Place) => any;
export declare const GetPlaceResponseFilterSensitiveLog: (
  obj: GetPlaceResponse
) => any;
export declare const ListDevicePositionsRequestFilterSensitiveLog: (
  obj: ListDevicePositionsRequest
) => any;
export declare const ListDevicePositionsResponseEntryFilterSensitiveLog: (
  obj: ListDevicePositionsResponseEntry
) => any;
export declare const ListDevicePositionsResponseFilterSensitiveLog: (
  obj: ListDevicePositionsResponse
) => any;
export declare const ListMapsRequestFilterSensitiveLog: (
  obj: ListMapsRequest
) => any;
export declare const ListMapsResponseEntryFilterSensitiveLog: (
  obj: ListMapsResponseEntry
) => any;
export declare const ListMapsResponseFilterSensitiveLog: (
  obj: ListMapsResponse
) => any;
export declare const ListPlaceIndexesRequestFilterSensitiveLog: (
  obj: ListPlaceIndexesRequest
) => any;
export declare const ListPlaceIndexesResponseEntryFilterSensitiveLog: (
  obj: ListPlaceIndexesResponseEntry
) => any;
export declare const ListPlaceIndexesResponseFilterSensitiveLog: (
  obj: ListPlaceIndexesResponse
) => any;
export declare const ListRouteCalculatorsRequestFilterSensitiveLog: (
  obj: ListRouteCalculatorsRequest
) => any;
export declare const ListRouteCalculatorsResponseEntryFilterSensitiveLog: (
  obj: ListRouteCalculatorsResponseEntry
) => any;
export declare const ListRouteCalculatorsResponseFilterSensitiveLog: (
  obj: ListRouteCalculatorsResponse
) => any;
export declare const ListTrackerConsumersRequestFilterSensitiveLog: (
  obj: ListTrackerConsumersRequest
) => any;
export declare const ListTrackerConsumersResponseFilterSensitiveLog: (
  obj: ListTrackerConsumersResponse
) => any;
export declare const ListTrackersRequestFilterSensitiveLog: (
  obj: ListTrackersRequest
) => any;
export declare const ListTrackersResponseEntryFilterSensitiveLog: (
  obj: ListTrackersResponseEntry
) => any;
export declare const ListTrackersResponseFilterSensitiveLog: (
  obj: ListTrackersResponse
) => any;
export declare const UpdateMapRequestFilterSensitiveLog: (
  obj: UpdateMapRequest
) => any;
export declare const UpdateMapResponseFilterSensitiveLog: (
  obj: UpdateMapResponse
) => any;
export declare const SearchPlaceIndexForPositionRequestFilterSensitiveLog: (
  obj: SearchPlaceIndexForPositionRequest
) => any;
export declare const SearchForPositionResultFilterSensitiveLog: (
  obj: SearchForPositionResult
) => any;
export declare const SearchPlaceIndexForPositionSummaryFilterSensitiveLog: (
  obj: SearchPlaceIndexForPositionSummary
) => any;
export declare const SearchPlaceIndexForPositionResponseFilterSensitiveLog: (
  obj: SearchPlaceIndexForPositionResponse
) => any;
export declare const SearchPlaceIndexForSuggestionsRequestFilterSensitiveLog: (
  obj: SearchPlaceIndexForSuggestionsRequest
) => any;
export declare const SearchForSuggestionsResultFilterSensitiveLog: (
  obj: SearchForSuggestionsResult
) => any;
export declare const SearchPlaceIndexForSuggestionsSummaryFilterSensitiveLog: (
  obj: SearchPlaceIndexForSuggestionsSummary
) => any;
export declare const SearchPlaceIndexForSuggestionsResponseFilterSensitiveLog: (
  obj: SearchPlaceIndexForSuggestionsResponse
) => any;
export declare const SearchPlaceIndexForTextRequestFilterSensitiveLog: (
  obj: SearchPlaceIndexForTextRequest
) => any;
export declare const SearchForTextResultFilterSensitiveLog: (
  obj: SearchForTextResult
) => any;
export declare const SearchPlaceIndexForTextSummaryFilterSensitiveLog: (
  obj: SearchPlaceIndexForTextSummary
) => any;
export declare const SearchPlaceIndexForTextResponseFilterSensitiveLog: (
  obj: SearchPlaceIndexForTextResponse
) => any;
export declare const UpdatePlaceIndexRequestFilterSensitiveLog: (
  obj: UpdatePlaceIndexRequest
) => any;
export declare const UpdatePlaceIndexResponseFilterSensitiveLog: (
  obj: UpdatePlaceIndexResponse
) => any;
export declare const UpdateRouteCalculatorRequestFilterSensitiveLog: (
  obj: UpdateRouteCalculatorRequest
) => any;
export declare const UpdateRouteCalculatorResponseFilterSensitiveLog: (
  obj: UpdateRouteCalculatorResponse
) => any;
export declare const UpdateTrackerRequestFilterSensitiveLog: (
  obj: UpdateTrackerRequest
) => any;
export declare const UpdateTrackerResponseFilterSensitiveLog: (
  obj: UpdateTrackerResponse
) => any;
