{"version":3,"file":"pushKey.js","names":["isPushKey","obj","apnsKeyP8","apnsKeyId","teamId","MaxKeysCreatedError","Keys","APPLE_KEYS_TOO_MANY_GENERATED_ERROR","chalk","underline","listPushKeysAsync","authCtx","spinner","ora","start","context","getRequestContext","keys","getKeysAsync","succeed","error","fail","createPushKeyAsync","name","dateformat","key","createKeyAsync","isApns","downloadKeyAsync","id","team","teamName","err","resultString","rawDump","match","CommandError","revokePushKeyAsync","ids","length","Promise","all","map","revokeKeyAsync","Log","PushKeyManager","constructor","appleCtx","ctx","list","create","revoke","format"],"sources":["../../src/appleApi/pushKey.ts"],"sourcesContent":["import { Keys } from '@expo/apple-utils';\nimport chalk from 'chalk';\nimport dateformat from 'dateformat';\n\nimport CommandError from '../CommandError';\nimport Log from '../log';\nimport { ora } from '../utils/ora';\nimport { AppleCtx, getRequestContext } from './authenticate';\n\nexport type PushKeyInfo = {\n  id: string;\n  name: string;\n};\n\nexport type PushKey = {\n  apnsKeyP8: string;\n  apnsKeyId: string;\n  teamId: string;\n  teamName?: string;\n};\n\nexport function isPushKey(obj: { [key: string]: any }): obj is PushKey {\n  return (\n    obj.apnsKeyP8 &&\n    typeof obj.apnsKeyP8 === 'string' &&\n    obj.apnsKeyId &&\n    typeof obj.apnsKeyId === 'string' &&\n    obj.teamId &&\n    typeof obj.teamId === 'string'\n  );\n}\n\nconst { MaxKeysCreatedError } = Keys;\n\nconst APPLE_KEYS_TOO_MANY_GENERATED_ERROR = `\nYou can have only ${chalk.underline('two')} Apple Keys generated on your Apple Developer account.\nPlease revoke the old ones or reuse existing from your other apps.\nPlease remember that Apple Keys are not application specific!\n`;\n\nasync function listPushKeysAsync(authCtx: AppleCtx): Promise<PushKeyInfo[]> {\n  const spinner = ora(`Fetching Apple push keys`).start();\n  try {\n    const context = getRequestContext(authCtx);\n    const keys = await Keys.getKeysAsync(context);\n    spinner.succeed(`Fetched Apple push keys`);\n    return keys;\n  } catch (error: any) {\n    spinner.fail(`Failed to fetch Apple push keys`);\n    throw error;\n  }\n}\n\nasync function createPushKeyAsync(\n  authCtx: AppleCtx,\n  name: string = `Expo Push Notifications Key ${dateformat('yyyymmddHHMMss')}`\n): Promise<PushKey> {\n  const spinner = ora(`Creating Apple push key`).start();\n  try {\n    const context = getRequestContext(authCtx);\n    const key = await Keys.createKeyAsync(context, { name, isApns: true });\n    const apnsKeyP8 = await Keys.downloadKeyAsync(context, { id: key.id });\n    spinner.succeed(`Created Apple push key`);\n    return {\n      apnsKeyId: key.id,\n      apnsKeyP8,\n      teamId: authCtx.team.id,\n      teamName: authCtx.team.name,\n    };\n  } catch (err: any) {\n    spinner.fail('Failed to create Apple push key');\n    const resultString = err.rawDump?.resultString;\n    if (\n      err instanceof MaxKeysCreatedError ||\n      (resultString && resultString.match(/maximum allowed number of Keys/))\n    ) {\n      throw new CommandError(APPLE_KEYS_TOO_MANY_GENERATED_ERROR);\n    }\n    throw err;\n  }\n}\n\nasync function revokePushKeyAsync(authCtx: AppleCtx, ids: string[]): Promise<void> {\n  const name = `Apple push key${ids?.length === 1 ? '' : 's'}`;\n\n  const spinner = ora(`Revoking ${name}`).start();\n  try {\n    const context = getRequestContext(authCtx);\n    await Promise.all(ids.map(id => Keys.revokeKeyAsync(context, { id })));\n\n    spinner.succeed(`Revoked ${name}`);\n  } catch (error: any) {\n    Log.error(error);\n    spinner.fail(`Failed to revoke ${name}`);\n    throw error;\n  }\n}\n\nexport class PushKeyManager {\n  ctx: AppleCtx;\n  constructor(appleCtx: AppleCtx) {\n    this.ctx = appleCtx;\n  }\n\n  async list(): Promise<PushKeyInfo[]> {\n    return listPushKeysAsync(this.ctx);\n  }\n\n  async create(name?: string): Promise<PushKey> {\n    return createPushKeyAsync(this.ctx, name);\n  }\n\n  async revoke(ids: string[]) {\n    return revokePushKeyAsync(this.ctx, ids);\n  }\n\n  format({ id, name }: PushKeyInfo): string {\n    return `${name} - ID: ${id}`;\n  }\n}\n"],"mappings":"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"}