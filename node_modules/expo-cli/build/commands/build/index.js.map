{"version":3,"file":"index.js","names":["program","applyAsyncActionProjectDir","command","alias","helpGroup","option","longDescription","description","chalk","yellow","bold","checkConfig"],"sources":["../../../src/commands/build/index.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Command } from 'commander';\n\nimport { applyAsyncActionProjectDir } from '../utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncActionProjectDir(\n    program\n      .command('build:ios [path]')\n      .alias('bi')\n      .helpGroup('deprecated')\n      .option('-c, --clear-credentials', 'Clear all credentials stored on Expo servers.')\n      .option('--clear-dist-cert', 'Remove Distribution Certificate stored on Expo servers.')\n      .option('--clear-push-key', 'Remove Push Notifications Key stored on Expo servers.')\n      .option(\n        '--clear-push-cert',\n        'Remove Push Notifications Certificate stored on Expo servers. Use of Push Notifications Certificates is deprecated.'\n      )\n      .option('--clear-provisioning-profile', 'Remove Provisioning Profile stored on Expo servers.')\n      .option(\n        '-r --revoke-credentials',\n        'Revoke credentials on developer.apple.com, select appropriate using --clear-* options.'\n      )\n      .option(\n        '--apple-id <login>',\n        'Apple ID username (please also set the Apple ID password as EXPO_APPLE_PASSWORD environment variable).'\n      )\n      .option('-t --type <archive|simulator>', 'Type of build: [archive|simulator].')\n      .option('--release-channel <name>', 'Pull from specified release channel.', 'default')\n      .option('--no-publish', 'Disable automatic publishing before building.')\n      .option('--no-wait', 'Exit immediately after scheduling build.')\n      .option('--team-id <apple-teamId>', 'Apple Team ID.')\n      .option(\n        '--dist-p12-path <path>',\n        'Path to your Distribution Certificate P12 (set password as EXPO_IOS_DIST_P12_PASSWORD environment variable).'\n      )\n      .option('--push-id <push-id>', 'Push Key ID (ex: 123AB4C56D).')\n      .option('--push-p8-path <path>', 'Path to your Push Key .p8 file.')\n      .option('--provisioning-profile-path <path>', 'Path to your Provisioning Profile.')\n      .option(\n        '--public-url <url>',\n        'The URL of an externally hosted manifest (for self-hosted apps).'\n      )\n      .option('--skip-credentials-check', 'Skip checking credentials.')\n      .option(\n        '--skip-workflow-check',\n        'Skip warning about build service bare workflow limitations.'\n      )\n      .longDescription('Build and sign a standalone IPA for the Apple App Store')\n      .description(`${chalk.yellow`Superseded`} by ${chalk.bold`eas build`} in eas-cli`),\n    () => import('./buildIosAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('build:android [path]')\n      .alias('ba')\n      .helpGroup('deprecated')\n      .option('-c, --clear-credentials', 'Clear stored credentials.')\n      .option('--release-channel <name>', 'Pull from specified release channel.', 'default')\n      .option('--no-publish', 'Disable automatic publishing before building.')\n      .option('--no-wait', 'Exit immediately after triggering build.')\n      .option('--keystore-path <path>', 'Path to your Keystore: *.jks.')\n      .option('--keystore-alias <alias>', 'Keystore Alias')\n      .option('--generate-keystore', '[deprecated] Generate Keystore if one does not exist')\n      .option(\n        '--public-url <url>',\n        'The URL of an externally hosted manifest (for self-hosted apps)'\n      )\n      .option(\n        '--skip-workflow-check',\n        'Skip warning about build service bare workflow limitations.'\n      )\n      .option('-t --type <app-bundle|apk>', 'Type of build: [app-bundle|apk].')\n      .longDescription('Build and sign a standalone APK or App Bundle for the Google Play Store')\n      .description(`${chalk.yellow`Superseded`} by ${chalk.bold`eas build`} in eas-cli`),\n    () => import('./buildAndroidAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('build:web [path]')\n      .helpGroup('build')\n      .option('-c, --clear', 'Clear all cached build files and assets.')\n      .option(\n        '--no-pwa',\n        'Prevent webpack from generating the manifest.json and injecting meta into the index.html head.'\n      )\n      .option('-d, --dev', 'Turns dev flag on before bundling')\n      .description('Build the web app for production'),\n    () => import('./buildWebAsync')\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('build:status [path]')\n      .alias('bs')\n      .helpGroup('deprecated')\n      .option(\n        '--public-url <url>',\n        'The URL of an externally hosted manifest (for self-hosted apps).'\n      )\n      .longDescription('Get the status of the latest build for the project')\n      .description(`${chalk.yellow`Superseded`} by ${chalk.bold`eas build:list`} in eas-cli`),\n    () => import('./buildStatusAsync')\n  );\n}\n"],"mappings":"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"}