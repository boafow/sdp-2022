{"version":3,"file":"IOSBuilder.js","names":["noBundleIdMessage","missingBundleIdentifierError","XDLError","IOSBuilder","BaseBuilder","run","options","type","utils","askBuildType","archive","simulator","maybeWarnDamagedSimulator","Log","addNewLineIfNone","checkForBuildInProgress","prepareCredentials","publishedExpIds","ensureProjectIsPublished","publicUrl","checkStatusBeforeBuild","build","maybeExplainUploadStep","bestEffortAppleCtx","ctx","hasAppleCtx","appleId","ensureAppleCtx","nonInteractive","parent","confirm","confirmAsync","message","log","chalk","green","checkProjectConfig","sdkVersion","manifest","checkIfSdkIsSupported","PLATFORMS","IOS","validateIcon","getOrPromptForBundleIdentifier","projectDir","updateProjectConfig","getAccountNameAsync","owner","getUserAsync","username","accountName","projectName","slug","bundleIdentifier","ios","appLookupParams","context","Context","init","skipCredentialsCheck","clearAndRevokeCredentialsIfRequested","produceCredentials","e","code","ErrorCodes","NON_INTERACTIVE","newLine","link","TerminalLink","fallbackToTextAndUrl","bold","red","CommandError","appCredentials","getAppCredentials","pushCredentials","getPushKey","distCredentials","getDistCert","displayProjectCredentials","_setupDistCert","distCertFromParams","getDistCertFromParams","useDistCertFromParams","runCredentialsManager","SetupIosDist","error","_setupPushCert","pushKeyFromParams","getPushKeyFromParams","usePushKeyFromParams","SetupIosPush","_setupProvisioningProfile","provisioningProfileFromParams","getProvisioningProfileFromParams","provisioningProfilePath","useProvisioningProfileFromParams","SetupIosProvisioningProfile","apple","ensureBundleIdExistsAsync","appleCtx","enablePushNotifications","clearCredentials","clearDistCert","clearPushKey","clearPushCert","clearProvisioningProfile","shouldClearAnything","credsToClear","determineCredentialsToClear","shouldRevokeOnApple","revokeCredentials","provisioningProfile","getProvisioningProfile","view","RemoveProvisioningProfile","removeSpecific","distributionCert","RemoveIosDist","pushKey","RemoveIosPush","pushCert","getPushCert","deletePushCert","credsToClearAll","Boolean","pickBy","undefined","ensureReleaseExists","platform","icon","ensurePNGIsNotTransparent","err","process","transporterAppLink","learnMore","isMacOsCatalinaOrLater","os","semver","satisfies","release","underline","grey"],"sources":["../../../../src/commands/build/ios/IOSBuilder.ts"],"sourcesContent":["import chalk from 'chalk';\nimport pickBy from 'lodash/pickBy';\nimport os from 'os';\nimport semver from 'semver';\nimport { XDLError } from 'xdl';\n\nimport CommandError, { ErrorCodes } from '../../../CommandError';\nimport * as apple from '../../../appleApi';\nimport { displayProjectCredentials } from '../../../credentials/actions/list';\nimport { Context } from '../../../credentials/context';\nimport { runCredentialsManager } from '../../../credentials/route';\nimport {\n  getDistCertFromParams,\n  RemoveIosDist,\n  useDistCertFromParams,\n} from '../../../credentials/views/IosDistCert';\nimport {\n  getProvisioningProfileFromParams,\n  RemoveProvisioningProfile,\n  useProvisioningProfileFromParams,\n} from '../../../credentials/views/IosProvisioningProfile';\nimport {\n  getPushKeyFromParams,\n  RemoveIosPush,\n  usePushKeyFromParams,\n} from '../../../credentials/views/IosPushCredentials';\nimport { SetupIosDist } from '../../../credentials/views/SetupIosDist';\nimport { SetupIosProvisioningProfile } from '../../../credentials/views/SetupIosProvisioningProfile';\nimport { SetupIosPush } from '../../../credentials/views/SetupIosPush';\nimport Log from '../../../log';\nimport { confirmAsync } from '../../../utils/prompts';\nimport * as TerminalLink from '../../utils/TerminalLink';\nimport { getOrPromptForBundleIdentifier } from '../../utils/getOrPromptApplicationId';\nimport BaseBuilder from '../BaseBuilder';\nimport { PLATFORMS } from '../constants';\nimport * as utils from '../utils';\nimport { ensurePNGIsNotTransparent } from './utils/image';\n\nconst noBundleIdMessage = `Your project must have a \\`bundleIdentifier\\` set in the Expo config (app.json or app.config.js).\\nSee https://expo.fyi/bundle-identifier`;\n\nfunction missingBundleIdentifierError() {\n  return new XDLError('INVALID_OPTIONS', noBundleIdMessage);\n}\n\ninterface AppLookupParams {\n  accountName: string;\n  projectName: string;\n  bundleIdentifier: string;\n}\n\nclass IOSBuilder extends BaseBuilder {\n  async run(): Promise<void> {\n    // This gets run after all other validation to prevent users from having to answer this question multiple times.\n    this.options.type = await utils.askBuildType(this.options.type!, {\n      archive: 'Deploy the build to the store',\n      simulator: 'Run the build on a simulator',\n    });\n    this.maybeWarnDamagedSimulator();\n    Log.addNewLineIfNone();\n    await this.checkForBuildInProgress();\n    if (this.options.type === 'archive') {\n      await this.prepareCredentials();\n    }\n    const publishedExpIds = await this.ensureProjectIsPublished();\n    if (!this.options.publicUrl) {\n      await this.checkStatusBeforeBuild();\n    }\n    await this.build(publishedExpIds);\n\n    this.maybeExplainUploadStep();\n    this.maybeWarnDamagedSimulator();\n  }\n\n  // Try to get the user to provide Apple credentials upfront\n  // We will be able to do full validation of their iOS creds this way\n  async bestEffortAppleCtx(ctx: Context): Promise<void> {\n    if (ctx.hasAppleCtx()) {\n      // skip prompts if already have apple ctx\n      return;\n    }\n    if (this.options.appleId) {\n      // skip prompts and auto authenticate if flags are passed\n      return await ctx.ensureAppleCtx();\n    }\n\n    const nonInteractive = this.options.parent && this.options.parent.nonInteractive;\n    if (nonInteractive) {\n      return;\n    }\n\n    const confirm = await confirmAsync({\n      message: `Do you have access to the Apple account that will be used for submitting this app to the App Store?`,\n    });\n    if (confirm) {\n      return await ctx.ensureAppleCtx();\n    } else {\n      Log.log(\n        chalk.green(\n          'No problem! ðŸ‘Œ \\nWe canâ€™t auto-generate credentials if you donâ€™t have access to the main Apple account. \\nBut we can still set it up if you upload your credentials.'\n        )\n      );\n    }\n  }\n\n  // All config validation should happen here before any build logic takes place.\n  // It's important that the errors are revealed in a thoughtful manner.\n  async checkProjectConfig(): Promise<void> {\n    // Run this first because the error messages are related\n    // to ExpoKit which is harder to change than the bundle ID.\n    await super.checkProjectConfig();\n\n    // Check the SDK version next as it's the second hardest thing to change.\n    const sdkVersion = this.manifest.sdkVersion;\n\n    await utils.checkIfSdkIsSupported(sdkVersion!, PLATFORMS.IOS);\n\n    // Validate the icon third since it's fairly easy to modify.\n    await this.validateIcon();\n\n    // Check the bundle ID and possibly prompt the user to add a new one.\n    await getOrPromptForBundleIdentifier(this.projectDir);\n    // Update with the latest bundle ID\n    this.updateProjectConfig();\n  }\n\n  private async getAccountNameAsync(): Promise<string> {\n    if (this.manifest.owner) return this.manifest.owner;\n    return (await this.getUserAsync())?.username;\n  }\n\n  private async prepareCredentials() {\n    const accountName = await this.getAccountNameAsync();\n    const projectName = this.manifest.slug;\n    const bundleIdentifier = this.manifest.ios?.bundleIdentifier;\n    if (!bundleIdentifier) throw missingBundleIdentifierError();\n    const appLookupParams = {\n      accountName,\n      projectName,\n      bundleIdentifier,\n    };\n    const context = new Context();\n    await context.init(this.projectDir, {\n      ...this.options,\n      nonInteractive: this.options.parent?.nonInteractive,\n    });\n\n    if (this.options.skipCredentialsCheck) {\n      Log.log('Skipping credentials check...');\n      return;\n    }\n    await this.bestEffortAppleCtx(context);\n    await this.clearAndRevokeCredentialsIfRequested(context, appLookupParams);\n\n    try {\n      await this.produceCredentials(context, appLookupParams);\n    } catch (e: any) {\n      if (e.code === ErrorCodes.NON_INTERACTIVE) {\n        Log.newLine();\n        const link = TerminalLink.fallbackToTextAndUrl(\n          'expo.fyi/credentials-non-interactive',\n          'https://expo.fyi/credentials-non-interactive'\n        );\n        Log.log(\n          chalk.bold.red(\n            `Additional information needed to setup credentials in non-interactive mode.`\n          )\n        );\n        Log.log(chalk.bold.red(`Learn more about how to resolve this: ${link}.`));\n        Log.newLine();\n\n        // We don't want to display project credentials when we bail out due to\n        // non-interactive mode error, because we are unable to recover without\n        // user input.\n        throw new CommandError(\n          ErrorCodes.NON_INTERACTIVE,\n          'Unable to proceed, see the above error message.'\n        );\n      }\n\n      Log.log(\n        chalk.bold.red(\n          'Failed to prepare all credentials. \\nThe next time you build, we will automatically use the following configuration:'\n        )\n      );\n      throw e;\n    } finally {\n      const appCredentials = await context.ios.getAppCredentials(appLookupParams);\n      const pushCredentials = await context.ios.getPushKey(appLookupParams);\n      const distCredentials = await context.ios.getDistCert(appLookupParams);\n      displayProjectCredentials(appLookupParams, appCredentials, pushCredentials, distCredentials);\n    }\n  }\n\n  async _setupDistCert(ctx: Context, appLookupParams: AppLookupParams): Promise<void> {\n    try {\n      const distCertFromParams = await getDistCertFromParams(this.options);\n      if (distCertFromParams) {\n        await useDistCertFromParams(ctx, appLookupParams, distCertFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosDist(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Distribution Certificate');\n      throw e;\n    }\n  }\n\n  async _setupPushCert(ctx: Context, appLookupParams: AppLookupParams): Promise<void> {\n    try {\n      const pushKeyFromParams = await getPushKeyFromParams(this.options);\n      if (pushKeyFromParams) {\n        await usePushKeyFromParams(ctx, appLookupParams, pushKeyFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosPush(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Push Key');\n      throw e;\n    }\n  }\n\n  async _setupProvisioningProfile(ctx: Context, appLookupParams: AppLookupParams) {\n    try {\n      const provisioningProfileFromParams = await getProvisioningProfileFromParams(\n        this.options.provisioningProfilePath\n      );\n      if (provisioningProfileFromParams) {\n        await useProvisioningProfileFromParams(ctx, appLookupParams, provisioningProfileFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosProvisioningProfile(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Provisioning Profile');\n      throw e;\n    }\n  }\n\n  async produceCredentials(ctx: Context, appLookupParams: AppLookupParams) {\n    if (ctx.hasAppleCtx()) {\n      await apple.ensureBundleIdExistsAsync(ctx.appleCtx, appLookupParams, {\n        enablePushNotifications: true,\n      });\n    }\n    await this._setupDistCert(ctx, appLookupParams);\n    await this._setupPushCert(ctx, appLookupParams);\n    await this._setupProvisioningProfile(ctx, appLookupParams);\n  }\n\n  async clearAndRevokeCredentialsIfRequested(\n    ctx: Context,\n    appLookupParams: AppLookupParams\n  ): Promise<void> {\n    const {\n      clearCredentials,\n      clearDistCert,\n      clearPushKey,\n      clearPushCert,\n      clearProvisioningProfile,\n    } = this.options;\n    const shouldClearAnything =\n      clearCredentials ||\n      clearDistCert ||\n      clearPushKey ||\n      clearPushCert ||\n      clearProvisioningProfile;\n    if (shouldClearAnything) {\n      const credsToClear = this.determineCredentialsToClear();\n      await this.clearCredentials(ctx, appLookupParams, credsToClear);\n    }\n  }\n\n  async clearCredentials(\n    ctx: Context,\n    appLookupParams: AppLookupParams,\n    credsToClear: Record<string, boolean>\n  ): Promise<void> {\n    const shouldRevokeOnApple = this.options.revokeCredentials;\n\n    const provisioningProfile = await ctx.ios.getProvisioningProfile(appLookupParams);\n    if (credsToClear.provisioningProfile && provisioningProfile) {\n      const view = new RemoveProvisioningProfile(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, appLookupParams);\n    }\n\n    const distributionCert = await ctx.ios.getDistCert(appLookupParams);\n    if (credsToClear.distributionCert && distributionCert) {\n      const view = new RemoveIosDist(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, distributionCert);\n    }\n\n    const pushKey = await ctx.ios.getPushKey(appLookupParams);\n    if (credsToClear.pushKey && pushKey) {\n      const view = new RemoveIosPush(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, pushKey);\n    }\n\n    const pushCert = await ctx.ios.getPushCert(appLookupParams);\n    if (credsToClear.pushCert && pushCert) {\n      await ctx.ios.deletePushCert(appLookupParams);\n    }\n  }\n\n  determineCredentialsToClear(): Record<string, boolean> {\n    const {\n      clearCredentials,\n      clearDistCert,\n      clearPushKey,\n      clearPushCert,\n      clearProvisioningProfile,\n    } = this.options;\n    const credsToClearAll = {\n      distributionCert: Boolean(clearCredentials || clearDistCert),\n      pushKey: Boolean(clearCredentials || clearPushKey),\n      // TODO: backward compatibility, remove when all users migrate to push keys\n      pushCert: Boolean(clearCredentials || clearPushCert),\n      provisioningProfile: Boolean(clearCredentials || clearProvisioningProfile),\n    };\n    return pickBy(credsToClearAll);\n  }\n\n  async ensureProjectIsPublished() {\n    if (this.options.publicUrl) {\n      return undefined;\n    } else {\n      return await this.ensureReleaseExists();\n    }\n  }\n\n  platform() {\n    return PLATFORMS.IOS;\n  }\n\n  // validates whether the icon doesn't have transparency\n  async validateIcon() {\n    // TODO: maybe recommend the icon builder website.\n    try {\n      const icon = this.manifest.ios?.icon ?? this.manifest.icon;\n      if (!icon) {\n        // icon is optional\n        return;\n      }\n      await ensurePNGIsNotTransparent(icon);\n    } catch (err: any) {\n      if (err instanceof XDLError) {\n        throw err;\n      } else {\n        // something weird happened, let's assume the icon is correct\n      }\n    }\n  }\n\n  maybeExplainUploadStep() {\n    if (process.platform !== 'darwin' || this.options.type === 'simulator') {\n      return;\n    }\n\n    Log.newLine();\n    Log.log(\n      `You can now publish to the App Store with ${TerminalLink.transporterAppLink()} or ${chalk.bold(\n        'eas submit --platform ios'\n      )}. ${TerminalLink.learnMore('https://docs.expo.dev/distribution/uploading-apps/')}`\n    );\n  }\n\n  // warns for \"damaged\" builds when targeting simulator\n  // see: https://github.com/expo/expo-cli/issues/1197\n  maybeWarnDamagedSimulator() {\n    // see: https://en.wikipedia.org/wiki/Darwin_%28operating_system%29#Release_history\n    const isMacOsCatalinaOrLater =\n      os.platform() === 'darwin' && semver.satisfies(os.release(), '>=19.0.0');\n\n    if (isMacOsCatalinaOrLater && this.options.type === 'simulator') {\n      Log.newLine();\n      Log.log(\n        chalk.bold(\n          `ðŸš¨ If the build is not installable on your simulator because of \"${chalk.underline(\n            `... is damaged and can't be opened.`\n          )}\", please run:`\n        )\n      );\n      Log.log(chalk.grey.bold('xattr -rd com.apple.quarantine /path/to/your.app'));\n    }\n  }\n}\n\nexport default IOSBuilder;\n"],"mappings":"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"}