{"version":3,"file":"clientInstallIosAsync.js","names":["actionAsync","options","forceLatest","latest","currentSdkConfig","ClientUpgradeUtils","getExpoSdkConfig","process","cwd","currentSdkVersion","sdkVersion","undefined","sdkVersions","Versions","sdkVersionsAsync","latestSdk","newestReleasedSdkVersionAsync","currentSdk","recommendedClient","getClient","latestClient","data","url","Log","error","chalk","bold","Simulator","upgradeExpoAsync","version","log","recommendedClientVersion","answer","confirmAsync","message","availableClients","getAvailableClients","project","platform","length","targetClient","askClientToInstall","latestSdkVersion","clients","clientUrl"],"sources":["../../../src/commands/client/clientInstallIosAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { Simulator, Versions } from 'xdl';\n\nimport Log from '../../log';\nimport { confirmAsync } from '../../utils/prompts';\nimport * as ClientUpgradeUtils from '../utils/ClientUpgradeUtils';\n\ntype Options = {\n  latest?: boolean;\n};\n\nexport async function actionAsync(options: Options) {\n  const forceLatest = !!options.latest;\n  const currentSdkConfig = await ClientUpgradeUtils.getExpoSdkConfig(process.cwd());\n  const currentSdkVersion = currentSdkConfig ? currentSdkConfig.sdkVersion : undefined;\n  const sdkVersions = await Versions.sdkVersionsAsync();\n  const latestSdk = await Versions.newestReleasedSdkVersionAsync();\n  const currentSdk = sdkVersions[currentSdkVersion!];\n  const recommendedClient = ClientUpgradeUtils.getClient('ios', currentSdk);\n  const latestClient = ClientUpgradeUtils.getClient('ios', latestSdk.data);\n\n  if (forceLatest) {\n    if (!latestClient?.url) {\n      Log.error(\n        `Unable to find latest client version. Check your internet connection or run this command again without the ${chalk.bold(\n          '--latest'\n        )} flag.`\n      );\n      return;\n    }\n\n    if (\n      await Simulator.upgradeExpoAsync({ url: latestClient.url, version: latestClient.version })\n    ) {\n      Log.log('Done!');\n    } else {\n      Log.error(`Unable to install Expo Go ${latestClient.version} for iOS.`);\n    }\n    return;\n  }\n\n  if (!currentSdkVersion) {\n    Log.log(\n      'Could not find your Expo project. If you run this from a project, we can help pick the right Expo Go version!'\n    );\n  }\n\n  if (currentSdk && !recommendedClient) {\n    Log.log(\n      `You are currently using SDK ${currentSdkVersion}. Unfortunately, we couldn't detect the proper client version for this SDK.`\n    );\n  }\n\n  if (currentSdk && recommendedClient) {\n    const recommendedClientVersion = recommendedClient.version || 'version unknown';\n    const answer = await confirmAsync({\n      message: `You are currently using SDK ${currentSdkVersion}. Would you like to install client ${recommendedClientVersion} released for this SDK?`,\n    });\n    if (answer) {\n      await Simulator.upgradeExpoAsync({\n        url: recommendedClient.url,\n        version: recommendedClient.version,\n      });\n      Log.log('Done!');\n      return;\n    }\n  } else {\n    const answer = await confirmAsync({\n      message: latestClient?.version\n        ? chalk`Do you want to install the latest client? {dim (${latestClient.version})}`\n        : 'Do you want to install the latest client?',\n    });\n    if (answer) {\n      await Simulator.upgradeExpoAsync({\n        url: latestClient?.url,\n        version: latestClient?.version,\n      });\n      Log.log('Done!');\n      return;\n    }\n  }\n\n  const availableClients = ClientUpgradeUtils.getAvailableClients({\n    sdkVersions,\n    project: currentSdkConfig,\n    platform: 'ios',\n  });\n\n  if (availableClients.length === 0) {\n    const answer = await confirmAsync({\n      message: currentSdk\n        ? `We don't have a compatible client for SDK ${currentSdkVersion}. Do you want to try the latest client?`\n        : \"It looks like we don't have a compatible client. Do you want to try the latest client?\",\n    });\n    if (answer) {\n      await Simulator.upgradeExpoAsync({\n        url: latestClient?.url,\n        version: latestClient?.version,\n      });\n      Log.log('Done!');\n    } else {\n      Log.log('No client to install');\n    }\n    return;\n  }\n\n  const targetClient = await ClientUpgradeUtils.askClientToInstall({\n    currentSdkVersion,\n    latestSdkVersion: latestSdk.version,\n    clients: availableClients,\n  });\n\n  if (await Simulator.upgradeExpoAsync({ url: targetClient.clientUrl })) {\n    Log.log('Done!');\n  }\n}\n"],"mappings":"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"}