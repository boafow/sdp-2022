{"version":3,"file":"createNativeProjectsFromTemplateAsync.js","names":["directoryExistsAsync","file","fs","stat","catch","isDirectory","createNativeProjectsFromTemplateAsync","projectRoot","exp","pkg","template","tempDir","platforms","skipDependencyUpdate","copiedPaths","cloneNativeDirectoriesAsync","writeMetroConfig","depsResults","updatePackageJSONAsync","hasNewProjectFiles","length","needsPodInstall","includes","hasNewDependencies","hasNewDevDependencies","creatingNativeProjectStep","logNewSection","targetPaths","getTargetPaths","skippedPaths","resolveTemplateArgAsync","name","templatePackageName","getTemplateNpmPackageName","sdkVersion","downloadAndExtractNpmModuleAsync","cwd","copyPathsFromTemplateAsync","results","GitIgnore","mergeGitIgnorePaths","path","join","message","chalk","dim","map","bold","didMerge","didClear","succeed","e","AbortCommandError","Log","error","fail","log","yellow","SilentError","semver","major","templatePath","paths","targetPath","projectPath","push","copySync","bareEntryFile","resolveBareEntryFile","main","isPkgMainExpoAppEntry","resolvedMainField","extensions","getBareExtensions","getFileWithExtensions"],"sources":["../../../src/commands/eject/createNativeProjectsFromTemplateAsync.ts"],"sourcesContent":["import { ExpoConfig, PackageJSONConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport { getBareExtensions, getFileWithExtensions } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport semver from 'semver';\n\nimport { AbortCommandError, SilentError } from '../../CommandError';\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport * as GitIgnore from '../utils/GitIgnore';\nimport { downloadAndExtractNpmModuleAsync } from '../utils/npm';\nimport { resolveTemplateArgAsync } from './Github';\nimport {\n  DependenciesModificationResults,\n  isPkgMainExpoAppEntry,\n  updatePackageJSONAsync,\n} from './updatePackageJson';\nimport { writeMetroConfig } from './writeMetroConfig';\n\nasync function directoryExistsAsync(file: string): Promise<boolean> {\n  return (await fs.stat(file).catch(() => null))?.isDirectory() ?? false;\n}\n\n/**\n *\n * @param projectRoot\n * @param tempDir\n *\n * @return `true` if the project is ejecting, and `false` if it's syncing.\n */\nexport async function createNativeProjectsFromTemplateAsync({\n  projectRoot,\n  exp,\n  pkg,\n  template,\n  tempDir,\n  platforms,\n  skipDependencyUpdate,\n}: {\n  projectRoot: string;\n  exp: ExpoConfig;\n  pkg: PackageJSONConfig;\n  template?: string;\n  tempDir: string;\n  platforms: ModPlatform[];\n  skipDependencyUpdate?: string[];\n}): Promise<\n  { hasNewProjectFiles: boolean; needsPodInstall: boolean } & DependenciesModificationResults\n> {\n  const copiedPaths = await cloneNativeDirectoriesAsync({\n    projectRoot,\n    template,\n    tempDir,\n    exp,\n    pkg,\n    platforms,\n  });\n\n  writeMetroConfig({ projectRoot, pkg, tempDir });\n\n  const depsResults = await updatePackageJSONAsync({\n    projectRoot,\n    tempDir,\n    pkg,\n    skipDependencyUpdate,\n  });\n\n  return {\n    hasNewProjectFiles: !!copiedPaths.length,\n    // If the iOS folder changes or new packages are added, we should rerun pod install.\n    needsPodInstall:\n      copiedPaths.includes('ios') ||\n      depsResults.hasNewDependencies ||\n      depsResults.hasNewDevDependencies,\n    ...depsResults,\n  };\n}\n\n/**\n * Extract the template and copy the ios and android directories over to the project directory.\n *\n * @param force should create native projects even if they already exist.\n * @return `true` if any project files were created.\n */\nasync function cloneNativeDirectoriesAsync({\n  projectRoot,\n  tempDir,\n  template,\n  exp,\n  pkg,\n  platforms,\n}: {\n  projectRoot: string;\n  tempDir: string;\n  template?: string;\n  exp: Pick<ExpoConfig, 'name' | 'sdkVersion'>;\n  pkg: PackageJSONConfig;\n  platforms: ModPlatform[];\n}): Promise<string[]> {\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additional context for steps\n  const creatingNativeProjectStep = logNewSection(\n    'Creating native project directories (./ios and ./android) and updating .gitignore'\n  );\n\n  const targetPaths = getTargetPaths(projectRoot, pkg, platforms);\n\n  let copiedPaths: string[] = [];\n  let skippedPaths: string[] = [];\n  try {\n    if (template) {\n      await resolveTemplateArgAsync(tempDir, creatingNativeProjectStep, exp.name, template);\n    } else {\n      const templatePackageName = await getTemplateNpmPackageName(exp.sdkVersion);\n      await downloadAndExtractNpmModuleAsync(templatePackageName, {\n        cwd: tempDir,\n        name: exp.name,\n      });\n    }\n    [copiedPaths, skippedPaths] = await copyPathsFromTemplateAsync(\n      projectRoot,\n      tempDir,\n      targetPaths\n    );\n    const results = GitIgnore.mergeGitIgnorePaths(\n      path.join(projectRoot, '.gitignore'),\n      path.join(tempDir, '.gitignore')\n    );\n\n    let message = `Created native project${platforms.length > 1 ? 's' : ''}`;\n\n    if (skippedPaths.length) {\n      message += chalk.dim(\n        ` | ${skippedPaths.map(path => chalk.bold(`/${path}`)).join(', ')} already created`\n      );\n    }\n    if (!results?.didMerge) {\n      message += chalk.dim(` | gitignore already synced`);\n    } else if (results.didMerge && results.didClear) {\n      message += chalk.dim(` | synced gitignore`);\n    }\n    creatingNativeProjectStep.succeed(message);\n  } catch (e: any) {\n    if (!(e instanceof AbortCommandError)) {\n      Log.error(e.message);\n    }\n    creatingNativeProjectStep.fail('Failed to create the native project.');\n    Log.log(\n      chalk.yellow(\n        'You may want to delete the `./ios` and/or `./android` directories before trying again.'\n      )\n    );\n    throw new SilentError(e);\n  }\n\n  return copiedPaths;\n}\n\n/** Given an `sdkVersion` like `44.0.0` return a fully qualified NPM package name like: `expo-template-bare-minimum@sdk-44` */\nfunction getTemplateNpmPackageName(sdkVersion?: string): string {\n  // When undefined or UNVERSIONED, we use the latest version.\n  if (!sdkVersion || sdkVersion === 'UNVERSIONED') {\n    Log.log('Using an unspecified Expo SDK version. The latest template will be used.');\n    return `expo-template-bare-minimum@latest`;\n  }\n  return `expo-template-bare-minimum@sdk-${semver.major(sdkVersion)}`;\n}\n\nasync function copyPathsFromTemplateAsync(\n  projectRoot: string,\n  templatePath: string,\n  paths: string[]\n): Promise<[string[], string[]]> {\n  const copiedPaths = [];\n  const skippedPaths = [];\n  for (const targetPath of paths) {\n    const projectPath = path.join(projectRoot, targetPath);\n    if (!(await directoryExistsAsync(projectPath))) {\n      copiedPaths.push(targetPath);\n      fs.copySync(path.join(templatePath, targetPath), projectPath);\n    } else {\n      skippedPaths.push(targetPath);\n    }\n  }\n  return [copiedPaths, skippedPaths];\n}\n\nfunction getTargetPaths(projectRoot: string, pkg: PackageJSONConfig, platforms: ModPlatform[]) {\n  const targetPaths: string[] = [...platforms];\n\n  const bareEntryFile = resolveBareEntryFile(projectRoot, pkg.main);\n  // Only create index.js if we cannot resolve the existing entry point (after replacing the expo entry).\n  if (!bareEntryFile) {\n    targetPaths.push('index.js');\n  }\n\n  return targetPaths;\n}\n\nexport function resolveBareEntryFile(projectRoot: string, main: any) {\n  // expo app entry is not needed for bare projects.\n  if (isPkgMainExpoAppEntry(main)) return null;\n  // Look at the `package.json`s `main` field for the main file.\n  const resolvedMainField = main ?? './index';\n  // Get a list of possible extensions for the main file.\n  const extensions = getBareExtensions(['ios', 'android']);\n  // Testing the main field against all of the provided extensions - for legacy reasons we can't use node module resolution as the package.json allows you to pass in a file without a relative path and expect it as a relative path.\n  return getFileWithExtensions(projectRoot, resolvedMainField, extensions);\n}\n"],"mappings":"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"}