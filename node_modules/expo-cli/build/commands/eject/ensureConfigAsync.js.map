{"version":3,"file":"ensureConfigAsync.js","names":["ensureConfigExistsAsync","projectRoot","config","getConfig","skipSDKVersionRequirement","dynamicConfigPath","staticConfigPath","exp","_internal","JsonFile","writeAsync","path","join","expo","json5","error","Log","addNewLineIfNone","CommandError","message","ensureConfigAsync","platforms","includes","getOrPromptForPackage","getOrPromptForBundleIdentifier","pkg","entryPoint","log"],"sources":["../../../src/commands/eject/ensureConfigAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfig, PackageJSONConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport JsonFile, { JSONObject } from '@expo/json-file';\nimport path from 'path';\n\nimport CommandError from '../../CommandError';\nimport Log from '../../log';\nimport {\n  getOrPromptForBundleIdentifier,\n  getOrPromptForPackage,\n} from '../utils/getOrPromptApplicationId';\n\n/**\n * If an Expo config file does not exist, write a new one using the in-memory config.\n *\n * @param projectRoot\n */\nexport async function ensureConfigExistsAsync(projectRoot: string) {\n  try {\n    const config = getConfig(projectRoot, { skipSDKVersionRequirement: false });\n    // If no config exists in the file system then we should generate one so the process doesn't fail.\n    if (!config.dynamicConfigPath && !config.staticConfigPath) {\n      // Remove the internal object before writing.\n      delete config.exp._internal;\n\n      // Don't check for a custom config path because the process should fail if a custom file doesn't exist.\n      // Write the generated config.\n      // writeConfigJsonAsync(projectRoot, config.exp);\n      await JsonFile.writeAsync(\n        // TODO: Write to app.config.json because it's easier to convert to a js config file.\n        path.join(projectRoot, 'app.json'),\n        { expo: (config.exp as unknown) as JSONObject },\n        { json5: false }\n      );\n    }\n  } catch (error: any) {\n    // TODO(Bacon): Currently this is already handled in the command\n    Log.addNewLineIfNone();\n    throw new CommandError(`${error.message}\\n`);\n  }\n}\n\nexport async function ensureConfigAsync({\n  projectRoot,\n  platforms,\n}: {\n  projectRoot: string;\n  platforms: ModPlatform[];\n}): Promise<{ exp: ExpoConfig; pkg: PackageJSONConfig }> {\n  await ensureConfigExistsAsync(projectRoot);\n\n  // Prompt for the Android package first because it's more strict than the bundle identifier\n  // this means you'll have a better chance at matching the bundle identifier with the package name.\n  if (platforms.includes('android')) {\n    await getOrPromptForPackage(projectRoot);\n  }\n\n  if (platforms.includes('ios')) {\n    await getOrPromptForBundleIdentifier(projectRoot);\n  }\n\n  // We need the SDK version to proceed\n  const { exp, pkg } = getConfig(projectRoot);\n\n  // TODO: Should we attempt to persist this change?\n  if (exp.entryPoint) {\n    delete exp.entryPoint;\n    Log.log(`\\u203A expo.entryPoint is not needed and has been removed.`);\n  }\n\n  // Read config again because prompting for bundle id or package name may have mutated the results.\n  return { exp, pkg };\n}\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAG2C;AAE3C;AACA;AACA;AACA;AACA;AACO,eAAeA,uBAAuB,CAACC,WAAmB,EAAE;EACjE,IAAI;IACF,MAAMC,MAAM,GAAG,IAAAC,mBAAS,EAACF,WAAW,EAAE;MAAEG,yBAAyB,EAAE;IAAM,CAAC,CAAC;IAC3E;IACA,IAAI,CAACF,MAAM,CAACG,iBAAiB,IAAI,CAACH,MAAM,CAACI,gBAAgB,EAAE;MACzD;MACA,OAAOJ,MAAM,CAACK,GAAG,CAACC,SAAS;;MAE3B;MACA;MACA;MACA,MAAMC,mBAAQ,CAACC,UAAU;MACvB;MACAC,eAAI,CAACC,IAAI,CAACX,WAAW,EAAE,UAAU,CAAC,EAClC;QAAEY,IAAI,EAAGX,MAAM,CAACK;MAA8B,CAAC,EAC/C;QAAEO,KAAK,EAAE;MAAM,CAAC,CACjB;IACH;EACF,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB;IACAC,cAAG,CAACC,gBAAgB,EAAE;IACtB,MAAM,KAAIC,uBAAY,EAAE,GAAEH,KAAK,CAACI,OAAQ,IAAG,CAAC;EAC9C;AACF;AAEO,eAAeC,iBAAiB,CAAC;EACtCnB,WAAW;EACXoB;AAIF,CAAC,EAAwD;EACvD,MAAMrB,uBAAuB,CAACC,WAAW,CAAC;;EAE1C;EACA;EACA,IAAIoB,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;IACjC,MAAM,IAAAC,iDAAqB,EAACtB,WAAW,CAAC;EAC1C;EAEA,IAAIoB,SAAS,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;IAC7B,MAAM,IAAAE,0DAA8B,EAACvB,WAAW,CAAC;EACnD;;EAEA;EACA,MAAM;IAAEM,GAAG;IAAEkB;EAAI,CAAC,GAAG,IAAAtB,mBAAS,EAACF,WAAW,CAAC;;EAE3C;EACA,IAAIM,GAAG,CAACmB,UAAU,EAAE;IAClB,OAAOnB,GAAG,CAACmB,UAAU;IACrBV,cAAG,CAACW,GAAG,CAAE,4DAA2D,CAAC;EACvE;;EAEA;EACA,OAAO;IAAEpB,GAAG;IAAEkB;EAAI,CAAC;AACrB"}