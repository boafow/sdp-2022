{"version":3,"file":"updatePackageJson.js","names":["updatePackageJSONAsync","projectRoot","tempDir","pkg","skipDependencyUpdate","updatingPackageJsonStep","logNewSection","updatePackageJSONScripts","results","updatePackageJSONDependencies","removedPkgMain","updatePackageJSONEntryPoint","fs","writeFile","path","resolve","JSON","stringify","succeed","Log","log","chalk","bold","newLine","devDependencies","dependencies","getPackageJson","defaultDependencies","createDependenciesMap","defaultDevDependencies","combinedDependencies","requiredDependencies","filter","depKey","symlinkedPackages","dependenciesKey","isModuleSymlinked","moduleId","isSilent","push","includes","length","map","join","combinedDevDependencies","hasNewDependencies","hashForDependencyMap","hasNewDevDependencies","Object","assign","Error","outputMap","key","keys","value","scripts","start","android","ios","shouldDeleteMainField","main","isPkgMainExpoAppEntry","input","startsWith","normalizeDependencyMap","deps","dependency","sort","depsList","depsString","createFileHash","contents","crypto","createHash","update","digest"],"sources":["../../../src/commands/eject/updatePackageJson.ts"],"sourcesContent":["import { getPackageJson, PackageJSONConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport crypto from 'crypto';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport { isModuleSymlinked } from '../utils/isModuleSymlinked';\n\nexport type DependenciesMap = { [key: string]: string | number };\n\nexport type DependenciesModificationResults = {\n  hasNewDependencies: boolean;\n  hasNewDevDependencies: boolean;\n};\n\nexport async function updatePackageJSONAsync({\n  projectRoot,\n  tempDir,\n  pkg,\n  skipDependencyUpdate,\n}: {\n  projectRoot: string;\n  tempDir: string;\n  pkg: PackageJSONConfig;\n  skipDependencyUpdate?: string[];\n}): Promise<DependenciesModificationResults> {\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additional context for steps\n  const updatingPackageJsonStep = logNewSection(\n    'Updating your package.json scripts, dependencies, and main file'\n  );\n\n  updatePackageJSONScripts({ pkg });\n\n  const results = updatePackageJSONDependencies({\n    projectRoot,\n    pkg,\n    tempDir,\n    skipDependencyUpdate,\n  });\n\n  const removedPkgMain = updatePackageJSONEntryPoint({ pkg });\n  await fs.writeFile(\n    path.resolve(projectRoot, 'package.json'),\n    // Add new line to match the format of running yarn.\n    // This prevents the `package.json` from changing when running `prebuild --no-install` multiple times.\n    JSON.stringify(pkg, null, 2) + '\\n'\n  );\n\n  updatingPackageJsonStep.succeed(\n    'Updated package.json and added index.js entry point for iOS and Android'\n  );\n  if (removedPkgMain) {\n    Log.log(\n      `\\u203A Removed ${chalk.bold(\n        `\"main\": \"${removedPkgMain}\"`\n      )} from package.json because we recommend using index.js as main instead`\n    );\n    Log.newLine();\n  }\n\n  return results;\n}\n\n/**\n * Update package.json dependencies by combining the dependencies in the project we are ejecting\n * with the dependencies in the template project. Does the same for devDependencies.\n *\n * - The template may have some dependencies beyond react/react-native/react-native-unimodules,\n *   for example RNGH and Reanimated. We should prefer the version that is already being used\n *   in the project for those, but swap the react/react-native/react-native-unimodules versions\n *   with the ones in the template.\n * - The same applies to expo-updates -- since some native project configuration may depend on the\n *   version, we should always use the version of expo-updates in the template.\n */\nexport function updatePackageJSONDependencies({\n  projectRoot,\n  tempDir,\n  pkg,\n  skipDependencyUpdate = [],\n}: {\n  projectRoot: string;\n  tempDir: string;\n  pkg: PackageJSONConfig;\n  skipDependencyUpdate?: string[];\n}): DependenciesModificationResults {\n  if (!pkg.devDependencies) {\n    pkg.devDependencies = {};\n  }\n  const { dependencies, devDependencies } = getPackageJson(tempDir);\n  const defaultDependencies = createDependenciesMap(dependencies);\n  const defaultDevDependencies = createDependenciesMap(devDependencies);\n\n  const combinedDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDependencies,\n    ...pkg.dependencies,\n  });\n\n  const requiredDependencies = [\n    'react',\n    'react-native-unimodules',\n    'react-native',\n    'expo-updates',\n  ].filter(depKey => !!defaultDependencies[depKey]);\n\n  const symlinkedPackages: string[] = [];\n\n  for (const dependenciesKey of requiredDependencies) {\n    if (\n      // If the local package.json defined the dependency that we want to overwrite...\n      pkg.dependencies?.[dependenciesKey]\n    ) {\n      if (\n        // Then ensure it isn't symlinked (i.e. the user has a custom version in their yarn workspace).\n        isModuleSymlinked({ projectRoot, moduleId: dependenciesKey, isSilent: true })\n      ) {\n        // If the package is in the project's package.json and it's symlinked, then skip overwriting it.\n        symlinkedPackages.push(dependenciesKey);\n        continue;\n      }\n      if (skipDependencyUpdate.includes(dependenciesKey)) {\n        continue;\n      }\n    }\n    combinedDependencies[dependenciesKey] = defaultDependencies[dependenciesKey];\n  }\n\n  if (symlinkedPackages.length) {\n    Log.log(\n      `\\u203A Using symlinked ${symlinkedPackages\n        .map(pkg => chalk.bold(pkg))\n        .join(', ')} instead of recommended version(s).`\n    );\n  }\n\n  const combinedDevDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDevDependencies,\n    ...pkg.devDependencies,\n  });\n\n  // Only change the dependencies if the normalized hash changes, this helps to reduce meaningless changes.\n  const hasNewDependencies =\n    hashForDependencyMap(pkg.dependencies) !== hashForDependencyMap(combinedDependencies);\n  const hasNewDevDependencies =\n    hashForDependencyMap(pkg.devDependencies) !== hashForDependencyMap(combinedDevDependencies);\n  // Save the dependencies\n  if (hasNewDependencies) {\n    // Use Object.assign to preserve the original order of dependencies, this makes it easier to see what changed in the git diff.\n    pkg.dependencies = Object.assign(pkg.dependencies, combinedDependencies);\n  }\n  if (hasNewDevDependencies) {\n    // Same as with dependencies\n    pkg.devDependencies = Object.assign(pkg.devDependencies, combinedDevDependencies);\n  }\n\n  return {\n    hasNewDependencies,\n    hasNewDevDependencies,\n  };\n}\n\n/**\n * Create an object of type DependenciesMap a dependencies object or throw if not valid.\n *\n * @param dependencies - ideally an object of type {[key]: string} - if not then this will error.\n */\nexport function createDependenciesMap(dependencies: any): DependenciesMap {\n  if (typeof dependencies !== 'object') {\n    throw new Error(`Dependency map is invalid, expected object but got ${typeof dependencies}`);\n  } else if (!dependencies) {\n    return {};\n  }\n\n  const outputMap: DependenciesMap = {};\n\n  for (const key of Object.keys(dependencies)) {\n    const value = dependencies[key];\n    if (typeof value === 'string') {\n      outputMap[key] = value;\n    } else {\n      throw new Error(\n        `Dependency for key \\`${key}\\` should be a \\`string\\`, instead got: \\`{ ${key}: ${JSON.stringify(\n          value\n        )} }\\``\n      );\n    }\n  }\n  return outputMap;\n}\n\n/**\n * Update package.json scripts - `npm start` should default to `react-native\n * start` rather than `expo start` after ejecting, for example.\n */\nfunction updatePackageJSONScripts({ pkg }: { pkg: PackageJSONConfig }) {\n  if (!pkg.scripts) {\n    pkg.scripts = {};\n  }\n  if (!pkg.scripts.start?.includes('--dev-client')) {\n    pkg.scripts.start = 'expo start --dev-client';\n  }\n  if (!pkg.scripts.android?.includes('run')) {\n    pkg.scripts.android = 'expo run:android';\n  }\n  if (!pkg.scripts.ios?.includes('run')) {\n    pkg.scripts.ios = 'expo run:ios';\n  }\n}\n\n/**\n * Add new app entry points\n */\nfunction updatePackageJSONEntryPoint({ pkg }: { pkg: PackageJSONConfig }): boolean {\n  let removedPkgMain = false;\n  // Check that the pkg.main doesn't match:\n  // - ./node_modules/expo/AppEntry\n  // - ./node_modules/expo/AppEntry.js\n  // - node_modules/expo/AppEntry.js\n  // - expo/AppEntry.js\n  // - expo/AppEntry\n  if (shouldDeleteMainField(pkg.main)) {\n    // Save the custom\n    removedPkgMain = pkg.main;\n    delete pkg.main;\n  }\n\n  return removedPkgMain;\n}\n\n/**\n * Returns true if the input string matches the default expo main field.\n *\n * - ./node_modules/expo/AppEntry\n * - ./node_modules/expo/AppEntry.js\n * - node_modules/expo/AppEntry.js\n * - expo/AppEntry.js\n * - expo/AppEntry\n *\n * @param input package.json main field\n */\nexport function isPkgMainExpoAppEntry(input?: string): boolean {\n  const main = input || '';\n  if (main.startsWith('./')) {\n    return main.includes('node_modules/expo/AppEntry');\n  }\n  return main.includes('expo/AppEntry');\n}\n\nfunction normalizeDependencyMap(deps: DependenciesMap): string[] {\n  return Object.keys(deps)\n    .map(dependency => `${dependency}@${deps[dependency]}`)\n    .sort();\n}\n\nexport function hashForDependencyMap(deps: DependenciesMap = {}): string {\n  const depsList = normalizeDependencyMap(deps);\n  const depsString = depsList.join('\\n');\n  return createFileHash(depsString);\n}\n\nexport function createFileHash(contents: string): string {\n  // this doesn't need to be secure, the shorter the better.\n  return crypto.createHash('sha1').update(contents).digest('hex');\n}\n\nexport function shouldDeleteMainField(main?: any): boolean {\n  if (!main || !isPkgMainExpoAppEntry(main)) {\n    return false;\n  }\n\n  return !main?.startsWith('index.');\n}\n"],"mappings":"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"}