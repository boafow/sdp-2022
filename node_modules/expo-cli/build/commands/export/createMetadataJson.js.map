{"version":3,"file":"createMetadataJson.js","names":["createMetadataJson","bundles","fileNames","fileMetadata","Object","keys","forEach","platform","filename","assert","bundle","path","join","assets","asset","fileHashes","map","hash","ext","type","metadata","version","bundler"],"sources":["../../../src/commands/export/createMetadataJson.ts"],"sourcesContent":["import type { BundleOutput } from '@expo/dev-server';\nimport assert from 'assert';\nimport path from 'path';\n\nexport type BundlePlatform = 'android' | 'ios';\n\ntype PlatformMetadata = { bundle: string; assets: { path: string; ext: string }[] };\n\ntype FileMetadata = {\n  [key in BundlePlatform]: PlatformMetadata;\n};\n\ntype Metadata = {\n  version: 0;\n  bundler: 'metro';\n  fileMetadata: FileMetadata;\n};\n\nexport function createMetadataJson({\n  bundles,\n  fileNames,\n}: {\n  bundles: Record<string, Pick<BundleOutput, 'assets'>>;\n  fileNames: Record<string, string>;\n}): Metadata {\n  // Build metadata.json\n  const fileMetadata: {\n    [platform: string]: Partial<PlatformMetadata>;\n  } = {};\n  Object.keys(bundles).forEach(platform => {\n    const filename = fileNames[platform];\n    assert(filename, `Expected filename for ${platform}`);\n\n    fileMetadata[platform] = {\n      bundle: path.join('bundles', filename),\n      assets: [],\n    };\n\n    bundles[platform].assets.forEach((asset: { type: string; fileHashes: string[] }) => {\n      fileMetadata[platform].assets = [\n        ...fileMetadata[platform].assets!,\n        ...asset.fileHashes.map(hash => {\n          return { path: path.join('assets', hash), ext: asset.type };\n        }),\n      ];\n    });\n  });\n  const metadata: Metadata = {\n    version: 0,\n    bundler: 'metro',\n    fileMetadata: fileMetadata as FileMetadata,\n  };\n\n  return metadata;\n}\n"],"mappings":";;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAwB;AAgBjB,SAASA,kBAAkB,CAAC;EACjCC,OAAO;EACPC;AAIF,CAAC,EAAY;EACX;EACA,MAAMC,YAEL,GAAG,CAAC,CAAC;EACNC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAACC,QAAQ,IAAI;IACvC,MAAMC,QAAQ,GAAGN,SAAS,CAACK,QAAQ,CAAC;IACpC,IAAAE,iBAAM,EAACD,QAAQ,EAAG,yBAAwBD,QAAS,EAAC,CAAC;IAErDJ,YAAY,CAACI,QAAQ,CAAC,GAAG;MACvBG,MAAM,EAAEC,eAAI,CAACC,IAAI,CAAC,SAAS,EAAEJ,QAAQ,CAAC;MACtCK,MAAM,EAAE;IACV,CAAC;IAEDZ,OAAO,CAACM,QAAQ,CAAC,CAACM,MAAM,CAACP,OAAO,CAAEQ,KAA6C,IAAK;MAClFX,YAAY,CAACI,QAAQ,CAAC,CAACM,MAAM,GAAG,CAC9B,GAAGV,YAAY,CAACI,QAAQ,CAAC,CAACM,MAAO,EACjC,GAAGC,KAAK,CAACC,UAAU,CAACC,GAAG,CAACC,IAAI,IAAI;QAC9B,OAAO;UAAEN,IAAI,EAAEA,eAAI,CAACC,IAAI,CAAC,QAAQ,EAAEK,IAAI,CAAC;UAAEC,GAAG,EAAEJ,KAAK,CAACK;QAAK,CAAC;MAC7D,CAAC,CAAC,CACH;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,MAAMC,QAAkB,GAAG;IACzBC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE,OAAO;IAChBnB,YAAY,EAAEA;EAChB,CAAC;EAED,OAAOiB,QAAQ;AACjB"}