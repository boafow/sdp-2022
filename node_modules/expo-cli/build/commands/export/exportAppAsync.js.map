{"version":3,"file":"exportAppAsync.js","names":["ANONYMOUS_USERNAME","exportAppAsync","projectRoot","publicUrl","assetUrl","outputDir","options","experimentalBundle","exp","pkg","hooks","Project","getPublishExpConfigAsync","publishOptions","absoluteOutputDir","path","resolve","defaultTarget","getDefaultTarget","target","assetPathToWrite","bundlesPathToWrite","Promise","all","fs","ensureDir","Log","isDebug","newLine","log","bundles","createBundlesAsync","platforms","dev","isDev","useDevServer","Env","shouldUseDevServer","printBundleSizes","hashes","fileNames","writeBundlesAsync","assets","ProjectAssets","exportAssetsAsync","hostedUrl","assetPath","dumpAssetmap","writeAssetMapAsync","dumpSourcemap","removeOriginalSourceMappingUrl","sdkVersion","semver","lt","writeSourceMapsAsync","writeDebugHtmlAsync","writeMetadataJsonAsync","validPostExportHooks","prepareHooks","mutateExpoConfigWithManifestValues","username","UserManager","getCurrentUsernameAsync","manifests","writePlatformManifestsAsync","bundleInfo","createMultiPlatformBundleInfo","runHooks","info","EmbeddedAssets","configureAsync","hookOptions","url","hook","file","runHook","e","warn","stack","assetUrlOverride","publishedTime","Date","toISOString","commitTime","releaseId","uuidv4","hashIds","HashIds","uuidv1","revisionId","encode","now","developer","tool","id","slug"],"sources":["../../../src/commands/export/exportAppAsync.ts"],"sourcesContent":["import { ExpoAppManifest, getDefaultTarget, HookArguments } from '@expo/config';\nimport fs from 'fs-extra';\nimport HashIds from 'hashids';\nimport path from 'path';\nimport semver from 'semver';\nimport { v1 as uuidv1, v4 as uuidv4 } from 'uuid';\nimport { EmbeddedAssets, Env, printBundleSizes, Project, ProjectAssets, UserManager } from 'xdl';\n\nimport Log from '../../log';\nimport { BundlePlatform } from './createMetadataJson';\nimport {\n  createMultiPlatformBundleInfo,\n  MultiPlatformBundleInfo,\n  writeAssetMapAsync,\n  writeBundlesAsync,\n  writeDebugHtmlAsync,\n  writeMetadataJsonAsync,\n  writePlatformManifestsAsync,\n  writeSourceMapsAsync,\n} from './writeContents';\n\nexport const ANONYMOUS_USERNAME = 'anonymous';\n\n/**\n * If the `experimentalBundle` flag is true, the structure of the outputDir will be:\n *\n * ```\n * ├── assets\n * │   └── *\n * ├── bundles\n * │   ├── android-01ee6e3ab3e8c16a4d926c91808d5320.js\n * │   └── ios-ee8206cc754d3f7aa9123b7f909d94ea.js\n * └── metadata.json\n * ```\n *\n * If the `experimentalBundle` flag is not true, then this function is for self hosting\n * and the outputDir will have the files created in the project directory the following way:\n *\n * ```\n * ├── android-index.json\n * ├── ios-index.json\n * ├── assets\n * │   └── 1eccbc4c41d49fd81840aef3eaabe862\n * └── bundles\n *       ├── android-01ee6e3ab3e8c16a4d926c91808d5320.js\n *       └── ios-ee8206cc754d3f7aa9123b7f909d94ea.js\n * ```\n */\nexport async function exportAppAsync(\n  projectRoot: string,\n  publicUrl: string,\n  assetUrl: string,\n  outputDir: string,\n  options: {\n    platforms: BundlePlatform[];\n    isDev?: boolean;\n    dumpAssetmap?: boolean;\n    dumpSourcemap?: boolean;\n    publishOptions?: Project.PublishOptions;\n  },\n  experimentalBundle: boolean\n): Promise<void> {\n  const { exp, pkg, hooks } = await Project.getPublishExpConfigAsync(\n    projectRoot,\n    options.publishOptions\n  );\n\n  const absoluteOutputDir = path.resolve(projectRoot, outputDir);\n  const defaultTarget = getDefaultTarget(projectRoot, exp);\n  const target = options.publishOptions?.target ?? defaultTarget;\n\n  const assetPathToWrite = path.resolve(absoluteOutputDir, 'assets');\n  const bundlesPathToWrite = path.resolve(absoluteOutputDir, 'bundles');\n\n  await Promise.all([fs.ensureDir(assetPathToWrite), fs.ensureDir(bundlesPathToWrite)]);\n\n  if (Log.isDebug) {\n    Log.newLine();\n    Log.log('Export Assets:');\n    Log.log(`- Asset target: ${target}`);\n    Log.newLine();\n  }\n\n  // Run metro bundler and create the JS bundles/source maps.\n  const bundles = await Project.createBundlesAsync(projectRoot, options.publishOptions, {\n    platforms: options.platforms,\n    dev: options.isDev,\n    useDevServer: Env.shouldUseDevServer(exp),\n    // TODO: Disable source map generation if we aren't outputting them.\n  });\n\n  // Log bundle size info to the user\n  printBundleSizes(bundles);\n\n  // Write the JS bundles to disk, and get the bundle file names (this could change with async chunk loading support).\n  const { hashes, fileNames } = await writeBundlesAsync({ bundles, outputDir: bundlesPathToWrite });\n\n  Log.log('Finished saving JS Bundles');\n\n  const { assets } = await ProjectAssets.exportAssetsAsync({\n    projectRoot,\n    exp,\n    hostedUrl: publicUrl,\n    assetPath: 'assets',\n    outputDir: absoluteOutputDir,\n    bundles,\n    experimentalBundle,\n  });\n\n  if (options.dumpAssetmap) {\n    Log.log('Dumping asset map');\n    await writeAssetMapAsync({ outputDir: absoluteOutputDir, assets });\n  }\n\n  // build source maps\n  if (options.dumpSourcemap) {\n    // TODO: Maybe move this into the bundler settings.\n    const removeOriginalSourceMappingUrl =\n      target === 'managed' && !!exp.sdkVersion && semver.lt(exp.sdkVersion, '40.0.0');\n\n    await writeSourceMapsAsync({\n      bundles,\n      hashes,\n      outputDir: bundlesPathToWrite,\n      fileNames,\n      removeOriginalSourceMappingUrl,\n    });\n    // If we output source maps, then add a debug HTML file which the user can open in\n    // the web browser to inspect the output like web.\n    await writeDebugHtmlAsync({\n      outputDir: absoluteOutputDir,\n      fileNames,\n    });\n  }\n\n  // Skip the hooks and manifest creation if building for EAS.\n  if (experimentalBundle) {\n    // Generate a metadata.json and bail.\n    await writeMetadataJsonAsync({ outputDir, bundles, fileNames });\n    return;\n  }\n\n  // Load the \"post export\" hooks\n  const validPostExportHooks = Project.prepareHooks(hooks, 'postExport', projectRoot);\n\n  // Append server values to the Expo config.\n  mutateExpoConfigWithManifestValues(exp, {\n    assetUrl,\n    isDev: options.isDev,\n    username: await UserManager.getCurrentUsernameAsync(),\n  });\n\n  // TODO: Add a comment explaining what platform manifests are used for\n  const manifests = await writePlatformManifestsAsync({\n    outputDir: absoluteOutputDir,\n    publicUrl,\n    fileNames,\n    exp,\n    pkg,\n  });\n\n  // Create the shared bundle info object in somewhat of a legacy format.\n  const bundleInfo = createMultiPlatformBundleInfo({ bundles, manifests, publicUrl });\n\n  // Run post export hooks for users who want to do things like uploading source maps to sentry.\n  runHooks({ projectRoot, exp, hooks: validPostExportHooks, info: bundleInfo });\n\n  // configure embedded assets for expo-updates or ExpoKit\n  await EmbeddedAssets.configureAsync({\n    ...bundleInfo,\n    projectRoot,\n    exp,\n    pkg,\n    target,\n  });\n}\n\nfunction runHooks({\n  projectRoot,\n  exp,\n  hooks,\n  info,\n}: {\n  projectRoot: string;\n  exp: ExpoAppManifest;\n  info: MultiPlatformBundleInfo;\n  hooks: Project.LoadedHook[];\n}) {\n  const hookOptions: Omit<HookArguments, 'config'> = {\n    url: null,\n    ...info,\n    projectRoot,\n    exp,\n    log: Log.info,\n  };\n\n  for (const hook of hooks) {\n    Log.log(`Running postExport hook: ${hook.file}`);\n    try {\n      Project.runHook(hook, hookOptions);\n    } catch (e: any) {\n      Log.warn(`Warning: postExport hook '${hook.file}' failed: ${e.stack}`);\n    }\n  }\n}\n\n// TODO: Move to expo/config for public manifests\nfunction mutateExpoConfigWithManifestValues(\n  exp: ExpoAppManifest,\n  { assetUrl, isDev, username }: { assetUrl: string; isDev?: boolean; username?: string | null }\n) {\n  // Add assetUrl to manifest\n  exp.assetUrlOverride = assetUrl;\n\n  exp.publishedTime = new Date().toISOString();\n  exp.commitTime = new Date().toISOString();\n  exp.releaseId = uuidv4();\n\n  // generate revisionId and id the same way www does\n  const hashIds = new HashIds(uuidv1(), 10);\n  exp.revisionId = hashIds.encode(Date.now());\n\n  if (isDev) {\n    exp.developer = {\n      tool: 'exp',\n    };\n  }\n\n  if (!username) {\n    username = ANONYMOUS_USERNAME;\n  }\n\n  exp.id = `@${username}/${exp.slug}`;\n\n  return exp;\n}\n"],"mappings":"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"}