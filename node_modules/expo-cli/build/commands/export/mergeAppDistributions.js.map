{"version":3,"file":"mergeAppDistributions.js","names":["isSelfHostedIndex","obj","sdkVersion","mergeAppDistributions","projectRoot","sourceDirs","outputDir","assetPathToWrite","path","resolve","fs","ensureDir","bundlesPathToWrite","androidIndexes","iosIndexes","sourceDir","promises","sourceAssetDir","outputAssetDir","assetPromise","copy","push","sourceBundleDir","outputBundleDir","bundlePromise","Promise","all","putJsonInMemory","indexPath","accumulator","index","JsonFile","readAsync","XDLError","Array","isArray","androidIndexPath","iosIndexPath","getSortedIndex","indexes","sort","index1","index2","semver","eq","Log","error","gte","sortedAndroidIndexes","sortedIosIndexes","Project","writeArtifactSafelyAsync","join","JSON","stringify"],"sources":["../../../src/commands/export/mergeAppDistributions.ts"],"sourcesContent":["import { ExpoAppManifest } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport semver from 'semver';\nimport { Project, XDLError } from 'xdl';\n\nimport Log from '../../log';\n\ntype SelfHostedIndex = ExpoAppManifest & {\n  dependencies: string[];\n};\n\nfunction isSelfHostedIndex(obj: any): obj is SelfHostedIndex {\n  return !!obj.sdkVersion;\n}\n\n// Takes multiple exported apps in sourceDirs and coalesces them to one app in outputDir\nexport async function mergeAppDistributions(\n  projectRoot: string,\n  sourceDirs: string[],\n  outputDir: string\n): Promise<void> {\n  const assetPathToWrite = path.resolve(projectRoot, outputDir, 'assets');\n  await fs.ensureDir(assetPathToWrite);\n  const bundlesPathToWrite = path.resolve(projectRoot, outputDir, 'bundles');\n  await fs.ensureDir(bundlesPathToWrite);\n\n  // merge files from bundles and assets\n  const androidIndexes: SelfHostedIndex[] = [];\n  const iosIndexes: SelfHostedIndex[] = [];\n\n  for (const sourceDir of sourceDirs) {\n    const promises = [];\n\n    // copy over assets/bundles from other src dirs to the output dir\n    if (sourceDir !== outputDir) {\n      // copy file over to assetPath\n      const sourceAssetDir = path.resolve(projectRoot, sourceDir, 'assets');\n      const outputAssetDir = path.resolve(projectRoot, outputDir, 'assets');\n      const assetPromise = fs.copy(sourceAssetDir, outputAssetDir);\n      promises.push(assetPromise);\n\n      // copy files over to bundlePath\n      const sourceBundleDir = path.resolve(projectRoot, sourceDir, 'bundles');\n      const outputBundleDir = path.resolve(projectRoot, outputDir, 'bundles');\n      const bundlePromise = fs.copy(sourceBundleDir, outputBundleDir);\n      promises.push(bundlePromise);\n\n      await Promise.all(promises);\n    }\n\n    // put index.jsons into memory\n    const putJsonInMemory = async (indexPath: string, accumulator: SelfHostedIndex[]) => {\n      const index = await JsonFile.readAsync(indexPath);\n\n      if (!isSelfHostedIndex(index)) {\n        throw new XDLError(\n          'INVALID_MANIFEST',\n          `Invalid index.json, must specify an sdkVersion at ${indexPath}`\n        );\n      }\n      if (Array.isArray(index)) {\n        // index.json could also be an array\n        accumulator.push(...index);\n      } else {\n        accumulator.push(index);\n      }\n    };\n\n    const androidIndexPath = path.resolve(projectRoot, sourceDir, 'android-index.json');\n    await putJsonInMemory(androidIndexPath, androidIndexes);\n\n    const iosIndexPath = path.resolve(projectRoot, sourceDir, 'ios-index.json');\n    await putJsonInMemory(iosIndexPath, iosIndexes);\n  }\n\n  // sort indexes by descending sdk value\n  const getSortedIndex = (indexes: SelfHostedIndex[]) => {\n    return indexes.sort((index1: SelfHostedIndex, index2: SelfHostedIndex) => {\n      if (semver.eq(index1.sdkVersion, index2.sdkVersion)) {\n        Log.error(\n          `Encountered multiple index.json with the same SDK version ${index1.sdkVersion}. This could result in undefined behavior.`\n        );\n      }\n      return semver.gte(index1.sdkVersion, index2.sdkVersion) ? -1 : 1;\n    });\n  };\n\n  const sortedAndroidIndexes = getSortedIndex(androidIndexes);\n  const sortedIosIndexes = getSortedIndex(iosIndexes);\n\n  // Save the json arrays to disk\n  await Project.writeArtifactSafelyAsync(\n    projectRoot,\n    null,\n    path.join(outputDir, 'android-index.json'),\n    JSON.stringify(sortedAndroidIndexes)\n  );\n\n  await Project.writeArtifactSafelyAsync(\n    projectRoot,\n    null,\n    path.join(outputDir, 'ios-index.json'),\n    JSON.stringify(sortedIosIndexes)\n  );\n}\n"],"mappings":"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"}