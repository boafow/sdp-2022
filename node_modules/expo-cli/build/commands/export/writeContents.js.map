{"version":3,"file":"writeContents.js","names":["writeAsync","folder","fileName","contents","ensureDir","fs","promises","writeFile","path","join","writeDebugHtmlAsync","outputDir","fileNames","Log","log","debugHtml","Object","values","map","createBundleFileName","platform","hash","createBundleHash","bundle","crypto","createHash","update","digest","writeBundlesAsync","bundles","hashes","bundleOutput","entries","hermesBytecodeBundle","code","writeSourceMapsAsync","removeOriginalSourceMappingUrl","Promise","all","sourceMap","hermesSourcemap","mapName","jsBundleFileName","jsPath","truncateLastLinesAsync","mappingComment","appendFile","comment","writeMetadataJsonAsync","metadata","createMetadataJson","JSON","stringify","writeAssetMapAsync","assets","fromEntries","asset","writePlatformManifestsAsync","publicUrl","exp","pkg","dependencies","keys","manifests","manifest","bundleUrl","urljoin","createMultiPlatformBundleInfo","key","on","reduce","prev","cur","configKey"],"sources":["../../../src/commands/export/writeContents.ts"],"sourcesContent":["import type { ExpoAppManifest, HookArguments, PackageJSONConfig } from '@expo/config';\nimport type { BundleOutput } from '@expo/dev-server';\nimport crypto from 'crypto';\nimport fs from 'fs';\nimport { ensureDir } from 'fs-extra';\nimport path from 'path';\nimport urljoin from 'url-join';\nimport { ProjectAssets } from 'xdl';\n\nimport Log from '../../log';\nimport { truncateLastLinesAsync } from '../utils/truncateLastLinesAsync';\nimport { createMetadataJson } from './createMetadataJson';\n\ntype PlatformExpoAppManifest = ExpoAppManifest & {\n  platform: string;\n  bundleUrl: string;\n  dependencies: string[];\n};\n\nasync function writeAsync(folder: string, fileName: string, contents: any) {\n  await ensureDir(folder);\n  await fs.promises.writeFile(path.join(folder, fileName), contents);\n}\n\nexport async function writeDebugHtmlAsync({\n  outputDir,\n  fileNames,\n}: {\n  outputDir: string;\n  fileNames: Record<string, string>;\n}) {\n  // Make a debug html so user can debug their bundles\n  Log.log('Preparing additional debugging files');\n  const debugHtml = `\n      ${Object.values(fileNames)\n        .map(fileName => `<script src=\"${path.join('bundles', fileName)}\"></script>`)\n        .join('\\n      ')}\n      Open up this file in Chrome. In the JavaScript developer console, navigate to the Source tab.\n      You can see a red colored folder containing the original source code from your bundle.\n      `;\n\n  await writeAsync(outputDir, 'debug.html', debugHtml);\n}\n\n/**\n * @param props.platform native platform for the bundle\n * @param props.hash crypto hash for the bundle contents\n * @returns filename for the JS bundle.\n */\nfunction createBundleFileName({ platform, hash }: { platform: string; hash: string }): string {\n  return `${platform}-${hash}.js`;\n}\n\n/**\n * @param bundle JS bundle as a string\n * @returns crypto hash for the provided bundle\n */\nfunction createBundleHash(bundle: string | Uint8Array): string {\n  return crypto.createHash('md5').update(bundle).digest('hex');\n}\n\nexport async function writeBundlesAsync({\n  bundles,\n  outputDir,\n}: {\n  bundles: Record<string, Pick<BundleOutput, 'hermesBytecodeBundle' | 'code'>>;\n  outputDir: string;\n}) {\n  const hashes: Record<string, string> = {};\n  const fileNames: Record<string, string> = {};\n\n  for (const [platform, bundleOutput] of Object.entries(bundles)) {\n    const bundle = bundleOutput.hermesBytecodeBundle ?? bundleOutput.code;\n    const hash = createBundleHash(bundle);\n    const fileName = createBundleFileName({ platform, hash });\n\n    hashes[platform] = hash;\n    fileNames[platform] = fileName;\n    await writeAsync(outputDir, fileName, bundle);\n  }\n\n  return { hashes, fileNames };\n}\n\nexport async function writeSourceMapsAsync({\n  bundles,\n  hashes,\n  fileNames,\n  outputDir,\n  removeOriginalSourceMappingUrl,\n}: {\n  bundles: Record<\n    string,\n    Pick<BundleOutput, 'hermesSourcemap' | 'map' | 'hermesBytecodeBundle' | 'code'>\n  >;\n  hashes?: Record<string, string>;\n  fileNames?: Record<string, string>;\n  outputDir: string;\n  removeOriginalSourceMappingUrl?: boolean;\n}) {\n  return await Promise.all(\n    Object.entries(bundles).map(async ([platform, bundle]) => {\n      const sourceMap = bundle.hermesSourcemap ?? bundle.map;\n      const hash =\n        hashes?.[platform] ?? createBundleHash(bundle.hermesBytecodeBundle ?? bundle.code);\n      const mapName = `${platform}-${hash}.map`;\n      await writeAsync(outputDir, mapName, sourceMap);\n\n      const jsBundleFileName = fileNames?.[platform] ?? createBundleFileName({ platform, hash });\n      const jsPath = path.join(outputDir, jsBundleFileName);\n\n      if (removeOriginalSourceMappingUrl) {\n        // Remove original mapping to incorrect sourcemap paths\n        // In SDK 40+ and bare projects, we no longer need to do this.\n        Log.log(`Configuring source maps for ${platform}`);\n        await truncateLastLinesAsync(jsPath, 1);\n      }\n\n      // Add correct mapping to sourcemap paths\n      const mappingComment = `\\n//# sourceMappingURL=${mapName}`;\n      await fs.promises.appendFile(jsPath, mappingComment);\n      return {\n        platform,\n        fileName: mapName,\n        hash,\n        map: sourceMap,\n        comment: mappingComment,\n      };\n    })\n  );\n}\n\nexport async function writeMetadataJsonAsync({\n  outputDir,\n  bundles,\n  fileNames,\n}: {\n  outputDir: string;\n  bundles: Record<string, Pick<BundleOutput, 'assets'>>;\n  fileNames: Record<string, string>;\n}) {\n  const metadata = createMetadataJson({\n    bundles,\n    fileNames,\n  });\n  await writeAsync(outputDir, 'metadata.json', JSON.stringify(metadata));\n}\n\nexport async function writeAssetMapAsync({\n  outputDir,\n  assets,\n}: {\n  outputDir: string;\n  assets: ProjectAssets.Asset[];\n}) {\n  // Convert the assets array to a k/v pair where the asset hash is the key and the asset is the value.\n  const contents = Object.fromEntries(assets.map(asset => [asset.hash, asset]));\n\n  await writeAsync(outputDir, 'assetmap.json', JSON.stringify(contents));\n\n  return contents;\n}\n\nexport async function writePlatformManifestsAsync({\n  outputDir,\n  publicUrl,\n  fileNames,\n  exp,\n  pkg,\n}: {\n  outputDir: string;\n  publicUrl: string;\n  fileNames: Record<string, string>;\n  exp: ExpoAppManifest;\n  pkg: Pick<PackageJSONConfig, 'dependencies'>;\n}): Promise<Record<string, PlatformExpoAppManifest>> {\n  const dependencies = Object.keys(pkg.dependencies ?? {});\n  const manifests: Record<string, PlatformExpoAppManifest> = {};\n  for (const platform of Object.keys(fileNames)) {\n    // save the platform manifest\n    const manifest: PlatformExpoAppManifest = {\n      ...exp,\n      platform,\n      bundleUrl: urljoin(publicUrl, 'bundles', fileNames[platform]),\n      dependencies,\n    };\n    manifests[platform] = manifest;\n    await writeAsync(outputDir, `${platform}-index.json`, JSON.stringify(manifest));\n  }\n  return manifests;\n}\n\n// TODO: Refactor this to support more/less platforms better.\nexport type MultiPlatformBundleInfo = Pick<\n  HookArguments,\n  | 'androidManifestUrl'\n  | 'androidBundle'\n  | 'androidManifest'\n  | 'androidSourceMap'\n  | 'iosManifestUrl'\n  | 'iosBundle'\n  | 'iosManifest'\n  | 'iosSourceMap'\n>;\n\nexport function createMultiPlatformBundleInfo({\n  publicUrl,\n  bundles,\n  manifests,\n}: {\n  publicUrl: string;\n  bundles: Record<\n    string,\n    Pick<BundleOutput, 'hermesBytecodeBundle' | 'code' | 'hermesSourcemap' | 'map'>\n  >;\n  manifests: Record<string, PlatformExpoAppManifest>;\n}): MultiPlatformBundleInfo {\n  const keys: { key: string; on: (platform: string) => any }[] = [\n    {\n      key: 'ManifestUrl',\n      on: (platform: string) => urljoin(publicUrl, `${platform}-index.json`),\n    },\n    {\n      key: 'Manifest',\n      on: platform => manifests[platform] ?? null,\n    },\n    {\n      key: 'Bundle',\n      on: platform => bundles[platform].hermesBytecodeBundle ?? bundles[platform].code,\n    },\n    {\n      key: 'SourceMap',\n      on: platform => bundles[platform].hermesSourcemap ?? bundles[platform].map,\n    },\n  ];\n\n  return keys.reduce((prev, cur) => {\n    for (const platform of Object.keys(bundles)) {\n      // Like `iosManifestUrl`, or `androidBundle`\n      const configKey = platform + cur.key;\n      // @ts-ignore: needs refactor in the future -- currently a refactor would break the public API for publish hooks.\n      prev[configKey] = cur.on(platform);\n    }\n    return prev;\n  }, {} as MultiPlatformBundleInfo);\n}\n"],"mappings":"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"}