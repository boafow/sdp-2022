{"version":3,"file":"fetchIosCertsAsync.js","names":["actionAsync","projectRoot","inProjectDir","filename","path","resolve","bundleIdentifier","getOrPromptForBundleIdentifier","ctx","Context","init","app","accountName","projectOwner","projectName","manifest","slug","Log","log","appCredentials","ios","getAppCredentials","pushCredentials","getPushKey","distCredentials","getDistCert","certP12","certPassword","certPrivateSigningKey","apnsKeyId","apnsKeyP8","pushP12","pushPassword","provisioningProfile","teamId","credentials","undefined","distPath","fs","writeFile","Buffer","from","distPrivateKeyPath","apnsKeyP8Path","pushPath","provisioningProfilePath","chalk","bold","yellow","CommandError"],"sources":["../../../src/commands/fetch/fetchIosCertsAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport * as fs from 'fs-extra';\nimport * as path from 'path';\n\nimport CommandError from '../../CommandError';\nimport { Context } from '../../credentials/context';\nimport Log from '../../log';\nimport { getOrPromptForBundleIdentifier } from '../utils/getOrPromptApplicationId';\n\nexport async function actionAsync(projectRoot: string): Promise<void> {\n  const inProjectDir = (filename: string): string => path.resolve(projectRoot, filename);\n\n  const bundleIdentifier = await getOrPromptForBundleIdentifier(projectRoot);\n\n  try {\n    const ctx = new Context();\n    await ctx.init(projectRoot);\n\n    const app = {\n      accountName: ctx.projectOwner,\n      projectName: ctx.manifest.slug,\n      bundleIdentifier,\n    };\n    Log.log(\n      `Retrieving iOS credentials for @${app.accountName}/${app.projectName} (${bundleIdentifier})`\n    );\n    const appCredentials = await ctx.ios.getAppCredentials(app);\n    const pushCredentials = await ctx.ios.getPushKey(app);\n    const distCredentials = await ctx.ios.getDistCert(app);\n\n    const { certP12, certPassword, certPrivateSigningKey } = distCredentials ?? {};\n    const { apnsKeyId, apnsKeyP8 } = pushCredentials ?? {};\n    const { pushP12, pushPassword, provisioningProfile, teamId } =\n      appCredentials?.credentials ?? {};\n\n    if (teamId !== undefined) {\n      Log.log(`These credentials are associated with Apple Team ID: ${teamId}`);\n    }\n    if (certP12) {\n      const distPath = inProjectDir(`${app.projectName}_dist.p12`);\n      await fs.writeFile(distPath, Buffer.from(certP12, 'base64'));\n    }\n    if (certPrivateSigningKey) {\n      const distPrivateKeyPath = inProjectDir(`${app.projectName}_dist_cert_private.key`);\n      await fs.writeFile(distPrivateKeyPath, certPrivateSigningKey);\n    }\n    if (certP12 || certPrivateSigningKey) {\n      Log.log('Wrote distribution cert credentials to disk.');\n    }\n    if (apnsKeyP8) {\n      const apnsKeyP8Path = inProjectDir(`${app.projectName}_apns_key.p8`);\n      await fs.writeFile(apnsKeyP8Path, apnsKeyP8);\n      Log.log('Wrote push key credentials to disk.');\n    }\n    if (pushP12) {\n      const pushPath = inProjectDir(`${app.projectName}_push.p12`);\n      await fs.writeFile(pushPath, Buffer.from(pushP12, 'base64'));\n    }\n    if (pushP12) {\n      Log.log('Wrote push cert credentials to disk.');\n    }\n    if (provisioningProfile) {\n      const provisioningProfilePath = path.resolve(\n        projectRoot,\n        `${app.projectName}.mobileprovision`\n      );\n      await fs.writeFile(provisioningProfilePath, Buffer.from(provisioningProfile, 'base64'));\n      Log.log('Wrote provisioning profile to disk');\n    }\n    Log.log(`Save these important values as well:\n\nDistribution P12 password: ${\n      certPassword ? chalk.bold(certPassword) : chalk.yellow('(not available)')\n    }\nPush Key ID:               ${apnsKeyId ? chalk.bold(apnsKeyId) : chalk.yellow('(not available)')}\nPush P12 password:         ${\n      pushPassword ? chalk.bold(pushPassword) : chalk.yellow('(not available)')\n    }\n`);\n  } catch {\n    throw new CommandError(\n      'Unable to fetch credentials for this project. Are you sure they exist?'\n    );\n  }\n\n  Log.log('All done!');\n}\n"],"mappings":"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"}