{"version":3,"file":"explain.js","names":["isSpawnResult","result","explainAsync","packageName","parameters","ora","logNewSection","args","stdout","spawnAsync","stdio","stop","JSON","parse","error","stderr","match","fail","chalk","underline","message","warnAboutDeepDependenciesAsync","pkg","explanations","name","Log","debug","printExplanationsAsync","organizeExplanations","isValid","valid","invalid","explanation","push","warn","otherPkg","semver","satisfies","version","length","printInvalidPackages","formatPkg","map","join","versionColor"],"sources":["../../../../../src/commands/info/doctor/depedencies/explain.ts"],"sourcesContent":["import spawnAsync, { SpawnResult } from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport semver from 'semver';\n\nimport Log from '../../../../log';\nimport { logNewSection } from '../../../../utils/ora';\nimport { RootNodePackage, VersionSpec } from './explain.types';\n\ntype TargetPackage = { name: string; version?: VersionSpec };\n\nfunction isSpawnResult(result: any): result is SpawnResult {\n  return 'stderr' in result && 'stdout' in result && 'status' in result;\n}\n\n/** Spawn `npm explain [name] --json` and return the parsed JSON. Returns `null` if the requested package is not installed. */\nexport async function explainAsync(\n  packageName: string,\n  parameters: string[] = []\n): Promise<RootNodePackage[] | null> {\n  const ora = logNewSection(`Finding all copies of ${packageName}`);\n  const args = ['explain', packageName, ...parameters, '--json'];\n\n  try {\n    const { stdout } = await spawnAsync('npm', args, {\n      stdio: 'pipe',\n    });\n    ora.stop();\n\n    return JSON.parse(stdout);\n  } catch (error: any) {\n    if (isSpawnResult(error)) {\n      if (error.stderr.match(/npm ERR! No dependencies found matching/)) {\n        ora.stop();\n        return null;\n      } else if (error.stdout.match(/Usage: npm <command>/)) {\n        ora.fail(\n          `Dependency tree validation for ${chalk.underline(\n            packageName\n          )} failed. This validation is only available on Node 16+ / npm 8.`\n        );\n        return null;\n      }\n    }\n    ora.fail(`Failed to find dependency tree for ${packageName}: ` + error.message);\n    throw error;\n  }\n}\n/**\n * @param pkg\n * @returns true if all versions of the package satisfy the constraints\n */\nexport async function warnAboutDeepDependenciesAsync(pkg: TargetPackage): Promise<boolean> {\n  const explanations = await explainAsync(pkg.name);\n\n  if (!explanations) {\n    Log.debug(`No dependencies found for ${pkg.name}`);\n    return true;\n  }\n\n  return printExplanationsAsync(pkg, explanations);\n}\n\nexport function organizeExplanations(\n  pkg: TargetPackage,\n  {\n    explanations,\n    isValid,\n  }: {\n    explanations: RootNodePackage[];\n    isValid: (pkg: TargetPackage) => boolean;\n  }\n) {\n  const valid: RootNodePackage[] = [];\n  const invalid: RootNodePackage[] = [];\n\n  for (const explanation of explanations) {\n    const { name } = explanation;\n    if (name === pkg.name) {\n      if (isValid(explanation)) {\n        valid.push(explanation);\n      } else {\n        invalid.push(explanation);\n      }\n    } else {\n      // Should never happen\n      Log.warn(\n        `Found invalid case where the searched package name \"${name}\" doesn't match requested package name \"${pkg.name}\"`\n      );\n    }\n  }\n  return { valid, invalid };\n}\n\n/**\n * @param pkg\n * @param explanations\n * @returns true if all versions of the package satisfy the constraints\n */\nexport async function printExplanationsAsync(\n  pkg: TargetPackage,\n  explanations: RootNodePackage[]\n): Promise<boolean> {\n  const { invalid } = organizeExplanations(pkg, {\n    explanations,\n    isValid(otherPkg) {\n      return semver.satisfies(otherPkg.version!, pkg.version!);\n    },\n  });\n\n  if (invalid.length > 0) {\n    printInvalidPackages(pkg, { explanations: invalid });\n    return false;\n  } else {\n    Log.debug(chalk`All copies of {bold ${pkg.name}} satisfy {green ${pkg.version}}`);\n    return true;\n  }\n}\n\nfunction printInvalidPackages(\n  pkg: TargetPackage,\n  { explanations }: { explanations: RootNodePackage[] }\n) {\n  if (pkg.version) {\n    Log.warn(`Expected package ${formatPkg(pkg, 'green')}`);\n  } else {\n    Log.warn(`Expected to not find any copies of ${formatPkg(pkg, 'green')}`);\n  }\n  Log.warn(chalk`Found invalid:`);\n  Log.warn(explanations.map(explanation => '  ' + formatPkg(explanation, 'red')).join('\\n'));\n  Log.warn(chalk`  {dim (for more info, run: {bold npm why ${pkg.name}})}`);\n\n  // Log.log(invalid.map(explanation => explainNode(explanation)).join('\\n\\n'));\n}\n\nfunction formatPkg(pkg: TargetPackage, versionColor: string) {\n  if (pkg.version) {\n    return chalk`{bold ${pkg.name}}{cyan @}{${versionColor} ${pkg.version}}`;\n  } else {\n    return chalk`{bold ${pkg.name}}`;\n  }\n}\n"],"mappings":"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"}