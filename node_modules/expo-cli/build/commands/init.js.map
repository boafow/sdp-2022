{"version":3,"file":"init.js","names":["program","applyAsyncAction","command","alias","helpGroup","description","option","chalk"],"sources":["../../src/commands/init.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Command } from 'commander';\n\nimport { applyAsyncAction } from './utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncAction<string>(\n    program\n      .command('init [name]')\n      .alias('i')\n      .helpGroup('core')\n      .description('Create a new Expo project')\n      .option(\n        '-t, --template [name]',\n        'Specify which template to use. Valid options are \"blank\", \"tabs\", \"bare-minimum\" or a package on npm (e.g. \"expo-template-bare-minimum\") that includes an Expo project template.'\n      )\n      .option('--npm', 'Use npm to install dependencies. (default when Yarn is not installed)')\n      .option('--no-install', 'Skip installing npm packages or CocoaPods.')\n      .option('--name <name>', chalk`{yellow Deprecated}: Use {bold expo init [name]} instead.`)\n      .option('--yes', 'Use default options. Same as \"expo init . --template blank')\n      .option('--yarn', 'Use Yarn to install dependencies. (default when Yarn is installed)'),\n    () => import('./initAsync')\n  );\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA4D;AAAA;AAAA;AAE7C,kBAAUA,OAAgB,EAAE;EACzC,IAAAC,oCAAgB,EACdD,OAAO,CACJE,OAAO,CAAC,aAAa,CAAC,CACtBC,KAAK,CAAC,GAAG,CAAC,CACVC,SAAS,CAAC,MAAM,CAAC,CACjBC,WAAW,CAAC,2BAA2B,CAAC,CACxCC,MAAM,CACL,uBAAuB,EACvB,kLAAkL,CACnL,CACAA,MAAM,CAAC,OAAO,EAAE,uEAAuE,CAAC,CACxFA,MAAM,CAAC,cAAc,EAAE,4CAA4C,CAAC,CACpEA,MAAM,CAAC,eAAe,EAAE,IAAAC,gBAAK,CAAC,2DAA0D,CAAC,CACzFD,MAAM,CAAC,OAAO,EAAE,4DAA4D,CAAC,CAC7EA,MAAM,CAAC,QAAQ,EAAE,oEAAoE,CAAC,EACzF,mEAAa,aAAa,GAAC,CAC5B;AACH"}