{"version":3,"file":"initAsync.js","names":["FEATURED_TEMPLATES","shortName","name","description","isMacOS","process","platform","assertValidName","folderName","validation","CreateApp","validateName","CommandError","chalk","red","isFolderNameForbidden","parseOptions","command","yes","yarn","npm","install","template","assertFolderEmptyAsync","projectRoot","overwrite","message","Log","newLine","nested","SilentError","resolveProjectRootAsync","input","trim","answer","prompts","type","initial","validate","path","basename","resolve","nonInteractiveHelp","error","code","green","program","cyan","join","fs","ensureDir","padEnd","str","width","len","Math","max","stripAnsi","length","Array","resolveTemplateAsync","resolvedTemplate","version","newestSdkVersion","data","newestSdkReleaseData","Versions","newestReleasedSdkVersionAsync","versionParam","beta","majorVersion","parseInt","includes","templateSpec","npmPackageArg","registry","escapedName","raw","fetchSpec","descriptionColumn","map","t","selectAsync","optionsPerPage","choices","separator","value","title","bold","short","actionAsync","incomingProjectRoot","warnMigration","options","deprecatedNameArgument","undefined","AbortCommandError","cwd","npmPackageName","debug","projectName","initialConfig","expo","slug","extractTemplateStep","logNewSection","projectPath","extractAndPrepareTemplateAppAsync","succeed","e","fail","packageManager","resolvePackageManager","isBare","directoryExistsAsync","workflow","hasPodsInstalled","needsPodsInstalled","existsSync","installNodeDependenciesAsync","installCocoaPodsAsync","cdPath","getChangeDirectoryPath","addNewLineIfNone","logProjectReadyAsync","logNodeInstallWarning","logCocoaPodsWarning","initGitRepoAsync","installJsDepsStep","root","spawnAsync","log","gray","errno","warn","stdio","dim","macOSComment","addBareUpdatesWarningsAsync","hasExpoUpdatesInstalledAsync","usesOldExpoUpdatesAsync","terminalLink","didConfigureUpdatesProjectFiles","username","UserManager","getCurrentUsernameAsync","configureUpdatesProjectFilesAsync","exp","getConfig","skipSDKVersionRequirement","androidManifestPath","AndroidConfig","Paths","getAndroidManifestAsync","androidManifestJSON","Manifest","readAndroidManifestAsync","result","Updates","setUpdatesConfig","writeAndroidManifestAsync","iosSourceRoot","IOSConfig","getSourceRoot","supportingDirectory","plistFilePath","plist","parse","readFileSync","writeFile","build"],"sources":["../../src/commands/initAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport { AndroidConfig, IOSConfig } from '@expo/config-plugins';\nimport plist from '@expo/plist';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport program from 'commander';\nimport fs from 'fs-extra';\nimport npmPackageArg from 'npm-package-arg';\nimport path from 'path';\nimport stripAnsi from 'strip-ansi';\nimport terminalLink from 'terminal-link';\nimport { UserManager, Versions } from 'xdl';\n\nimport CommandError, { AbortCommandError, SilentError } from '../CommandError';\nimport Log from '../log';\nimport { warnMigration } from '../utils/migration';\nimport { logNewSection } from '../utils/ora';\nimport prompts, { selectAsync } from '../utils/prompts';\nimport { directoryExistsAsync } from './eject/clearNativeFolder';\nimport * as CreateApp from './utils/CreateApp';\nimport { hasExpoUpdatesInstalledAsync, usesOldExpoUpdatesAsync } from './utils/ProjectUtils';\nimport { extractAndPrepareTemplateAppAsync } from './utils/extractTemplateAppAsync';\n\ntype Options = {\n  template?: string;\n  install: boolean;\n  npm: boolean;\n  yarn: boolean;\n  yes: boolean;\n};\n\nconst FEATURED_TEMPLATES = [\n  '----- Managed workflow -----',\n  {\n    shortName: 'blank',\n    name: 'expo-template-blank',\n    description: 'a minimal app as clean as an empty canvas',\n  },\n  {\n    shortName: 'blank (TypeScript)',\n    name: 'expo-template-blank-typescript',\n    description: 'same as blank but with TypeScript configuration',\n  },\n  {\n    shortName: 'tabs (TypeScript)',\n    name: 'expo-template-tabs',\n    description: 'several example screens and tabs using react-navigation and TypeScript',\n  },\n  '----- Bare workflow -----',\n  {\n    shortName: 'minimal',\n    name: 'expo-template-bare-minimum',\n    description: 'bare and minimal, just the essentials to get you started',\n  },\n];\n\nconst isMacOS = process.platform === 'darwin';\n\nfunction assertValidName(folderName: string) {\n  const validation = CreateApp.validateName(folderName);\n  if (typeof validation === 'string') {\n    throw new CommandError(\n      `Cannot create an app named ${chalk.red(`\"${folderName}\"`)}. ${validation}`\n    );\n  }\n  const isFolderNameForbidden = CreateApp.isFolderNameForbidden(folderName);\n  if (isFolderNameForbidden) {\n    throw new CommandError(\n      `Cannot create an app named ${chalk.red(\n        `\"${folderName}\"`\n      )} because it would conflict with a dependency of the same name.`\n    );\n  }\n}\n\nfunction parseOptions(command: Partial<Options>): Options {\n  return {\n    yes: !!command.yes,\n    yarn: !!command.yarn,\n    npm: !!command.npm,\n    install: !!command.install,\n    template: command.template,\n  };\n}\n\nasync function assertFolderEmptyAsync(projectRoot: string, folderName?: string) {\n  if (!(await CreateApp.assertFolderEmptyAsync({ projectRoot, folderName, overwrite: false }))) {\n    const message = 'Try using a new directory name, or moving these files.';\n    Log.newLine();\n    Log.nested(message);\n    Log.newLine();\n    throw new SilentError(message);\n  }\n}\n\nasync function resolveProjectRootAsync(input?: string): Promise<string> {\n  let name = input?.trim();\n\n  if (!name) {\n    try {\n      const { answer } = await prompts(\n        {\n          type: 'text',\n          name: 'answer',\n          message: 'What would you like to name your app?',\n          initial: 'my-app',\n          validate: name => {\n            const validation = CreateApp.validateName(path.basename(path.resolve(name)));\n            if (typeof validation === 'string') {\n              return 'Invalid project name: ' + validation;\n            }\n            return true;\n          },\n        },\n        {\n          nonInteractiveHelp: 'Pass the project name using the first argument `expo init <name>`',\n        }\n      );\n\n      if (typeof answer === 'string') {\n        name = answer.trim();\n      }\n    } catch (error: any) {\n      // Handle the aborted message in a custom way.\n      if (error.code !== 'ABORTED') {\n        throw error;\n      }\n    }\n  }\n\n  if (!name) {\n    const message = [\n      '',\n      'Please choose your app name:',\n      `  ${chalk.green(`${program.name()} init`)} ${chalk.cyan('<app-name>')}`,\n      '',\n      `Run ${chalk.green(`${program.name()} init --help`)} for more info`,\n      '',\n    ].join('\\n');\n    Log.nested(message);\n    throw new SilentError(message);\n  }\n\n  const projectRoot = path.resolve(name);\n  const folderName = path.basename(projectRoot);\n\n  assertValidName(folderName);\n\n  await fs.ensureDir(projectRoot);\n\n  await assertFolderEmptyAsync(projectRoot, folderName);\n\n  return projectRoot;\n}\n\nfunction padEnd(str: string, width: number): string {\n  // Pulled from commander for overriding\n  const len = Math.max(0, width - stripAnsi(str).length);\n  return str + Array(len + 1).join(' ');\n}\n\nasync function resolveTemplateAsync(resolvedTemplate?: string | null) {\n  const {\n    version: newestSdkVersion,\n    data: newestSdkReleaseData,\n  } = await Versions.newestReleasedSdkVersionAsync();\n\n  // If the user is opting into a beta then we need to append the template tag explicitly\n  // in order to not fall back to the latest tag for templates.\n  let versionParam = '';\n  if (newestSdkReleaseData?.beta) {\n    const majorVersion = parseInt(newestSdkVersion, 10);\n    versionParam = `@sdk-${majorVersion}`;\n\n    // If the --template flag is provided without an explicit version, then opt-in to\n    // the beta version\n    if (resolvedTemplate && !resolvedTemplate.includes('@')) {\n      resolvedTemplate = `${resolvedTemplate}${versionParam}`;\n    }\n  }\n\n  let templateSpec;\n  if (resolvedTemplate) {\n    templateSpec = npmPackageArg(resolvedTemplate);\n\n    // For backwards compatibility, 'blank' and 'tabs' are aliases for\n    // 'expo-template-blank' and 'expo-template-tabs', respectively.\n    if (\n      templateSpec.name &&\n      templateSpec.registry &&\n      ['blank', 'tabs', 'bare-minimum'].includes(templateSpec.name)\n    ) {\n      templateSpec.escapedName = `expo-template-${templateSpec.name}`;\n      templateSpec.name = templateSpec.escapedName;\n      templateSpec.raw = templateSpec.escapedName;\n    }\n\n    return `${templateSpec.name ?? templateSpec.raw}@${templateSpec.fetchSpec ?? 'latest'}`;\n  }\n\n  const descriptionColumn =\n    Math.max(...FEATURED_TEMPLATES.map(t => (typeof t === 'object' ? t.shortName.length : 0))) + 2;\n  const template = await selectAsync(\n    {\n      message: 'Choose a template:',\n      optionsPerPage: 20,\n      choices: FEATURED_TEMPLATES.map(template => {\n        if (typeof template === 'string') {\n          return prompts.separator(template);\n        } else {\n          return {\n            value: template.name,\n            title:\n              chalk.bold(padEnd(template.shortName, descriptionColumn)) +\n              template.description.trim(),\n            short: template.name,\n          };\n        }\n      }),\n    },\n    {\n      nonInteractiveHelp:\n        '--template: argument is required in non-interactive mode. Valid choices are: \"blank\", \"tabs\", \"bare-minimum\" or any custom template (name of npm package).',\n    }\n  );\n  return `${template}${versionParam}`;\n}\n\nexport async function actionAsync(incomingProjectRoot: string, command: Partial<Options>) {\n  warnMigration('npx create-expo-app --template');\n\n  const options = parseOptions(command);\n\n  const deprecatedNameArgument =\n    typeof (command as any).name === 'string' ? (command as any).name : undefined;\n  if (deprecatedNameArgument) {\n    // Commander doesn't support using the `--name` argument so it shouldn't have been implemented in the first place.\n    // Using `--name` will cause other parts of commander to break since it expects a function and `this.name` would be a string.\n\n    Log.error(chalk`Deprecated: Use {bold expo init [name]} instead of {bold --name [name]}.`);\n    throw new AbortCommandError();\n  }\n\n  // Resolve the name, and projectRoot\n  let projectRoot: string;\n  if (!incomingProjectRoot && options.yes) {\n    projectRoot = path.resolve(process.cwd());\n    const folderName = path.basename(projectRoot);\n    assertValidName(folderName);\n    await assertFolderEmptyAsync(projectRoot, folderName);\n  } else {\n    projectRoot = await resolveProjectRootAsync(incomingProjectRoot);\n  }\n\n  let resolvedTemplate: string | null = options.template ?? null;\n  // @ts-ignore: This guards against someone passing --template without a name after it.\n  if (resolvedTemplate === true) {\n    throw new CommandError('Please specify the template name');\n  }\n\n  // Download and sync templates\n  // TODO(Bacon): revisit\n  if (options.yes && !resolvedTemplate) {\n    resolvedTemplate = 'blank';\n  }\n\n  // Supported templates:\n  // `-t tabs` (tabs, blank, bare-minimum, expo-template-blank-typescript)\n  // `-t tabs@40`\n  // `-t tabs@sdk-40`\n  // `-t tabs@latest`\n  // `-t expo-template-tabs@latest`\n  const npmPackageName = await resolveTemplateAsync(resolvedTemplate);\n\n  Log.debug(`Using template: ${npmPackageName}`);\n\n  const projectName = path.basename(projectRoot);\n  const initialConfig: Record<string, any> & { expo: any } = {\n    // In older templates the `.name` property is set when extracting template files. This is because older templates have the `.name` property set to `HelloWorld`.\n    // Newer templates don't need the `.name` property set, so we don't bother with setting it.\n    expo: {\n      name: projectName,\n      slug: projectName,\n    },\n  };\n\n  const extractTemplateStep = logNewSection('Downloading template.');\n  let projectPath;\n  try {\n    projectPath = await extractAndPrepareTemplateAppAsync(\n      npmPackageName,\n      projectRoot,\n      initialConfig\n    );\n    extractTemplateStep.succeed('Downloaded template.');\n  } catch (e: any) {\n    extractTemplateStep.fail('Something went wrong while downloading and extracting the template.');\n    throw e;\n  }\n\n  // Install dependencies\n\n  const packageManager = CreateApp.resolvePackageManager(options);\n\n  // TODO(Bacon): not this\n  const isBare = await directoryExistsAsync(path.join(projectRoot, 'ios'));\n  const workflow = isBare ? 'bare' : 'managed';\n\n  let hasPodsInstalled: boolean = false;\n  const needsPodsInstalled = fs.existsSync(path.join(projectRoot, 'ios/Podfile'));\n  if (options.install) {\n    await installNodeDependenciesAsync(projectRoot, packageManager);\n    if (needsPodsInstalled) {\n      hasPodsInstalled = await CreateApp.installCocoaPodsAsync(projectRoot);\n    }\n  }\n\n  const cdPath = CreateApp.getChangeDirectoryPath(projectRoot);\n\n  // Log info\n\n  Log.addNewLineIfNone();\n\n  await logProjectReadyAsync(projectRoot, {\n    cdPath,\n    packageManager,\n    workflow,\n  });\n\n  // Log a warning about needing to install node modules\n  if (!options.install) {\n    logNodeInstallWarning(cdPath, packageManager);\n  }\n  if (needsPodsInstalled && !hasPodsInstalled) {\n    logCocoaPodsWarning(cdPath);\n  }\n\n  // Initialize Git at the end to ensure all lock files are committed.\n  await initGitRepoAsync(projectPath);\n}\n\nasync function installNodeDependenciesAsync(projectRoot: string, packageManager: 'yarn' | 'npm') {\n  const installJsDepsStep = logNewSection('Installing JavaScript dependencies.');\n  try {\n    await CreateApp.installNodeDependenciesAsync(projectRoot, packageManager);\n    installJsDepsStep.succeed('Installed JavaScript dependencies.');\n  } catch {\n    installJsDepsStep.fail(\n      `Something went wrong installing JavaScript dependencies. Check your ${packageManager} logs. Continuing to initialize the app.`\n    );\n  }\n}\n\n/**\n * Check if the project is inside an existing Git repo, if so bail out,\n * if not then create a new git repo and commit the initial files.\n *\n * @returns `true` if git is setup.\n */\nasync function initGitRepoAsync(root: string): Promise<boolean> {\n  // let's see if we're in a git tree\n  try {\n    await spawnAsync('git', ['rev-parse', '--is-inside-work-tree'], {\n      cwd: root,\n    });\n    // Log a light notice if we're in a git tree.\n    Log.log(\n      chalk.gray(`Project is already inside of a git repo, skipping ${chalk.bold`git init`}.`)\n    );\n    // Bail out if inside git repo, this makes monorepos a bit easier to setup.\n    return true;\n  } catch (e: any) {\n    if (e.errno === 'ENOENT') {\n      Log.warn('Unable to initialize git repo. `git` not in PATH.');\n      return false;\n    }\n  }\n\n  // not in git tree, so let's init\n  try {\n    await spawnAsync('git', ['init'], { cwd: root });\n    Log.debug('Initialized a git repository.');\n\n    await spawnAsync('git', ['add', '--all'], { cwd: root, stdio: 'ignore' });\n    await spawnAsync('git', ['commit', '-m', 'Created a new Expo app'], {\n      cwd: root,\n      stdio: 'ignore',\n    });\n\n    return true;\n  } catch (e: any) {\n    Log.debug('git error:', e);\n    // no-op -- this is just a convenience and we don't care if it fails\n    return false;\n  }\n}\n\nfunction logNodeInstallWarning(cdPath: string, packageManager: 'yarn' | 'npm'): void {\n  Log.newLine();\n  Log.nested(`⚠️  Before running your app, make sure you have node modules installed:`);\n  Log.nested('');\n  if (cdPath) {\n    // In the case of --yes the project can be created in place so there would be no need to change directories.\n    Log.nested(`  cd ${cdPath}/`);\n  }\n  Log.nested(`  ${packageManager === 'npm' ? 'npm install' : 'yarn'}`);\n  Log.nested('');\n}\n\nfunction logCocoaPodsWarning(cdPath: string): void {\n  if (process.platform !== 'darwin') {\n    return;\n  }\n  Log.newLine();\n  Log.nested(\n    `⚠️  Before running your app on iOS, make sure you have CocoaPods installed and initialize the project:`\n  );\n  Log.nested('');\n  if (cdPath) {\n    // In the case of --yes the project can be created in place so there would be no need to change directories.\n    Log.nested(`  cd ${cdPath}/`);\n  }\n  Log.nested(`  npx pod-install`);\n  Log.nested('');\n}\n\nasync function logProjectReadyAsync(\n  projectRoot: string,\n  {\n    cdPath,\n    packageManager,\n    workflow,\n  }: {\n    cdPath: string;\n    packageManager: string;\n    workflow: 'managed' | 'bare';\n  }\n) {\n  Log.nested(chalk.bold(`✅ Your project is ready!`));\n  Log.newLine();\n\n  // empty string if project was created in current directory\n  if (cdPath) {\n    Log.nested(\n      `To run your project, navigate to the directory and run one of the following ${packageManager} commands.`\n    );\n    Log.newLine();\n    Log.nested(`- ${chalk.bold('cd ' + cdPath)}`);\n  } else {\n    Log.nested(`To run your project, run one of the following ${packageManager} commands.`);\n    Log.newLine();\n  }\n\n  if (workflow === 'managed') {\n    Log.nested(\n      `- ${chalk.bold(`${packageManager} start`)} ${chalk.dim(\n        `# you can open iOS, Android, or web from here, or run them directly with the commands below.`\n      )}`\n    );\n  }\n  Log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run android' : 'yarn android')}`);\n\n  let macOSComment = '';\n  if (!isMacOS && workflow === 'bare') {\n    macOSComment =\n      ' # you need to use macOS to build the iOS project - use managed workflow if you need to do iOS development without a Mac';\n  } else if (!isMacOS && workflow === 'managed') {\n    macOSComment = ' # requires an iOS device or macOS for access to an iOS simulator';\n  }\n  Log.nested(\n    `- ${chalk.bold(packageManager === 'npm' ? 'npm run ios' : 'yarn ios')}${macOSComment}`\n  );\n\n  Log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run web' : 'yarn web')}`);\n\n  if (workflow === 'bare') {\n    Log.newLine();\n    Log.nested(\n      `💡 You can also open up the projects in the ${chalk.bold('ios')} and ${chalk.bold(\n        'android'\n      )} directories with their respective IDEs.`\n    );\n\n    await addBareUpdatesWarningsAsync(projectRoot);\n\n    // TODO: add equivalent of this or some command to wrap it:\n    // # ios\n    // $ open -a Xcode ./ios/{PROJECT_NAME}.xcworkspace\n    // # android\n    // $ open -a /Applications/Android\\\\ Studio.app ./android\n  }\n}\n\nasync function addBareUpdatesWarningsAsync(projectRoot: string) {\n  if (!(await hasExpoUpdatesInstalledAsync(projectRoot))) {\n    return;\n  }\n\n  if (await usesOldExpoUpdatesAsync(projectRoot)) {\n    Log.nested(\n      `🚀 ${terminalLink(\n        'expo-updates',\n        'https://github.com/expo/expo/blob/main/packages/expo-updates/README.md'\n      )} has been configured in your project. Before you do a release build, make sure you run ${chalk.bold(\n        'expo publish'\n      )}. ${terminalLink('Learn more.', 'https://expo.fyi/release-builds-with-expo-updates')}`\n    );\n    return;\n  }\n\n  let didConfigureUpdatesProjectFiles: boolean = false;\n  const username = await UserManager.getCurrentUsernameAsync();\n  if (username) {\n    try {\n      await configureUpdatesProjectFilesAsync(projectRoot, username);\n      didConfigureUpdatesProjectFiles = true;\n    } catch {}\n  }\n\n  if (didConfigureUpdatesProjectFiles) {\n    Log.nested(\n      `🚀 ${terminalLink(\n        'expo-updates',\n        'https://github.com/expo/expo/blob/main/packages/expo-updates/README.md'\n      )} has been configured in your project. If you publish this project under a different user account than ${chalk.bold(\n        username\n      )}, you'll need to update the configuration in Expo.plist and AndroidManifest.xml before making a release build.`\n    );\n  } else {\n    Log.nested(\n      `🚀 ${terminalLink(\n        'expo-updates',\n        'https://github.com/expo/expo/blob/main/packages/expo-updates/README.md'\n      )} has been installed in your project. Before you do a release build, you'll need to configure a few values in Expo.plist and AndroidManifest.xml in order for updates to work.`\n    );\n  }\n}\n\nasync function configureUpdatesProjectFilesAsync(projectRoot: string, username: string) {\n  // skipSDKVersionRequirement here so that this will work when you use the\n  // --no-install flag. the tradeoff is that the SDK version field won't be\n  // filled in, but we should be getting rid of that for expo-updates ASAP\n  // anyways.\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  // apply Android config\n  const androidManifestPath = await AndroidConfig.Paths.getAndroidManifestAsync(projectRoot);\n  const androidManifestJSON = await AndroidConfig.Manifest.readAndroidManifestAsync(\n    androidManifestPath\n  );\n  const result = await AndroidConfig.Updates.setUpdatesConfig(\n    projectRoot,\n    exp,\n    androidManifestJSON,\n    username\n  );\n  await AndroidConfig.Manifest.writeAndroidManifestAsync(androidManifestPath, result);\n\n  // apply iOS config\n  const iosSourceRoot = IOSConfig.Paths.getSourceRoot(projectRoot);\n  const supportingDirectory = path.join(iosSourceRoot, 'Supporting');\n\n  const plistFilePath = path.join(supportingDirectory, 'Expo.plist');\n  let data = plist.parse(fs.readFileSync(plistFilePath, 'utf8'));\n  data = IOSConfig.Updates.setUpdatesConfig(projectRoot, exp, data, username);\n\n  await fs.writeFile(plistFilePath, plist.build(data));\n}\n"],"mappings":"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"}