{"version":3,"file":"install.js","names":["program","applyAsyncAction","command","alias","helpGroup","option","description","on","Log","log","chalk","green"],"sources":["../../src/commands/install.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Command } from 'commander';\n\nimport Log from '../log';\nimport { applyAsyncAction } from './utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncAction<string[]>(\n    program\n      .command('install [packages...]')\n      .alias('add')\n      .helpGroup('core')\n      .option('--npm', 'Use npm to install dependencies. (default when package-lock.json exists)')\n      .option('--yarn', 'Use Yarn to install dependencies. (default when yarn.lock exists)')\n      .description('Install a module or other package to a project')\n      .on('--help', () => {\n        Log.log(\n          `  Additional options can be passed to the ${chalk.green('npm install')} or ${chalk.green(\n            'yarn add'\n          )} command by using ${chalk.green('--')}`\n        );\n        Log.log(`  For example: ${chalk.green('expo install somepackage -- --verbose')}`);\n      }),\n    () => import('./installAsync')\n  );\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA4D;AAAA;AAAA;AAE7C,kBAAUA,OAAgB,EAAE;EACzC,IAAAC,oCAAgB,EACdD,OAAO,CACJE,OAAO,CAAC,uBAAuB,CAAC,CAChCC,KAAK,CAAC,KAAK,CAAC,CACZC,SAAS,CAAC,MAAM,CAAC,CACjBC,MAAM,CAAC,OAAO,EAAE,0EAA0E,CAAC,CAC3FA,MAAM,CAAC,QAAQ,EAAE,mEAAmE,CAAC,CACrFC,WAAW,CAAC,gDAAgD,CAAC,CAC7DC,EAAE,CAAC,QAAQ,EAAE,MAAM;IAClBC,cAAG,CAACC,GAAG,CACJ,6CAA4CC,gBAAK,CAACC,KAAK,CAAC,aAAa,CAAE,OAAMD,gBAAK,CAACC,KAAK,CACvF,UAAU,CACV,qBAAoBD,gBAAK,CAACC,KAAK,CAAC,IAAI,CAAE,EAAC,CAC1C;IACDH,cAAG,CAACC,GAAG,CAAE,kBAAiBC,gBAAK,CAACC,KAAK,CAAC,uCAAuC,CAAE,EAAC,CAAC;EACnF,CAAC,CAAC,EACJ,mEAAa,gBAAgB,GAAC,CAC/B;AACH"}