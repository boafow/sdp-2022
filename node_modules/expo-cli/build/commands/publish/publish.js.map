{"version":3,"file":"publish.js","names":["program","applyAsyncActionProjectDir","command","alias","description","helpGroup","option","checkConfig","parseInt"],"sources":["../../../src/commands/publish/publish.ts"],"sourcesContent":["import type { Command } from 'commander';\n\nimport { applyAsyncActionProjectDir } from '../utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncActionProjectDir(\n    program\n      .command('publish [path]')\n      .alias('p')\n      .description('Deploy a project to Expo hosting')\n      .helpGroup('publish')\n      .option('-q, --quiet', 'Suppress verbose output from the Metro bundler.')\n      .option('-s, --send-to [dest]', 'A phone number or email address to send a link to')\n      .option('-c, --clear', 'Clear the Metro bundler cache')\n      .option(\n        '-t, --target <managed|bare>',\n        'Target environment for which this publish is intended. Options are `managed` or `bare`.'\n      )\n      // TODO(anp) set a default for this dynamically based on whether we're inside a container?\n      .option('--max-workers <num>', 'Maximum number of tasks to allow Metro to spawn.')\n      .option(\n        '--release-channel <name>',\n        \"The release channel to publish to. Default is 'default'.\",\n        'default'\n      ),\n    () => import('./publishAsync')\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:set [path]')\n      .alias('ps')\n      .description('Specify the channel to serve a published release')\n      .helpGroup('publish')\n      .option(\n        '-c, --release-channel <name>',\n        'The channel to set the published release. (Required)'\n      )\n      .option(\n        '-p, --publish-id <publish-id>',\n        'The id of the published release to serve from the channel. (Required)'\n      ),\n    () => import('./publishSetAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:rollback [path]')\n      .alias('pr')\n      .description('Undo an update to a channel')\n      .helpGroup('publish')\n      .option('--channel-id <channel-id>', 'This flag is deprecated.')\n      .option('-c, --release-channel <name>', 'The channel to rollback from. (Required)')\n      .option('-s, --sdk-version <version>', 'The sdk version to rollback. (Required)')\n      .option('-p, --platform <android|ios>', 'The platform to rollback.'),\n    () => import('./publishRollbackAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:history [path]')\n      .alias('ph')\n      .description(\"Log the project's releases\")\n      .helpGroup('publish')\n      .option(\n        '-c, --release-channel <name>',\n        'Filter by release channel. If this flag is not included, the most recent publications will be shown.'\n      )\n      .option(\n        '--count <number-of-logs>',\n        'Number of logs to view, maximum 100, default 5.',\n        parseInt\n      )\n      .option(\n        '-p, --platform <android|ios>',\n        'Filter by platform, android or ios. Defaults to both platforms.'\n      )\n      .option('-s, --sdk-version <version>', 'Filter by SDK version e.g. 35.0.0')\n      .option('-r, --raw', 'Produce some raw output.'),\n    () => import('./publishHistoryAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:details [path]')\n      .alias('pd')\n      .description('Log details of a published release')\n      .helpGroup('publish')\n      .option('--publish-id <publish-id>', 'Publication id. (Required)')\n      .option('-r, --raw', 'Produce some raw output.'),\n    () => import('./publishDetailsAsync'),\n    { checkConfig: true }\n  );\n}\n"],"mappings":";;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAuE;AAAA;AAExD,kBAAUA,OAAgB,EAAE;EACzC,IAAAC,8CAA0B,EACxBD,OAAO,CACJE,OAAO,CAAC,gBAAgB,CAAC,CACzBC,KAAK,CAAC,GAAG,CAAC,CACVC,WAAW,CAAC,kCAAkC,CAAC,CAC/CC,SAAS,CAAC,SAAS,CAAC,CACpBC,MAAM,CAAC,aAAa,EAAE,iDAAiD,CAAC,CACxEA,MAAM,CAAC,sBAAsB,EAAE,mDAAmD,CAAC,CACnFA,MAAM,CAAC,aAAa,EAAE,+BAA+B,CAAC,CACtDA,MAAM,CACL,6BAA6B,EAC7B,yFAAyF;EAE3F;EAAA,CACCA,MAAM,CAAC,qBAAqB,EAAE,kDAAkD,CAAC,CACjFA,MAAM,CACL,0BAA0B,EAC1B,0DAA0D,EAC1D,SAAS,CACV,EACH,mEAAa,gBAAgB,GAAC,CAC/B;EAED,IAAAL,8CAA0B,EACxBD,OAAO,CACJE,OAAO,CAAC,oBAAoB,CAAC,CAC7BC,KAAK,CAAC,IAAI,CAAC,CACXC,WAAW,CAAC,kDAAkD,CAAC,CAC/DC,SAAS,CAAC,SAAS,CAAC,CACpBC,MAAM,CACL,8BAA8B,EAC9B,sDAAsD,CACvD,CACAA,MAAM,CACL,+BAA+B,EAC/B,uEAAuE,CACxE,EACH,mEAAa,mBAAmB,GAAC,EACjC;IAAEC,WAAW,EAAE;EAAK,CAAC,CACtB;EAED,IAAAN,8CAA0B,EACxBD,OAAO,CACJE,OAAO,CAAC,yBAAyB,CAAC,CAClCC,KAAK,CAAC,IAAI,CAAC,CACXC,WAAW,CAAC,6BAA6B,CAAC,CAC1CC,SAAS,CAAC,SAAS,CAAC,CACpBC,MAAM,CAAC,2BAA2B,EAAE,0BAA0B,CAAC,CAC/DA,MAAM,CAAC,8BAA8B,EAAE,0CAA0C,CAAC,CAClFA,MAAM,CAAC,6BAA6B,EAAE,yCAAyC,CAAC,CAChFA,MAAM,CAAC,8BAA8B,EAAE,2BAA2B,CAAC,EACtE,mEAAa,wBAAwB,GAAC,EACtC;IAAEC,WAAW,EAAE;EAAK,CAAC,CACtB;EAED,IAAAN,8CAA0B,EACxBD,OAAO,CACJE,OAAO,CAAC,wBAAwB,CAAC,CACjCC,KAAK,CAAC,IAAI,CAAC,CACXC,WAAW,CAAC,4BAA4B,CAAC,CACzCC,SAAS,CAAC,SAAS,CAAC,CACpBC,MAAM,CACL,8BAA8B,EAC9B,sGAAsG,CACvG,CACAA,MAAM,CACL,0BAA0B,EAC1B,iDAAiD,EACjDE,QAAQ,CACT,CACAF,MAAM,CACL,8BAA8B,EAC9B,iEAAiE,CAClE,CACAA,MAAM,CAAC,6BAA6B,EAAE,mCAAmC,CAAC,CAC1EA,MAAM,CAAC,WAAW,EAAE,0BAA0B,CAAC,EAClD,mEAAa,uBAAuB,GAAC,EACrC;IAAEC,WAAW,EAAE;EAAK,CAAC,CACtB;EAED,IAAAN,8CAA0B,EACxBD,OAAO,CACJE,OAAO,CAAC,wBAAwB,CAAC,CACjCC,KAAK,CAAC,IAAI,CAAC,CACXC,WAAW,CAAC,oCAAoC,CAAC,CACjDC,SAAS,CAAC,SAAS,CAAC,CACpBC,MAAM,CAAC,2BAA2B,EAAE,4BAA4B,CAAC,CACjEA,MAAM,CAAC,WAAW,EAAE,0BAA0B,CAAC,EAClD,mEAAa,uBAAuB,GAAC,EACrC;IAAEC,WAAW,EAAE;EAAK,CAAC,CACtB;AACH"}