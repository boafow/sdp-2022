{"version":3,"file":"publishSetAsync.js","names":["actionAsync","projectRoot","options","releaseChannel","Error","publishId","result","setPublishToChannelAsync","tableString","table","printTableJson","queryResult","Log","log","e","error"],"sources":["../../../src/commands/publish/publishSetAsync.ts"],"sourcesContent":["import * as table from '../../commands/utils/cli-table';\nimport Log from '../../log';\nimport { setPublishToChannelAsync } from '../utils/PublishUtils';\n\ntype Options = { releaseChannel?: string; publishId?: string };\n\nexport async function actionAsync(projectRoot: string, options: Options): Promise<void> {\n  if (!options.releaseChannel) {\n    throw new Error('You must specify a release channel.');\n  }\n  if (!options.publishId) {\n    throw new Error('You must specify a publish id. You can find ids using publish:history.');\n  }\n  try {\n    const result = await setPublishToChannelAsync(\n      projectRoot,\n      options as { releaseChannel: string; publishId: string }\n    );\n    const tableString = table.printTableJson(result.queryResult, 'Channel Set Status ', 'SUCCESS');\n    Log.log(tableString);\n  } catch (e: any) {\n    Log.error(e);\n  }\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAiE;AAAA;AAAA;AAI1D,eAAeA,WAAW,CAACC,WAAmB,EAAEC,OAAgB,EAAiB;EACtF,IAAI,CAACA,OAAO,CAACC,cAAc,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EACxD;EACA,IAAI,CAACF,OAAO,CAACG,SAAS,EAAE;IACtB,MAAM,IAAID,KAAK,CAAC,wEAAwE,CAAC;EAC3F;EACA,IAAI;IACF,MAAME,MAAM,GAAG,MAAM,IAAAC,wCAAwB,EAC3CN,WAAW,EACXC,OAAO,CACR;IACD,MAAMM,WAAW,GAAGC,KAAK,GAACC,cAAc,CAACJ,MAAM,CAACK,WAAW,EAAE,qBAAqB,EAAE,SAAS,CAAC;IAC9FC,cAAG,CAACC,GAAG,CAACL,WAAW,CAAC;EACtB,CAAC,CAAC,OAAOM,CAAM,EAAE;IACfF,cAAG,CAACG,KAAK,CAACD,CAAC,CAAC;EACd;AACF"}