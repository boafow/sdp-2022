{"version":3,"file":"resolveDeviceAsync.js","names":["getBuildDestinationsAsync","osType","devices","profileMethod","SimControl","listDevicesAsync","filter","device","deviceType","simulators","Simulator","sortDefaultDeviceToBeginningAsync","listSimulatorDevicesAsync","resolveDeviceAsync","ensureXcodeCommandLineToolsInstalledAsync","CommandError","simulator","ensureSimulatorOpenAsync","Log","debug","name","udid","spinner","AppleDevice","isEnabled","ora","chalk","cyan","start","catch","stop","value","prompt","type","limit","message","choices","map","item","isConnected","isActive","state","symbol","format","bold","text","title","osVersion","dim","suggest","input","regex","RegExp","choice","test","log","find","isSimulator","startsWith","searchValue","toLowerCase","resolved"],"sources":["../../../../src/commands/run/ios/resolveDeviceAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { AppleDevice, SimControl, Simulator } from 'xdl';\n\nimport CommandError from '../../../CommandError';\nimport Log from '../../../log';\nimport { ora } from '../../../utils/ora';\nimport prompt from '../../../utils/prompts';\nimport { profileMethod } from '../../utils/profileMethod';\n\nasync function getBuildDestinationsAsync({ osType }: { osType?: string } = {}) {\n  const devices = (\n    await profileMethod(SimControl.listDevicesAsync, 'SimControl.listDevicesAsync')()\n  ).filter(device => {\n    return device.deviceType === 'device';\n  });\n\n  const simulators = await Simulator.sortDefaultDeviceToBeginningAsync(\n    await profileMethod(SimControl.listSimulatorDevicesAsync)(),\n    osType\n  );\n\n  return [...devices, ...simulators];\n}\n\nexport async function resolveDeviceAsync(\n  device?: string | boolean,\n  { osType }: { osType?: string } = {}\n): Promise<SimControl.SimulatorDevice | SimControl.XCTraceDevice> {\n  if (!(await profileMethod(Simulator.ensureXcodeCommandLineToolsInstalledAsync)())) {\n    throw new CommandError('Unable to verify Xcode and Simulator installation.');\n  }\n\n  if (!device) {\n    const simulator = await profileMethod(\n      Simulator.ensureSimulatorOpenAsync,\n      'Simulator.ensureSimulatorOpenAsync'\n    )({ osType });\n    Log.debug(`Resolved default (${osType}) device:`, simulator.name, simulator.udid);\n    return simulator;\n  }\n\n  // Only use the spinner with xctrace since it's so slow (~2s), alternative\n  // method is very fast (~50ms) and the flicker makes it seem slower.\n  const spinner = AppleDevice.isEnabled()\n    ? null\n    : ora(`🔍 Finding ${device === true ? 'devices' : `device ${chalk.cyan(device)}`}`).start();\n  let devices: (SimControl.SimulatorDevice | SimControl.XCTraceDevice)[] = await profileMethod(\n    getBuildDestinationsAsync\n  )({ osType }).catch(() => []);\n\n  spinner?.stop();\n\n  if (device === true) {\n    // If osType is defined, then filter out ineligible simulators.\n    // Only do this inside of the device selection so users who pass the entire device udid can attempt to select any simulator (even if it's invalid).\n    if (osType) {\n      devices = devices.filter(device => {\n        // connected device\n        if (!('osType' in device)) {\n          return true;\n        }\n        return device.osType === osType;\n      });\n    }\n\n    // --device with no props after\n    const { value } = await prompt({\n      type: 'autocomplete',\n      name: 'value',\n      limit: 11,\n      message: 'Select a simulator',\n      choices: devices.map(item => {\n        const isConnected = 'deviceType' in item && item.deviceType === 'device';\n        const isActive = 'state' in item && item.state === 'Booted';\n        const symbol = isConnected ? '🔌 ' : '';\n        const format = isActive ? chalk.bold : (text: string) => text;\n        return {\n          title: `${symbol}${format(item.name)}${\n            item.osVersion ? chalk.dim(` (${item.osVersion})`) : ''\n          }`,\n          value: item.udid,\n        };\n      }),\n      suggest: (input: any, choices: any) => {\n        const regex = new RegExp(input, 'i');\n        return choices.filter((choice: any) => regex.test(choice.title));\n      },\n    });\n    Log.log(chalk.dim`\\u203A Using --device ${value}`);\n    const device = devices.find(device => device.udid === value)!;\n    const isSimulator =\n      !('deviceType' in device) ||\n      device.deviceType.startsWith('com.apple.CoreSimulator.SimDeviceType.');\n    if (isSimulator) {\n      return await Simulator.ensureSimulatorOpenAsync({ udid: device.udid });\n    }\n    return device;\n  }\n  const searchValue = device.toLowerCase();\n  const resolved = devices.find(device => {\n    return device.udid.toLowerCase() === searchValue || device.name.toLowerCase() === searchValue;\n  });\n\n  if (!resolved) {\n    throw new CommandError(`No device UDID or name matching \"${device}\"`);\n  }\n\n  const isSimulator =\n    !('deviceType' in resolved) ||\n    resolved.deviceType.startsWith('com.apple.CoreSimulator.SimDeviceType.');\n  if (isSimulator) {\n    return await Simulator.ensureSimulatorOpenAsync({ udid: resolved.udid });\n  }\n\n  return resolved;\n}\n"],"mappings":"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"}