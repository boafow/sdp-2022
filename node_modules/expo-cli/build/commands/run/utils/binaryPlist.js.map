{"version":3,"file":"binaryPlist.js","names":["CHAR_CHEVRON_OPEN","CHAR_B_LOWER","parseBinaryPlistAsync","plistPath","Log","debug","parsePlistBuffer","fs","readFile","contents","info","plist","parse","toString","Array","isArray","binaryPlist","parseBuffer","Error"],"sources":["../../../../src/commands/run/utils/binaryPlist.ts"],"sourcesContent":["import plist from '@expo/plist';\n// @ts-ignore\nimport binaryPlist from 'bplist-parser';\nimport fs from 'fs-extra';\n\nimport Log from '../../../log';\n\nconst CHAR_CHEVRON_OPEN = 60;\nconst CHAR_B_LOWER = 98;\n// .mobileprovision\n// const CHAR_ZERO = 30;\n\nexport async function parseBinaryPlistAsync(plistPath: string) {\n  Log.debug(`Parse plist: ${plistPath}`);\n\n  return parsePlistBuffer(await fs.readFile(plistPath));\n}\n\nexport function parsePlistBuffer(contents: Buffer) {\n  if (contents[0] === CHAR_CHEVRON_OPEN) {\n    const info = plist.parse(contents.toString());\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else if (contents[0] === CHAR_B_LOWER) {\n    const info = binaryPlist.parseBuffer(contents);\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else {\n    throw new Error(`Cannot parse plist of type byte (0x${contents[0].toString(16)})`);\n  }\n}\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA+B;AAJ/B;;AAMA,MAAMA,iBAAiB,GAAG,EAAE;AAC5B,MAAMC,YAAY,GAAG,EAAE;AACvB;AACA;;AAEO,eAAeC,qBAAqB,CAACC,SAAiB,EAAE;EAC7DC,cAAG,CAACC,KAAK,CAAE,gBAAeF,SAAU,EAAC,CAAC;EAEtC,OAAOG,gBAAgB,CAAC,MAAMC,kBAAE,CAACC,QAAQ,CAACL,SAAS,CAAC,CAAC;AACvD;AAEO,SAASG,gBAAgB,CAACG,QAAgB,EAAE;EACjD,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAKT,iBAAiB,EAAE;IACrC,MAAMU,IAAI,GAAGC,gBAAK,CAACC,KAAK,CAACH,QAAQ,CAACI,QAAQ,EAAE,CAAC;IAC7C,IAAIC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE,OAAOA,IAAI,CAAC,CAAC,CAAC;IACvC,OAAOA,IAAI;EACb,CAAC,MAAM,IAAID,QAAQ,CAAC,CAAC,CAAC,KAAKR,YAAY,EAAE;IACvC,MAAMS,IAAI,GAAGM,uBAAW,CAACC,WAAW,CAACR,QAAQ,CAAC;IAC9C,IAAIK,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE,OAAOA,IAAI,CAAC,CAAC,CAAC;IACvC,OAAOA,IAAI;EACb,CAAC,MAAM;IACL,MAAM,IAAIQ,KAAK,CAAE,sCAAqCT,QAAQ,CAAC,CAAC,CAAC,CAACI,QAAQ,CAAC,EAAE,CAAE,GAAE,CAAC;EACpF;AACF"}