{"version":3,"file":"start.js","names":["program","deprecatedHelp","value","chalk","yellow","command","alias","description","helpGroup","option","urlOpts","allowOffline","asyncActionProjectDir","projectRoot","options","normalizeOptionsAsync","normalizedOptions","actionAsync","webOnly"],"sources":["../../src/commands/start.ts"],"sourcesContent":["import chalk from 'chalk';\n\nimport type { RawStartOptions } from './start/parseStartOptions';\n\nexport default (program: any) => {\n  const deprecatedHelp = (value: string) => chalk.yellow`Deprecated: ` + value;\n  program\n    .command('start [path]')\n    .alias('r')\n    .description('Start a local dev server for the app')\n    .helpGroup('core')\n    .option('-s, --send-to [dest]', 'An email address to send a link to')\n    .option('-c, --clear', 'Clear the Metro bundler cache')\n    // TODO(anp) set a default for this dynamically based on whether we're inside a container?\n    .option('--max-workers <num>', 'Maximum number of tasks to allow Metro to spawn.')\n    .option('--no-dev', 'Turn development mode off')\n    .option('--minify', 'Minify code')\n    .option('--https', 'To start webpack with https protocol')\n    .option('--force-manifest-type <manifest-type>', 'Override auto detection of manifest type')\n    .option(\n      '-p, --port <port>',\n      'Port to start the native Metro bundler on (does not apply to web or tunnel). Default: 19000'\n    )\n    .urlOpts()\n    .allowOffline()\n    .option('--dev', deprecatedHelp('Dev mode is used by default'))\n    .option('--no-minify', deprecatedHelp('Minify is disabled by default'))\n    .option('--no-https', deprecatedHelp('https is disabled by default'))\n    .asyncActionProjectDir(\n      async (projectRoot: string, options: RawStartOptions): Promise<void> => {\n        const { normalizeOptionsAsync } = await import('./start/parseStartOptions');\n        const normalizedOptions = await normalizeOptionsAsync(projectRoot, options);\n        const { actionAsync } = await import('./start/startAsync');\n        return await actionAsync(projectRoot, normalizedOptions);\n      }\n    );\n\n  program\n    .command('start:web [path]')\n    .alias('web')\n    .description('Start a Webpack dev server for the web app')\n    .helpGroup('core')\n    .option('--no-dev', 'Turn development mode off')\n    .option('--minify', 'Minify code')\n    .option('--https', 'To start webpack with https protocol')\n    .option('--force-manifest-type <manifest-type>', 'Override auto detection of manifest type')\n    .option('-p, --port <port>', 'Port to start the Webpack bundler on. Default: 19006')\n    .option('-s, --send-to [dest]', 'An email address to send a link to')\n    .urlOpts()\n    .allowOffline()\n    .option('--dev', deprecatedHelp('Dev mode is used by default'))\n    .option('--no-minify', deprecatedHelp('Minify is disabled by default'))\n    .option('--no-https', deprecatedHelp('https is disabled by default'))\n    .asyncActionProjectDir(\n      async (projectRoot: string, options: RawStartOptions): Promise<void> => {\n        const { normalizeOptionsAsync } = await import('./start/parseStartOptions');\n        const normalizedOptions = await normalizeOptionsAsync(projectRoot, {\n          ...options,\n          webOnly: true,\n        });\n        const { actionAsync } = await import('./start/startAsync');\n        return await actionAsync(projectRoot, normalizedOptions);\n      }\n    );\n};\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA0B;AAAA;AAAA;AAAA,eAIVA,OAAY,IAAK;EAC/B,MAAMC,cAAc,GAAIC,KAAa,IAAKC,gBAAK,CAACC,MAAO,cAAa,GAAGF,KAAK;EAC5EF,OAAO,CACJK,OAAO,CAAC,cAAc,CAAC,CACvBC,KAAK,CAAC,GAAG,CAAC,CACVC,WAAW,CAAC,sCAAsC,CAAC,CACnDC,SAAS,CAAC,MAAM,CAAC,CACjBC,MAAM,CAAC,sBAAsB,EAAE,oCAAoC,CAAC,CACpEA,MAAM,CAAC,aAAa,EAAE,+BAA+B;EACtD;EAAA,CACCA,MAAM,CAAC,qBAAqB,EAAE,kDAAkD,CAAC,CACjFA,MAAM,CAAC,UAAU,EAAE,2BAA2B,CAAC,CAC/CA,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,CACjCA,MAAM,CAAC,SAAS,EAAE,sCAAsC,CAAC,CACzDA,MAAM,CAAC,uCAAuC,EAAE,0CAA0C,CAAC,CAC3FA,MAAM,CACL,mBAAmB,EACnB,6FAA6F,CAC9F,CACAC,OAAO,EAAE,CACTC,YAAY,EAAE,CACdF,MAAM,CAAC,OAAO,EAAER,cAAc,CAAC,6BAA6B,CAAC,CAAC,CAC9DQ,MAAM,CAAC,aAAa,EAAER,cAAc,CAAC,+BAA+B,CAAC,CAAC,CACtEQ,MAAM,CAAC,YAAY,EAAER,cAAc,CAAC,8BAA8B,CAAC,CAAC,CACpEW,qBAAqB,CACpB,OAAOC,WAAmB,EAAEC,OAAwB,KAAoB;IACtE,MAAM;MAAEC;IAAsB,CAAC,GAAG,mEAAa,2BAA2B,GAAC;IAC3E,MAAMC,iBAAiB,GAAG,MAAMD,qBAAqB,CAACF,WAAW,EAAEC,OAAO,CAAC;IAC3E,MAAM;MAAEG;IAAY,CAAC,GAAG,mEAAa,oBAAoB,GAAC;IAC1D,OAAO,MAAMA,WAAW,CAACJ,WAAW,EAAEG,iBAAiB,CAAC;EAC1D,CAAC,CACF;EAEHhB,OAAO,CACJK,OAAO,CAAC,kBAAkB,CAAC,CAC3BC,KAAK,CAAC,KAAK,CAAC,CACZC,WAAW,CAAC,4CAA4C,CAAC,CACzDC,SAAS,CAAC,MAAM,CAAC,CACjBC,MAAM,CAAC,UAAU,EAAE,2BAA2B,CAAC,CAC/CA,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,CACjCA,MAAM,CAAC,SAAS,EAAE,sCAAsC,CAAC,CACzDA,MAAM,CAAC,uCAAuC,EAAE,0CAA0C,CAAC,CAC3FA,MAAM,CAAC,mBAAmB,EAAE,sDAAsD,CAAC,CACnFA,MAAM,CAAC,sBAAsB,EAAE,oCAAoC,CAAC,CACpEC,OAAO,EAAE,CACTC,YAAY,EAAE,CACdF,MAAM,CAAC,OAAO,EAAER,cAAc,CAAC,6BAA6B,CAAC,CAAC,CAC9DQ,MAAM,CAAC,aAAa,EAAER,cAAc,CAAC,+BAA+B,CAAC,CAAC,CACtEQ,MAAM,CAAC,YAAY,EAAER,cAAc,CAAC,8BAA8B,CAAC,CAAC,CACpEW,qBAAqB,CACpB,OAAOC,WAAmB,EAAEC,OAAwB,KAAoB;IACtE,MAAM;MAAEC;IAAsB,CAAC,GAAG,mEAAa,2BAA2B,GAAC;IAC3E,MAAMC,iBAAiB,GAAG,MAAMD,qBAAqB,CAACF,WAAW,EAAE;MACjE,GAAGC,OAAO;MACVI,OAAO,EAAE;IACX,CAAC,CAAC;IACF,MAAM;MAAED;IAAY,CAAC,GAAG,mEAAa,oBAAoB,GAAC;IAC1D,OAAO,MAAMA,WAAW,CAACJ,WAAW,EAAEG,iBAAiB,CAAC;EAC1D,CAAC,CACF;AACL,CAAC;AAAA"}