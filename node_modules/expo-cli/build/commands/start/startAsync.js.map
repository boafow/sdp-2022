{"version":3,"file":"startAsync.js","names":["actionAsync","projectRoot","options","warnAboutLocalCLI","localCmd","Log","log","chalk","gray","installExitHooks","devClient","hasExpoInstalled","resolveFrom","silent","ConfigError","exp","pkg","profileMethod","getConfig","skipSDKVersionRequirement","webOnly","web","ensureWebSupportSetupAsync","track","urlOpts","optsAsync","rootPath","path","resolve","Versions","gteSdkVersion","ensureTypeScriptSetupAsync","validateDependenciesVersionsAsync","isLegacyImportsEnabled","assertProjectHasExpoExtensionFilesAsync","startOptions","parseStartOptions","LoadingPageHandler","setOnDeepLink","isDevClient","platform","StatusEventEmitter","once","UnifiedAnalytics","logEvent","status","getDevClientProperties","Project","startAsync","startWebpackAsync","url","UrlUtils","constructDeepLinkAsync","catch","error","code","sendTo","recipient","getRecipient","sendUrlAsync","warn","handleMobileOptsAsync","isTerminalUIEnabled","nonInteractive","isDetached","TerminalUI","newLine","printQRCode","underline","nested","dim","installCustomExitHook","flush"],"sources":["../../../src/commands/start/startAsync.ts"],"sourcesContent":["import { ConfigError, ExpoConfig, getConfig, isLegacyImportsEnabled } from '@expo/config';\nimport chalk from 'chalk';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { LoadingPageHandler, Project, UnifiedAnalytics, UrlUtils, Versions } from 'xdl';\n\nimport StatusEventEmitter from '../../analytics/StatusEventEmitter';\nimport getDevClientProperties from '../../analytics/getDevClientProperties';\nimport Log from '../../log';\nimport { warnAboutLocalCLI } from '../../utils/migration';\nimport { assertProjectHasExpoExtensionFilesAsync } from '../utils/deprecatedExtensionWarnings';\nimport { profileMethod } from '../utils/profileMethod';\nimport * as sendTo from '../utils/sendTo';\nimport { ensureTypeScriptSetupAsync } from '../utils/typescript/ensureTypeScriptSetup';\nimport urlOpts from '../utils/urlOpts';\nimport { validateDependenciesVersionsAsync } from '../utils/validateDependenciesVersions';\nimport { ensureWebSupportSetupAsync } from '../utils/web/ensureWebSetup';\nimport * as TerminalUI from './TerminalUI';\nimport { installCustomExitHook, installExitHooks } from './installExitHooks';\nimport { NormalizedOptions, parseStartOptions } from './parseStartOptions';\n\nexport async function actionAsync(projectRoot: string, options: NormalizedOptions): Promise<void> {\n  warnAboutLocalCLI(projectRoot, { localCmd: 'start' });\n\n  Log.log(chalk.gray(`Starting project at ${projectRoot}`));\n\n  // Add clean up hooks\n  installExitHooks(projectRoot);\n\n  // Only validate expo in Expo Go contexts\n  if (!options.devClient) {\n    // Find expo binary in project/workspace node_modules\n    const hasExpoInstalled = resolveFrom.silent(projectRoot, 'expo');\n    if (!hasExpoInstalled) {\n      throw new ConfigError(\n        `Unable to find expo in this project - have you run yarn / npm install yet?`,\n        'MODULE_NOT_FOUND'\n      );\n    }\n  }\n\n  const { exp, pkg } = profileMethod(getConfig)(projectRoot, {\n    skipSDKVersionRequirement: options.webOnly || options.devClient,\n  });\n\n  if (options.web || options.webOnly) {\n    await ensureWebSupportSetupAsync(projectRoot);\n  }\n\n  if (options.devClient) {\n    track(projectRoot, exp);\n  }\n\n  // Assert various random things\n  // TODO: split up this method\n  await profileMethod(urlOpts.optsAsync)(projectRoot, options);\n\n  // TODO: This is useless on mac, check if useless on win32\n  const rootPath = path.resolve(projectRoot);\n\n  if (Versions.gteSdkVersion(exp, '34.0.0')) {\n    await profileMethod(ensureTypeScriptSetupAsync)(projectRoot);\n  }\n\n  if (!options.webOnly) {\n    // TODO: only validate dependencies if starting in managed workflow\n    await profileMethod(validateDependenciesVersionsAsync)(projectRoot, exp, pkg);\n    // Warn about expo extensions.\n    if (!isLegacyImportsEnabled(exp)) {\n      // Adds a few seconds in basic projects so we should\n      // drop this in favor of the upgrade version as soon as possible.\n      await profileMethod(assertProjectHasExpoExtensionFilesAsync)(projectRoot);\n    }\n  }\n\n  const startOptions = profileMethod(parseStartOptions)(options, exp);\n  LoadingPageHandler.setOnDeepLink(\n    async (projectRoot: string, isDevClient: boolean, platform: string | null) => {\n      if (!isDevClient) {\n        return;\n      }\n\n      const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n      StatusEventEmitter.once('deviceLogReceive', () => {\n        // Send the 'ready' event once the app is running in a device.\n        UnifiedAnalytics.logEvent('dev client start command', {\n          status: 'ready',\n          platform,\n          ...getDevClientProperties(projectRoot, exp),\n        });\n      });\n\n      UnifiedAnalytics.logEvent('dev client start command', {\n        status: 'started',\n        platform,\n        ...getDevClientProperties(projectRoot, exp),\n      });\n    }\n  );\n  await profileMethod(Project.startAsync)(rootPath, { ...startOptions, exp });\n\n  if (!startOptions.webOnly && options.web) {\n    await profileMethod(Project.startWebpackAsync)(rootPath, {\n      ...startOptions,\n      exp,\n    });\n  }\n\n  // Send to option...\n  const url = await profileMethod(\n    UrlUtils.constructDeepLinkAsync,\n    'UrlUtils.constructDeepLinkAsync'\n  )(projectRoot).catch(error => {\n    // TODO: Maybe there's a better way to do this\n    if (!options.devClient || error.code !== 'NO_DEV_CLIENT_SCHEME') {\n      throw error;\n    }\n    return null;\n  });\n\n  if (options.sendTo) {\n    if (url) {\n      const recipient = await profileMethod(sendTo.getRecipient)(options.sendTo);\n      if (recipient) {\n        await sendTo.sendUrlAsync(url, recipient);\n      }\n    } else {\n      Log.warn('Cannot send URL because the linking URI cannot be resolved');\n    }\n  }\n\n  // Open project on devices.\n  await profileMethod(urlOpts.handleMobileOptsAsync)(projectRoot, options);\n\n  // Present the Terminal UI.\n  const isTerminalUIEnabled = !options.nonInteractive && !exp.isDetached;\n\n  if (isTerminalUIEnabled) {\n    await profileMethod(TerminalUI.startAsync, 'TerminalUI.startAsync')(projectRoot, startOptions);\n  } else if (url) {\n    if (!exp.isDetached) {\n      Log.newLine();\n      urlOpts.printQRCode(url);\n    }\n    Log.log(`Your native app is running at ${chalk.underline(url)}`);\n  }\n\n  // Final note about closing the server.\n  Log.nested(`Logs for your project will appear below. ${chalk.dim(`Press Ctrl+C to exit.`)}`);\n\n  if (options.devClient) {\n    UnifiedAnalytics.logEvent('dev client start command', {\n      status: 'ready',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  }\n}\n\nfunction track(projectRoot: string, exp: ExpoConfig) {\n  UnifiedAnalytics.logEvent('dev client start command', {\n    status: 'started',\n    ...getDevClientProperties(projectRoot, exp),\n  });\n  installCustomExitHook(() => {\n    UnifiedAnalytics.logEvent('dev client start command', {\n      status: 'finished',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n    UnifiedAnalytics.flush();\n  });\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA2E;AAAA;AAAA;AAEpE,eAAeA,WAAW,CAACC,WAAmB,EAAEC,OAA0B,EAAiB;EAChG,IAAAC,8BAAiB,EAACF,WAAW,EAAE;IAAEG,QAAQ,EAAE;EAAQ,CAAC,CAAC;EAErDC,cAAG,CAACC,GAAG,CAACC,gBAAK,CAACC,IAAI,CAAE,uBAAsBP,WAAY,EAAC,CAAC,CAAC;;EAEzD;EACA,IAAAQ,oCAAgB,EAACR,WAAW,CAAC;;EAE7B;EACA,IAAI,CAACC,OAAO,CAACQ,SAAS,EAAE;IACtB;IACA,MAAMC,gBAAgB,GAAGC,sBAAW,CAACC,MAAM,CAACZ,WAAW,EAAE,MAAM,CAAC;IAChE,IAAI,CAACU,gBAAgB,EAAE;MACrB,MAAM,KAAIG,qBAAW,EAClB,4EAA2E,EAC5E,kBAAkB,CACnB;IACH;EACF;EAEA,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAC,GAAG,IAAAC,8BAAa,EAACC,mBAAS,CAAC,CAACjB,WAAW,EAAE;IACzDkB,yBAAyB,EAAEjB,OAAO,CAACkB,OAAO,IAAIlB,OAAO,CAACQ;EACxD,CAAC,CAAC;EAEF,IAAIR,OAAO,CAACmB,GAAG,IAAInB,OAAO,CAACkB,OAAO,EAAE;IAClC,MAAM,IAAAE,4CAA0B,EAACrB,WAAW,CAAC;EAC/C;EAEA,IAAIC,OAAO,CAACQ,SAAS,EAAE;IACrBa,KAAK,CAACtB,WAAW,EAAEc,GAAG,CAAC;EACzB;;EAEA;EACA;EACA,MAAM,IAAAE,8BAAa,EAACO,kBAAO,CAACC,SAAS,CAAC,CAACxB,WAAW,EAAEC,OAAO,CAAC;;EAE5D;EACA,MAAMwB,QAAQ,GAAGC,eAAI,CAACC,OAAO,CAAC3B,WAAW,CAAC;EAE1C,IAAI4B,eAAQ,CAACC,aAAa,CAACf,GAAG,EAAE,QAAQ,CAAC,EAAE;IACzC,MAAM,IAAAE,8BAAa,EAACc,mDAA0B,CAAC,CAAC9B,WAAW,CAAC;EAC9D;EAEA,IAAI,CAACC,OAAO,CAACkB,OAAO,EAAE;IACpB;IACA,MAAM,IAAAH,8BAAa,EAACe,iEAAiC,CAAC,CAAC/B,WAAW,EAAEc,GAAG,EAAEC,GAAG,CAAC;IAC7E;IACA,IAAI,CAAC,IAAAiB,gCAAsB,EAAClB,GAAG,CAAC,EAAE;MAChC;MACA;MACA,MAAM,IAAAE,8BAAa,EAACiB,sEAAuC,CAAC,CAACjC,WAAW,CAAC;IAC3E;EACF;EAEA,MAAMkC,YAAY,GAAG,IAAAlB,8BAAa,EAACmB,sCAAiB,CAAC,CAAClC,OAAO,EAAEa,GAAG,CAAC;EACnEsB,yBAAkB,CAACC,aAAa,CAC9B,OAAOrC,WAAmB,EAAEsC,WAAoB,EAAEC,QAAuB,KAAK;IAC5E,IAAI,CAACD,WAAW,EAAE;MAChB;IACF;IAEA,MAAM;MAAExB;IAAI,CAAC,GAAG,IAAAG,mBAAS,EAACjB,WAAW,EAAE;MAAEkB,yBAAyB,EAAE;IAAK,CAAC,CAAC;IAC3EsB,6BAAkB,CAACC,IAAI,CAAC,kBAAkB,EAAE,MAAM;MAChD;MACAC,uBAAgB,CAACC,QAAQ,CAAC,0BAA0B,EAAE;QACpDC,MAAM,EAAE,OAAO;QACfL,QAAQ;QACR,GAAG,IAAAM,iCAAsB,EAAC7C,WAAW,EAAEc,GAAG;MAC5C,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF4B,uBAAgB,CAACC,QAAQ,CAAC,0BAA0B,EAAE;MACpDC,MAAM,EAAE,SAAS;MACjBL,QAAQ;MACR,GAAG,IAAAM,iCAAsB,EAAC7C,WAAW,EAAEc,GAAG;IAC5C,CAAC,CAAC;EACJ,CAAC,CACF;EACD,MAAM,IAAAE,8BAAa,EAAC8B,cAAO,CAACC,UAAU,CAAC,CAACtB,QAAQ,EAAE;IAAE,GAAGS,YAAY;IAAEpB;EAAI,CAAC,CAAC;EAE3E,IAAI,CAACoB,YAAY,CAACf,OAAO,IAAIlB,OAAO,CAACmB,GAAG,EAAE;IACxC,MAAM,IAAAJ,8BAAa,EAAC8B,cAAO,CAACE,iBAAiB,CAAC,CAACvB,QAAQ,EAAE;MACvD,GAAGS,YAAY;MACfpB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMmC,GAAG,GAAG,MAAM,IAAAjC,8BAAa,EAC7BkC,eAAQ,CAACC,sBAAsB,EAC/B,iCAAiC,CAClC,CAACnD,WAAW,CAAC,CAACoD,KAAK,CAACC,KAAK,IAAI;IAC5B;IACA,IAAI,CAACpD,OAAO,CAACQ,SAAS,IAAI4C,KAAK,CAACC,IAAI,KAAK,sBAAsB,EAAE;MAC/D,MAAMD,KAAK;IACb;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,IAAIpD,OAAO,CAACsD,MAAM,EAAE;IAClB,IAAIN,GAAG,EAAE;MACP,MAAMO,SAAS,GAAG,MAAM,IAAAxC,8BAAa,EAACuC,MAAM,GAACE,YAAY,CAAC,CAACxD,OAAO,CAACsD,MAAM,CAAC;MAC1E,IAAIC,SAAS,EAAE;QACb,MAAMD,MAAM,GAACG,YAAY,CAACT,GAAG,EAAEO,SAAS,CAAC;MAC3C;IACF,CAAC,MAAM;MACLpD,cAAG,CAACuD,IAAI,CAAC,4DAA4D,CAAC;IACxE;EACF;;EAEA;EACA,MAAM,IAAA3C,8BAAa,EAACO,kBAAO,CAACqC,qBAAqB,CAAC,CAAC5D,WAAW,EAAEC,OAAO,CAAC;;EAExE;EACA,MAAM4D,mBAAmB,GAAG,CAAC5D,OAAO,CAAC6D,cAAc,IAAI,CAAChD,GAAG,CAACiD,UAAU;EAEtE,IAAIF,mBAAmB,EAAE;IACvB,MAAM,IAAA7C,8BAAa,EAACgD,UAAU,GAACjB,UAAU,EAAE,uBAAuB,CAAC,CAAC/C,WAAW,EAAEkC,YAAY,CAAC;EAChG,CAAC,MAAM,IAAIe,GAAG,EAAE;IACd,IAAI,CAACnC,GAAG,CAACiD,UAAU,EAAE;MACnB3D,cAAG,CAAC6D,OAAO,EAAE;MACb1C,kBAAO,CAAC2C,WAAW,CAACjB,GAAG,CAAC;IAC1B;IACA7C,cAAG,CAACC,GAAG,CAAE,iCAAgCC,gBAAK,CAAC6D,SAAS,CAAClB,GAAG,CAAE,EAAC,CAAC;EAClE;;EAEA;EACA7C,cAAG,CAACgE,MAAM,CAAE,4CAA2C9D,gBAAK,CAAC+D,GAAG,CAAE,uBAAsB,CAAE,EAAC,CAAC;EAE5F,IAAIpE,OAAO,CAACQ,SAAS,EAAE;IACrBiC,uBAAgB,CAACC,QAAQ,CAAC,0BAA0B,EAAE;MACpDC,MAAM,EAAE,OAAO;MACf,GAAG,IAAAC,iCAAsB,EAAC7C,WAAW,EAAEc,GAAG;IAC5C,CAAC,CAAC;EACJ;AACF;AAEA,SAASQ,KAAK,CAACtB,WAAmB,EAAEc,GAAe,EAAE;EACnD4B,uBAAgB,CAACC,QAAQ,CAAC,0BAA0B,EAAE;IACpDC,MAAM,EAAE,SAAS;IACjB,GAAG,IAAAC,iCAAsB,EAAC7C,WAAW,EAAEc,GAAG;EAC5C,CAAC,CAAC;EACF,IAAAwD,yCAAqB,EAAC,MAAM;IAC1B5B,uBAAgB,CAACC,QAAQ,CAAC,0BAA0B,EAAE;MACpDC,MAAM,EAAE,UAAU;MAClB,GAAG,IAAAC,iCAAsB,EAAC7C,WAAW,EAAEc,GAAG;IAC5C,CAAC,CAAC;IACF4B,uBAAgB,CAAC6B,KAAK,EAAE;EAC1B,CAAC,CAAC;AACJ"}