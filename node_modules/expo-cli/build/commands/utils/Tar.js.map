{"version":3,"file":"Tar.js","names":["pipeline","promisify","stream","downloadAndDecompressAsync","url","destination","downloadStream","got","on","createProgressTracker","tar","extract","cwd"],"sources":["../../../src/commands/utils/Tar.ts"],"sourcesContent":["import got from 'got';\nimport stream from 'stream';\nimport tar from 'tar';\nimport { promisify } from 'util';\n\nimport { createProgressTracker } from './progress';\n\nconst pipeline = promisify(stream.pipeline);\n\n/**\n * Download a tar.gz file and extract it to a folder.\n *\n * @param url remote URL to download.\n * @param destination destination folder to extract the tar to.\n */\nexport async function downloadAndDecompressAsync(\n  url: string,\n  destination: string\n): Promise<string> {\n  const downloadStream = got.stream(url).on('downloadProgress', createProgressTracker());\n\n  await pipeline(downloadStream, tar.extract({ cwd: destination }));\n  return destination;\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAmD;AAEnD,MAAMA,QAAQ,GAAG,IAAAC,iBAAS,EAACC,iBAAM,CAACF,QAAQ,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACO,eAAeG,0BAA0B,CAC9CC,GAAW,EACXC,WAAmB,EACF;EACjB,MAAMC,cAAc,GAAGC,cAAG,CAACL,MAAM,CAACE,GAAG,CAAC,CAACI,EAAE,CAAC,kBAAkB,EAAE,IAAAC,iCAAqB,GAAE,CAAC;EAEtF,MAAMT,QAAQ,CAACM,cAAc,EAAEI,cAAG,CAACC,OAAO,CAAC;IAAEC,GAAG,EAAEP;EAAY,CAAC,CAAC,CAAC;EACjE,OAAOA,WAAW;AACpB"}