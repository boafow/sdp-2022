{"version":3,"file":"createFileTransform.js","names":["escapeXMLCharacters","original","noAmps","replace","noLt","noGt","noApos","Transformer","Minipass","constructor","settings","write","data","getNormalizedName","includes","extension","name","end","replaced","IOSConfig","XcodeUtils","sanitizedName","toLowerCase","createEntryResolver","entry","path","type","test","basename","createFileTransform","extname","undefined"],"sources":["../../../src/commands/utils/createFileTransform.ts"],"sourcesContent":["import { IOSConfig } from '@expo/config-plugins';\nimport Minipass from 'minipass';\nimport * as path from 'path';\nimport { ReadEntry } from 'tar';\n\nfunction escapeXMLCharacters(original: string): string {\n  const noAmps = original.replace('&', '&amp;');\n  const noLt = noAmps.replace('<', '&lt;');\n  const noGt = noLt.replace('>', '&gt;');\n  const noApos = noGt.replace('\"', '\\\\\"');\n  return noApos.replace(\"'\", \"\\\\'\");\n}\n\nclass Transformer extends Minipass {\n  data = '';\n\n  constructor(private settings: { name: string; extension: string }) {\n    super();\n  }\n\n  write(data: string) {\n    this.data += data;\n    return true;\n  }\n\n  getNormalizedName(): string {\n    if (['.xml', '.plist'].includes(this.settings.extension)) {\n      return escapeXMLCharacters(this.settings.name);\n    }\n    return this.settings.name;\n  }\n\n  end() {\n    const name = this.getNormalizedName();\n    const replaced = this.data\n      .replace(/Hello App Display Name/g, name)\n      .replace(/HelloWorld/g, IOSConfig.XcodeUtils.sanitizedName(name))\n      .replace(/helloworld/g, IOSConfig.XcodeUtils.sanitizedName(name.toLowerCase()));\n    super.write(replaced);\n    return super.end();\n  }\n}\n\nexport function createEntryResolver(name: string) {\n  return (entry: ReadEntry) => {\n    if (name) {\n      // Rewrite paths for bare workflow\n      entry.path = entry.path\n        .replace(\n          /HelloWorld/g,\n          entry.path.includes('android')\n            ? IOSConfig.XcodeUtils.sanitizedName(name.toLowerCase())\n            : IOSConfig.XcodeUtils.sanitizedName(name)\n        )\n        .replace(/helloworld/g, IOSConfig.XcodeUtils.sanitizedName(name).toLowerCase());\n    }\n    if (entry.type && /^file$/i.test(entry.type) && path.basename(entry.path) === 'gitignore') {\n      // Rename `gitignore` because npm ignores files named `.gitignore` when publishing.\n      // See: https://github.com/npm/npm/issues/1862\n      entry.path = entry.path.replace(/gitignore$/, '.gitignore');\n    }\n  };\n}\n\nexport function createFileTransform(name: string) {\n  return (entry: ReadEntry) => {\n    const extension = path.extname(entry.path);\n\n    // Binary files, don't process these (avoid decoding as utf8)\n    if (\n      ![\n        '.png',\n        '.jpg',\n        '.jpeg',\n        '.gif',\n        '.webp',\n        '.psd',\n        '.tiff',\n        '.svg',\n        '.jar',\n        '.keystore',\n\n        // Font files\n        '.otf',\n        '.ttf',\n      ].includes(extension) &&\n      name\n    ) {\n      return new Transformer({ name, extension });\n    }\n    return undefined;\n  };\n}\n"],"mappings":"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"}