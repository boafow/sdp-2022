{"version":3,"file":"glob.js","names":["everyMatchAsync","pattern","options","Promise","resolve","reject","g","Glob","called","callback","er","matched","on","matches","anyMatchAsync","wrapGlobWithTimeout","query","duration","timeout","setTimeout","process","clearTimeout","error"],"sources":["../../../src/commands/utils/glob.ts"],"sourcesContent":["import G, { Glob } from 'glob';\n\nexport function everyMatchAsync(pattern: string, options: G.IOptions) {\n  return new Promise<string[]>((resolve, reject) => {\n    const g = new Glob(pattern, options);\n    let called = false;\n    const callback = (er: Error | null, matched: string[]) => {\n      if (called) return;\n      called = true;\n      if (er) reject(er);\n      else resolve(matched);\n    };\n    g.on('error', callback);\n    g.on('end', matches => callback(null, matches));\n  });\n}\n\nexport function anyMatchAsync(pattern: string, options: G.IOptions) {\n  return new Promise<string[]>((resolve, reject) => {\n    const g = new Glob(pattern, options);\n    let called = false;\n    const callback = (er: Error | null, matched: string[]) => {\n      if (called) return;\n      called = true;\n      if (er) reject(er);\n      else resolve(matched);\n    };\n    g.on('error', callback);\n    g.on('match', matched => {\n      // We've disabled using abort as it breaks the entire glob package across all instances.\n      // https://github.com/isaacs/node-glob/issues/279 & https://github.com/isaacs/node-glob/issues/342\n      // For now, just collect every match.\n      // g.abort();\n      callback(null, [matched]);\n    });\n    g.on('end', matches => callback(null, matches));\n  });\n}\n\nexport function wrapGlobWithTimeout(\n  query: () => Promise<string[]>,\n  duration: number\n): Promise<string[] | false> {\n  return new Promise(async (resolve, reject) => {\n    // Wait some time, then escape...\n    // Adding this because glob can sometimes freeze and fail to resolve if any other glob uses `.abort()`.\n    const timeout = setTimeout(() => {\n      resolve(false);\n    }, duration);\n\n    process.on('SIGINT', () => clearTimeout(timeout));\n\n    try {\n      resolve(await query());\n    } catch (error: any) {\n      reject(error);\n    } finally {\n      clearTimeout(timeout);\n    }\n  });\n}\n"],"mappings":";;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,SAASA,eAAe,CAACC,OAAe,EAAEC,OAAmB,EAAE;EACpE,OAAO,IAAIC,OAAO,CAAW,CAACC,OAAO,EAAEC,MAAM,KAAK;IAChD,MAAMC,CAAC,GAAG,KAAIC,YAAI,EAACN,OAAO,EAAEC,OAAO,CAAC;IACpC,IAAIM,MAAM,GAAG,KAAK;IAClB,MAAMC,QAAQ,GAAG,CAACC,EAAgB,EAAEC,OAAiB,KAAK;MACxD,IAAIH,MAAM,EAAE;MACZA,MAAM,GAAG,IAAI;MACb,IAAIE,EAAE,EAAEL,MAAM,CAACK,EAAE,CAAC,CAAC,KACdN,OAAO,CAACO,OAAO,CAAC;IACvB,CAAC;IACDL,CAAC,CAACM,EAAE,CAAC,OAAO,EAAEH,QAAQ,CAAC;IACvBH,CAAC,CAACM,EAAE,CAAC,KAAK,EAAEC,OAAO,IAAIJ,QAAQ,CAAC,IAAI,EAAEI,OAAO,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ;AAEO,SAASC,aAAa,CAACb,OAAe,EAAEC,OAAmB,EAAE;EAClE,OAAO,IAAIC,OAAO,CAAW,CAACC,OAAO,EAAEC,MAAM,KAAK;IAChD,MAAMC,CAAC,GAAG,KAAIC,YAAI,EAACN,OAAO,EAAEC,OAAO,CAAC;IACpC,IAAIM,MAAM,GAAG,KAAK;IAClB,MAAMC,QAAQ,GAAG,CAACC,EAAgB,EAAEC,OAAiB,KAAK;MACxD,IAAIH,MAAM,EAAE;MACZA,MAAM,GAAG,IAAI;MACb,IAAIE,EAAE,EAAEL,MAAM,CAACK,EAAE,CAAC,CAAC,KACdN,OAAO,CAACO,OAAO,CAAC;IACvB,CAAC;IACDL,CAAC,CAACM,EAAE,CAAC,OAAO,EAAEH,QAAQ,CAAC;IACvBH,CAAC,CAACM,EAAE,CAAC,OAAO,EAAED,OAAO,IAAI;MACvB;MACA;MACA;MACA;MACAF,QAAQ,CAAC,IAAI,EAAE,CAACE,OAAO,CAAC,CAAC;IAC3B,CAAC,CAAC;IACFL,CAAC,CAACM,EAAE,CAAC,KAAK,EAAEC,OAAO,IAAIJ,QAAQ,CAAC,IAAI,EAAEI,OAAO,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ;AAEO,SAASE,mBAAmB,CACjCC,KAA8B,EAC9BC,QAAgB,EACW;EAC3B,OAAO,IAAId,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;IAC5C;IACA;IACA,MAAMa,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/Bf,OAAO,CAAC,KAAK,CAAC;IAChB,CAAC,EAAEa,QAAQ,CAAC;IAEZG,OAAO,CAACR,EAAE,CAAC,QAAQ,EAAE,MAAMS,YAAY,CAACH,OAAO,CAAC,CAAC;IAEjD,IAAI;MACFd,OAAO,CAAC,MAAMY,KAAK,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOM,KAAU,EAAE;MACnBjB,MAAM,CAACiB,KAAK,CAAC;IACf,CAAC,SAAS;MACRD,YAAY,CAACH,OAAO,CAAC;IACvB;EACF,CAAC,CAAC;AACJ"}