{"version":3,"file":"npm.js","names":["cachedFetch","createFetchWithCache","FileSystemCache","cacheDirectory","getCacheFilePath","sanitizeNpmPackageName","name","applyKnownNpmPackageNameRules","slugify","test","substring","toLowerCase","replace","normalize","npmPackAsync","packageName","cwd","undefined","props","cmd","cmdString","join","Log","debug","results","spawnAsync","stdout","trim","parsedResults","JSON","parse","filename","startsWith","error","Error","message","pipeline","promisify","Stream","downloadAndExtractNpmModuleAsync","npmName","cachePath","fs","ensureDir","cacheFilename","path","stat","catch","isFile","extractLocalNpmTarballAsync","tarFilePath","readStream","createReadStream","extractNpmTarballAsync","UserSettings","dotExpoHomeDirectory","createUrlStreamAsync","url","response","ok","statusText","body","extractNpmTarballFromUrlAsync","stream","strip","fileList","tar","extract","transform","createFileTransform","onentry","createEntryResolver"],"sources":["../../../src/commands/utils/npm.ts"],"sourcesContent":["import { JSONArray, JSONObject, JSONValue } from '@expo/json-file';\nimport spawnAsync from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport slugify from 'slugify';\nimport { Stream } from 'stream';\nimport tar from 'tar';\nimport { promisify } from 'util';\nimport { UserSettings } from 'xdl';\n\nimport Log from '../../log';\nimport { createEntryResolver, createFileTransform } from './createFileTransform';\nimport { FileSystemCache } from './fetch-cache/FileSystemCache';\nimport createFetchWithCache from './fetch-cache/fetch';\n\nconst cachedFetch = createFetchWithCache(\n  new FileSystemCache({\n    cacheDirectory: getCacheFilePath(),\n    // Time to live. How long (in ms) responses remain cached before being automatically ejected. If undefined, responses are never automatically ejected from the cache.\n    // ttl: 1000,\n  })\n);\n\nexport function sanitizeNpmPackageName(name: string): string {\n  // https://github.com/npm/validate-npm-package-name/#naming-rules\n  return (\n    applyKnownNpmPackageNameRules(name) ||\n    applyKnownNpmPackageNameRules(slugify(name)) ||\n    // If nothing is left use 'app' like we do in Xcode projects.\n    'app'\n  );\n}\n\nfunction applyKnownNpmPackageNameRules(name: string): string | null {\n  // https://github.com/npm/validate-npm-package-name/#naming-rules\n\n  // package name cannot start with '.' or '_'.\n  while (/^(\\.|_)/.test(name)) {\n    name = name.substring(1);\n  }\n\n  name = name.toLowerCase().replace(/[^a-zA-Z0-9._\\-/@]/g, '');\n\n  return (\n    name\n      // .replace(/![a-z0-9-._~]+/g, '')\n      // Remove special characters\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '') || null\n  );\n}\n\nexport async function npmPackAsync(\n  packageName: string,\n  cwd: string | undefined = undefined,\n  ...props: string[]\n): Promise<JSONValue> {\n  const cmd = ['pack', packageName, ...props];\n\n  const cmdString = `npm ${cmd.join(' ')}`;\n  Log.debug('Run:', cmdString);\n  const results = (await spawnAsync('npm', [...cmd, '--json'], { cwd })).stdout?.trim();\n\n  if (!results) {\n    return null;\n  }\n  try {\n    const parsedResults = JSON.parse(results);\n    const filename = (parsedResults[0] as JSONObject).filename as string;\n\n    // Transform filename for scoped packages.\n    // See issue https://github.com/npm/cli/issues/3405\n    if (filename?.startsWith('@') && packageName.startsWith('@')) {\n      parsedResults[0].filename = filename.replace(/^@/, '').replace(/\\//, '-');\n    }\n\n    return parsedResults;\n  } catch (error: any) {\n    throw new Error(\n      `Could not parse JSON returned from \"${cmdString}\".\\n\\n${results}\\n\\nError: ${error.message}`\n    );\n  }\n}\n\n// @ts-ignore\nconst pipeline = promisify(Stream.pipeline);\n\nexport async function downloadAndExtractNpmModuleAsync(\n  npmName: string,\n  props: ExtractProps\n): Promise<void> {\n  Log.debug(`Looking for tarball for ${npmName} in ${getCacheFilePath()}...`);\n  try {\n    const cachePath = getCacheFilePath();\n    await fs.ensureDir(cachePath);\n    // Perform dry-run to get actual filename for resolved version\n    const filename = (((await npmPackAsync(\n      npmName,\n      cachePath,\n      '--dry-run'\n    )) as JSONArray)[0] as JSONObject).filename as string;\n\n    const cacheFilename = path.join(cachePath, filename);\n\n    // TODO: This cache does not expire, but neither does the FileCache at the top of this file.\n    if (!(await fs.stat(cacheFilename).catch(() => null))?.isFile() ?? false) {\n      Log.debug(`Downloading tarball for ${npmName} to ${cachePath}...`);\n      await npmPackAsync(npmName, cachePath);\n    }\n    await extractLocalNpmTarballAsync(cacheFilename, {\n      cwd: props.cwd,\n      name: props.name,\n    });\n  } catch (error) {\n    Log.error('Error downloading and extracting template package:', error);\n  }\n}\n\nexport async function extractLocalNpmTarballAsync(\n  tarFilePath: string,\n  props: ExtractProps\n): Promise<void> {\n  const readStream = fs.createReadStream(tarFilePath);\n  await extractNpmTarballAsync(readStream, props);\n}\n\ntype ExtractProps = {\n  name: string;\n  cwd: string;\n  strip?: number;\n  fileList?: string[];\n};\n\nfunction getCacheFilePath() {\n  return path.join(UserSettings.dotExpoHomeDirectory(), 'template-cache');\n}\n\nasync function createUrlStreamAsync(url: string) {\n  const response = await cachedFetch(url);\n  if (!response.ok) {\n    throw new Error(`Unexpected response: ${response.statusText}. From url: ${url}`);\n  }\n\n  return response.body;\n}\n\nexport async function extractNpmTarballFromUrlAsync(\n  url: string,\n  props: ExtractProps\n): Promise<void> {\n  await extractNpmTarballAsync(await createUrlStreamAsync(url), props);\n}\n\nexport async function extractNpmTarballAsync(\n  stream: NodeJS.ReadableStream,\n  props: ExtractProps\n): Promise<void> {\n  const { cwd, strip, name, fileList = [] } = props;\n\n  await fs.ensureDir(cwd);\n\n  return pipeline(\n    stream,\n    tar.extract(\n      {\n        cwd,\n        transform: createFileTransform(name),\n        onentry: createEntryResolver(name),\n        strip: strip ?? 1,\n      },\n      fileList\n    )\n  );\n}\n"],"mappings":"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"}