{"version":3,"file":"profileMethod.js","names":["profileMethod","fn","functionName","name","chalk","dim","args","Log","time","results","Promise","resolve","reject","then","timeEnd","catch","error"],"sources":["../../../src/commands/utils/profileMethod.ts"],"sourcesContent":["import chalk from 'chalk';\n\nimport Log from '../../log';\n\n/**\n * Wrap a method and profile the time it takes to execute the method using `EXPO_PROFILE`.\n * Works best with named functions (i.e. not arrow functions).\n *\n * @param fn\n * @param functionName\n */\nexport const profileMethod = <T extends any[], U>(fn: (...args: T) => U, functionName?: string) => {\n  const name = chalk.dim(`⏱  [profile] ${functionName ?? (fn.name || 'unknown')}`);\n  return (...args: T): U => {\n    Log.time(name);\n    const results = fn(...args);\n    if (results instanceof Promise) {\n      // @ts-ignore\n      return new Promise<U>((resolve, reject) => {\n        results\n          .then(results => {\n            resolve(results);\n            Log.timeEnd(name);\n          })\n          .catch(error => {\n            reject(error);\n            Log.timeEnd(name);\n          });\n      });\n    } else {\n      Log.timeEnd(name);\n    }\n    return results;\n  };\n};\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA4B;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,aAAa,GAAG,CAAqBC,EAAqB,EAAEC,YAAqB,KAAK;EACjG,MAAMC,IAAI,GAAGC,gBAAK,CAACC,GAAG,CAAE,gBAAeH,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAKD,EAAE,CAACE,IAAI,IAAI,SAAW,EAAC,CAAC;EAChF,OAAO,CAAC,GAAGG,IAAO,KAAQ;IACxBC,cAAG,CAACC,IAAI,CAACL,IAAI,CAAC;IACd,MAAMM,OAAO,GAAGR,EAAE,CAAC,GAAGK,IAAI,CAAC;IAC3B,IAAIG,OAAO,YAAYC,OAAO,EAAE;MAC9B;MACA,OAAO,IAAIA,OAAO,CAAI,CAACC,OAAO,EAAEC,MAAM,KAAK;QACzCH,OAAO,CACJI,IAAI,CAACJ,OAAO,IAAI;UACfE,OAAO,CAACF,OAAO,CAAC;UAChBF,cAAG,CAACO,OAAO,CAACX,IAAI,CAAC;QACnB,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;UACdJ,MAAM,CAACI,KAAK,CAAC;UACbT,cAAG,CAACO,OAAO,CAACX,IAAI,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC,MAAM;MACLI,cAAG,CAACO,OAAO,CAACX,IAAI,CAAC;IACnB;IACA,OAAOM,OAAO;EAChB,CAAC;AACH,CAAC;AAAC"}