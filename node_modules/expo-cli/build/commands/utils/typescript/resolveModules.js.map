{"version":3,"file":"resolveModules.js","names":["fileExistsAsync","file","stat","catch","isFile","requiredPackages","pkg","baseTSConfigName","queryFirstProjectTypeScriptFileAsync","projectRoot","results","wrapGlobWithTimeout","everyMatchAsync","cwd","ignore","resolveBaseTSConfig","resolveFrom","silent","hasTSConfig","tsConfigPath","path","join","collectMissingPackages","resolutions","missingPackages","filter","p","missing"],"sources":["../../../../src/commands/utils/typescript/resolveModules.ts"],"sourcesContent":["import { stat } from 'fs-extra';\nimport * as path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { everyMatchAsync, wrapGlobWithTimeout } from '../glob';\n\nasync function fileExistsAsync(file: string): Promise<boolean> {\n  return (await stat(file).catch(() => null))?.isFile() ?? false;\n}\n\nconst requiredPackages = [\n  // use typescript/package.json to skip node module cache issues when the user installs\n  // the package and attempts to resolve the module in the same process.\n  { file: 'typescript/package.json', pkg: 'typescript' },\n  { file: '@types/react/package.json', pkg: '@types/react' },\n  { file: '@types/react-native/package.json', pkg: '@types/react-native' },\n];\n\nexport const baseTSConfigName = 'expo/tsconfig.base';\n\nexport async function queryFirstProjectTypeScriptFileAsync(\n  projectRoot: string\n): Promise<null | string> {\n  const results = await wrapGlobWithTimeout(\n    () =>\n      everyMatchAsync('**/*.@(ts|tsx)', {\n        cwd: projectRoot,\n        ignore: [\n          '**/@(Carthage|Pods|node_modules)/**',\n          '**/*.d.ts',\n          '@(ios|android|web|web-build|dist)/**',\n        ],\n      }),\n    5000\n  );\n\n  if (results === false) {\n    return null;\n  }\n  return results[0] ?? null;\n}\n\nexport function resolveBaseTSConfig(projectRoot: string): string | null {\n  return resolveFrom.silent(projectRoot, 'expo/tsconfig.base.json') ?? null;\n}\n\nexport async function hasTSConfig(projectRoot: string): Promise<string | null> {\n  const tsConfigPath = path.join(projectRoot, 'tsconfig.json');\n  if (await fileExistsAsync(tsConfigPath)) {\n    return tsConfigPath;\n  }\n  return null;\n}\n\nexport function collectMissingPackages(\n  projectRoot: string\n): {\n  missing: {\n    file: string;\n    pkg: string;\n    version?: string;\n  }[];\n  resolutions: Record<string, string>;\n} {\n  const resolutions: Record<string, string> = {};\n\n  const missingPackages = requiredPackages.filter(p => {\n    try {\n      resolutions[p.pkg] = resolveFrom(projectRoot, p.file);\n      return false;\n    } catch {\n      return true;\n    }\n  });\n\n  return { missing: missingPackages, resolutions };\n}\n"],"mappings":";;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA+D;AAAA;AAAA;AAE/D,eAAeA,eAAe,CAACC,IAAY,EAAoB;EAAA;EAC7D,qDAAQ,MAAM,IAAAC,eAAI,EAACD,IAAI,CAAC,CAACE,KAAK,CAAC,MAAM,IAAI,CAAC,sDAAnC,kBAAsCC,MAAM,EAAE,yEAAI,KAAK;AAChE;AAEA,MAAMC,gBAAgB,GAAG;AACvB;AACA;AACA;EAAEJ,IAAI,EAAE,yBAAyB;EAAEK,GAAG,EAAE;AAAa,CAAC,EACtD;EAAEL,IAAI,EAAE,2BAA2B;EAAEK,GAAG,EAAE;AAAe,CAAC,EAC1D;EAAEL,IAAI,EAAE,kCAAkC;EAAEK,GAAG,EAAE;AAAsB,CAAC,CACzE;AAEM,MAAMC,gBAAgB,GAAG,oBAAoB;AAAC;AAE9C,eAAeC,oCAAoC,CACxDC,WAAmB,EACK;EAAA;EACxB,MAAMC,OAAO,GAAG,MAAM,IAAAC,2BAAmB,EACvC,MACE,IAAAC,uBAAe,EAAC,gBAAgB,EAAE;IAChCC,GAAG,EAAEJ,WAAW;IAChBK,MAAM,EAAE,CACN,qCAAqC,EACrC,WAAW,EACX,sCAAsC;EAE1C,CAAC,CAAC,EACJ,IAAI,CACL;EAED,IAAIJ,OAAO,KAAK,KAAK,EAAE;IACrB,OAAO,IAAI;EACb;EACA,oBAAOA,OAAO,CAAC,CAAC,CAAC,iDAAI,IAAI;AAC3B;AAEO,SAASK,mBAAmB,CAACN,WAAmB,EAAiB;EAAA;EACtE,8BAAOO,sBAAW,CAACC,MAAM,CAACR,WAAW,EAAE,yBAAyB,CAAC,qEAAI,IAAI;AAC3E;AAEO,eAAeS,WAAW,CAACT,WAAmB,EAA0B;EAC7E,MAAMU,YAAY,GAAGC,IAAI,GAACC,IAAI,CAACZ,WAAW,EAAE,eAAe,CAAC;EAC5D,IAAI,MAAMT,eAAe,CAACmB,YAAY,CAAC,EAAE;IACvC,OAAOA,YAAY;EACrB;EACA,OAAO,IAAI;AACb;AAEO,SAASG,sBAAsB,CACpCb,WAAmB,EAQnB;EACA,MAAMc,WAAmC,GAAG,CAAC,CAAC;EAE9C,MAAMC,eAAe,GAAGnB,gBAAgB,CAACoB,MAAM,CAACC,CAAC,IAAI;IACnD,IAAI;MACFH,WAAW,CAACG,CAAC,CAACpB,GAAG,CAAC,GAAG,IAAAU,sBAAW,EAACP,WAAW,EAAEiB,CAAC,CAACzB,IAAI,CAAC;MACrD,OAAO,KAAK;IACd,CAAC,CAAC,MAAM;MACN,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,OAAO;IAAE0B,OAAO,EAAEH,eAAe;IAAED;EAAY,CAAC;AAClD"}