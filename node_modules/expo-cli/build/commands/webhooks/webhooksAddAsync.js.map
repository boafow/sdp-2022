{"version":3,"file":"webhooksAddAsync.js","names":["actionAsync","projectRoot","url","event","options","assert","test","secret","validateSecret","generateSecret","experienceName","project","client","setupAsync","spinner","ora","start","postAsync","id","succeed"],"sources":["../../../src/commands/webhooks/webhooksAddAsync.ts"],"sourcesContent":["import assert from 'assert';\n\nimport { ora } from '../../utils/ora';\nimport { generateSecret, setupAsync, validateSecret, WebhookEvent } from './utils';\n\ntype Options = {\n  url?: string;\n  event?: WebhookEvent;\n  secret?: string;\n};\n\nexport async function actionAsync(projectRoot: string, { url, event, ...options }: Options) {\n  assert(typeof url === 'string' && /^https?/.test(url), '--url: a HTTP URL is required');\n  assert(typeof event === 'string', '--event: string is required');\n  const secret = validateSecret(options) || generateSecret();\n\n  const { experienceName, project, client } = await setupAsync(projectRoot);\n\n  const spinner = ora(`Adding webhook to ${experienceName}`).start();\n  await client.postAsync(`projects/${project.id}/webhooks`, { url, event, secret });\n  spinner.succeed();\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAmF;AAQ5E,eAAeA,WAAW,CAACC,WAAmB,EAAE;EAAEC,GAAG;EAAEC,KAAK;EAAE,GAAGC;AAAiB,CAAC,EAAE;EAC1F,IAAAC,iBAAM,EAAC,OAAOH,GAAG,KAAK,QAAQ,IAAI,SAAS,CAACI,IAAI,CAACJ,GAAG,CAAC,EAAE,+BAA+B,CAAC;EACvF,IAAAG,iBAAM,EAAC,OAAOF,KAAK,KAAK,QAAQ,EAAE,6BAA6B,CAAC;EAChE,MAAMI,MAAM,GAAG,IAAAC,uBAAc,EAACJ,OAAO,CAAC,IAAI,IAAAK,uBAAc,GAAE;EAE1D,MAAM;IAAEC,cAAc;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAG,MAAM,IAAAC,mBAAU,EAACZ,WAAW,CAAC;EAEzE,MAAMa,OAAO,GAAG,IAAAC,UAAG,EAAE,qBAAoBL,cAAe,EAAC,CAAC,CAACM,KAAK,EAAE;EAClE,MAAMJ,MAAM,CAACK,SAAS,CAAE,YAAWN,OAAO,CAACO,EAAG,WAAU,EAAE;IAAEhB,GAAG;IAAEC,KAAK;IAAEI;EAAO,CAAC,CAAC;EACjFO,OAAO,CAACK,OAAO,EAAE;AACnB"}