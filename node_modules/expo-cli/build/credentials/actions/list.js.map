{"version":3,"file":"list.js","names":["displayProjectCredentials","appLookupParams","appCredentials","pushKey","distCert","experienceName","accountName","projectName","bundleIdentifier","Log","log","chalk","bold","displayIosAppCredentials","displayIosUserCredentials","displayIosCredentials","credentials","cred","userCredentials","provisioningProfile","green","provisioningProfileId","teamId","teamName","pushP12","pushPassword","pushId","type","apnsKeyId","certId","warn","field","usedByApps","Set","filter","c","id","map","join","usedByAppsText","gray","displayAndroidCredentials","credentialsList","displayAndroidAppCredentials","tmpFilename","path","os","tmpdir","uuid","keystore","storeBuf","Buffer","from","fs","writeFile","Android","logKeystoreHashes","keystorePath","pushCredentials","fcmApiKey","error","remove"],"sources":["../../../src/credentials/actions/list.ts"],"sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport path from 'path';\nimport { v4 as uuid } from 'uuid';\nimport { AndroidCredentials as Android } from 'xdl';\n\nimport Log from '../../log';\nimport { AppLookupParams } from '../api/IosApi';\nimport {\n  AndroidCredentials,\n  IosAppCredentials,\n  IosCredentials,\n  IosDistCredentials,\n  IosPushCredentials,\n} from '../credentials';\n\nexport function displayProjectCredentials(\n  appLookupParams: AppLookupParams,\n  appCredentials?: IosAppCredentials | null,\n  pushKey?: IosPushCredentials | null,\n  distCert?: IosDistCredentials | null\n): void {\n  const experienceName = `@${appLookupParams.accountName}/${appLookupParams.projectName}`;\n  const bundleIdentifier = appLookupParams.bundleIdentifier;\n  if (!appCredentials) {\n    Log.log(\n      chalk.bold(\n        `No credentials configured for app ${experienceName} with bundle identifier ${bundleIdentifier}\\n`\n      )\n    );\n    return;\n  }\n\n  Log.log();\n  Log.log(chalk.bold('Project Credential Configuration:'));\n  displayIosAppCredentials(appCredentials);\n  Log.log();\n\n  if (distCert) {\n    displayIosUserCredentials(distCert);\n  }\n\n  if (pushKey) {\n    displayIosUserCredentials(pushKey);\n  }\n}\n\nexport async function displayIosCredentials(credentials: IosCredentials) {\n  Log.log(chalk.bold('Available credentials for iOS apps\\n'));\n\n  Log.log(chalk.bold('Application credentials\\n'));\n  for (const cred of credentials.appCredentials) {\n    displayIosAppCredentials(cred);\n    Log.log();\n  }\n\n  Log.log();\n  Log.log(chalk.bold('User credentials\\n'));\n  for (const cred of credentials.userCredentials) {\n    displayIosUserCredentials(cred, credentials);\n    Log.log();\n  }\n  Log.log();\n  Log.log();\n}\n\nexport function displayIosAppCredentials(appCredentials: IosAppCredentials) {\n  Log.log(\n    `  Experience: ${chalk.bold(appCredentials.experienceName)}, bundle identifier: ${\n      appCredentials.bundleIdentifier\n    }`\n  );\n  if (appCredentials.credentials.provisioningProfile) {\n    Log.log(\n      `    Provisioning profile (ID: ${chalk.green(\n        appCredentials.credentials.provisioningProfileId || '---------'\n      )})`\n    );\n  } else {\n    Log.log('    Provisioning profile is missing. It will be generated during the next build');\n  }\n  if (appCredentials.credentials.teamId || appCredentials.credentials.teamName) {\n    Log.log(\n      `    Apple Team ID: ${chalk.green(\n        appCredentials.credentials.teamId || '---------'\n      )},  Apple Team Name: ${chalk.green(appCredentials.credentials.teamName || '---------')}`\n    );\n  }\n  if (appCredentials.credentials.pushP12 && appCredentials.credentials.pushPassword) {\n    Log.log(\n      `    (deprecated) Push Certificate (Push ID: ${chalk.green(\n        appCredentials.credentials.pushId || '-----'\n      )})`\n    );\n  }\n}\n\nexport function displayIosUserCredentials(\n  userCredentials: IosPushCredentials | IosDistCredentials,\n  credentials?: IosCredentials\n) {\n  if (userCredentials.type === 'push-key') {\n    Log.log(`  Push Notifications Key - Key ID: ${chalk.green(userCredentials.apnsKeyId)}`);\n  } else if (userCredentials.type === 'dist-cert') {\n    Log.log(\n      `  Distribution Certificate - Certificate ID: ${chalk.green(\n        userCredentials.certId || '-----'\n      )}`\n    );\n  } else {\n    Log.warn(`  Unknown key type ${(userCredentials as any).type}`);\n  }\n  Log.log(\n    `    Apple Team ID: ${chalk.green(\n      userCredentials.teamId || '---------'\n    )},  Apple Team Name: ${chalk.green(userCredentials.teamName || '---------')}`\n  );\n\n  if (credentials) {\n    const field = userCredentials.type === 'push-key' ? 'pushCredentialsId' : 'distCredentialsId';\n    const usedByApps = [\n      ...new Set(\n        credentials.appCredentials\n          .filter(c => c[field] === userCredentials.id)\n          .map(c => `${c.experienceName} (${c.bundleIdentifier})`)\n      ),\n    ].join(',\\n      ');\n    const usedByAppsText = usedByApps ? `used by\\n      ${usedByApps}` : 'not used by any apps';\n    Log.log(`    ${chalk.gray(usedByAppsText)}`);\n  }\n}\n\nexport async function displayAndroidCredentials(credentialsList: AndroidCredentials[]) {\n  Log.log(chalk.bold('Available Android credentials'));\n  Log.log();\n  for (const credentials of credentialsList) {\n    await displayAndroidAppCredentials(credentials);\n  }\n}\n\nexport async function displayAndroidAppCredentials(credentials: AndroidCredentials) {\n  const tmpFilename = path.join(os.tmpdir(), `expo_tmp_keystore_${uuid()}file.jks`);\n  try {\n    Log.log(chalk.green(credentials.experienceName));\n    Log.log(chalk.bold('  Upload Keystore hashes'));\n    if (credentials.keystore?.keystore) {\n      const storeBuf = Buffer.from(credentials.keystore.keystore, 'base64');\n      await fs.writeFile(tmpFilename, storeBuf);\n      await Android.logKeystoreHashes(\n        {\n          keystorePath: tmpFilename,\n          ...(credentials.keystore as Android.Keystore),\n        },\n        '    '\n      );\n    } else {\n      Log.log('    -----------------------');\n    }\n    Log.log(chalk.bold('  Push Notifications credentials'));\n    Log.log('    FCM Api Key: ', credentials.pushCredentials?.fcmApiKey ?? '---------------------');\n    Log.log('\\n');\n  } catch (error: any) {\n    Log.error('  Failed to parse the Keystore', error);\n    Log.log('\\n');\n  } finally {\n    await fs.remove(tmpFilename);\n  }\n}\n"],"mappings":"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"}