{"version":3,"file":"AndroidApi.js","names":["AndroidApi","constructor","api","client","ApiClient","fetchAll","shouldRefetchAll","credentials","keyBy","getAllCredentialsApi","fetchKeystore","experienceName","ensureCredentialsFetched","keystore","fetchCredentials","updateKeystore","updateKeystoreApi","pushCredentials","fetchFcmKey","updateFcmKey","fcmApiKey","updateFcmKeyApi","removeFcmKey","removeFcmKeyApi","removeKeystore","removeKeystoreApi","response","getAllCredentialsForAppApi"],"sources":["../../../src/credentials/api/AndroidApi.ts"],"sourcesContent":["import keyBy from 'lodash/keyBy';\nimport { ApiV2 } from 'xdl';\n\nimport { AndroidCredentials, FcmCredentials, Keystore } from '../credentials';\nimport ApiClient from './AndroidApiV2Wrapper';\n\nexport default class AndroidApi {\n  private client: ApiClient;\n  private shouldRefetchAll: boolean = true;\n  private credentials: { [key: string]: AndroidCredentials } = {};\n\n  constructor(api: ApiV2) {\n    this.client = new ApiClient(api);\n  }\n\n  public async fetchAll(): Promise<{ [key: string]: AndroidCredentials }> {\n    if (this.shouldRefetchAll) {\n      this.credentials = keyBy(await this.client.getAllCredentialsApi(), 'experienceName');\n      this.shouldRefetchAll = false;\n    }\n    return this.credentials;\n  }\n\n  public async fetchKeystore(experienceName: string): Promise<Keystore | null> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials[experienceName]?.keystore || null;\n  }\n\n  public async fetchCredentials(experienceName: string): Promise<AndroidCredentials> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials[experienceName];\n  }\n\n  public async updateKeystore(experienceName: string, keystore: Keystore): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.updateKeystoreApi(experienceName, keystore);\n    this.credentials[experienceName] = {\n      experienceName,\n      keystore,\n      pushCredentials: this.credentials[experienceName]?.pushCredentials,\n    };\n  }\n\n  public async fetchFcmKey(experienceName: string): Promise<FcmCredentials | null> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials?.[experienceName]?.pushCredentials;\n  }\n\n  public async updateFcmKey(experienceName: string, fcmApiKey: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.updateFcmKeyApi(experienceName, fcmApiKey);\n    this.credentials[experienceName] = {\n      experienceName,\n      keystore: this.credentials[experienceName]?.keystore,\n      pushCredentials: { fcmApiKey },\n    };\n  }\n\n  public async removeFcmKey(experienceName: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.removeFcmKeyApi(experienceName);\n    if (this.credentials[experienceName]) {\n      this.credentials[experienceName].pushCredentials = null;\n    }\n  }\n\n  public async removeKeystore(experienceName: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.removeKeystoreApi(experienceName);\n    if (this.credentials[experienceName]) {\n      this.credentials[experienceName].keystore = null;\n    }\n  }\n\n  private async ensureCredentialsFetched(experienceName: string): Promise<void> {\n    if (!this.credentials[experienceName]) {\n      const response = await this.client.getAllCredentialsForAppApi(experienceName);\n      this.credentials[experienceName] = {\n        experienceName,\n        keystore: response?.keystore,\n        pushCredentials: response?.pushCredentials,\n      };\n    }\n  }\n}\n"],"mappings":"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"}