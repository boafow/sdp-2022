{"version":3,"file":"update.js","names":["updateAndroidCredentialsAsync","ctx","credentialsJsonFilePath","path","join","projectDir","rawCredentialsJsonObject","fs","pathExists","rawFile","readFile","JSON","parse","error","Log","experienceName","projectOwner","manifest","slug","keystore","android","fetchKeystore","isKeystoreComplete","keystorePassword","keyPassword","keyAlias","confirm","confirmAsync","message","warn","keystorePath","log","updateFileAsync","shouldWarnKeystore","isFileUntrackedAsync","writeJson","spaces","shouldWarnCredentialsJson","newFilePaths","push","displayUntrackedFilesWarning","updateIosCredentialsAsync","bundleIdentifier","appLookupParams","accountName","projectName","pprofilePath","ios","provisioningProfilePath","distCertPath","distributionCertificate","appCredentials","getAppCredentials","distCredentials","getDistCert","credentials","provisioningProfile","areCredentialsComplete","certP12","certPassword","shouldWarnPProfile","shouldWarnDistCert","password","filePath","base64Data","absolutePath","isAbsolute","remove","mkdirp","dirname","writeFile","Buffer","from","withUntrackedFiles","gitStatusAsync","showUntracked","trackedFiles","pathWithoutLeadingDot","replace","includes","length"],"sources":["../../../src/credentials/credentialsJson/update.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport Log from '../../log';\nimport { confirmAsync } from '../../utils/prompts';\nimport { Context } from '../context';\nimport { gitStatusAsync } from '../utils/git';\n\nexport async function updateAndroidCredentialsAsync(ctx: Context) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error: any) {\n      Log.error(`There was an error while reading credentials.json [${error}]`);\n      Log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n  const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n  const keystore = await ctx.android.fetchKeystore(experienceName);\n  if (!keystore) {\n    Log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const isKeystoreComplete =\n    keystore.keystore && keystore.keystorePassword && keystore.keyPassword && keystore.keyAlias;\n\n  if (!isKeystoreComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      Log.warn('Aborting...');\n      return;\n    }\n  }\n\n  const keystorePath =\n    rawCredentialsJsonObject?.android?.keystore?.keystorePath ?? 'android/keystores/keystore.jks';\n  Log.log(`Writing Keystore to ${keystorePath}`);\n  await updateFileAsync(ctx.projectDir, keystorePath, keystore.keystore);\n  const shouldWarnKeystore = await isFileUntrackedAsync(keystorePath);\n\n  rawCredentialsJsonObject.android = {\n    keystore: {\n      keystorePath,\n      keystorePassword: keystore.keystorePassword,\n      keyAlias: keystore.keyAlias,\n      keyPassword: keystore.keyPassword,\n    },\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnKeystore) {\n    newFilePaths.push(keystorePath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nexport async function updateIosCredentialsAsync(ctx: Context, bundleIdentifier: string) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error: any) {\n      Log.error(`There was an error while reading credentials.json [${error}]`);\n      Log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n\n  const appLookupParams = {\n    accountName: ctx.projectOwner,\n    projectName: ctx.manifest.slug,\n    bundleIdentifier,\n  };\n  const pprofilePath =\n    rawCredentialsJsonObject?.ios?.provisioningProfilePath ?? 'ios/certs/profile.mobileprovision';\n  const distCertPath =\n    rawCredentialsJsonObject?.ios?.distributionCertificate?.path ?? 'ios/certs/dist-cert.p12';\n  const appCredentials = await ctx.ios.getAppCredentials(appLookupParams);\n  const distCredentials = await ctx.ios.getDistCert(appLookupParams);\n  if (!appCredentials?.credentials?.provisioningProfile && !distCredentials) {\n    Log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const areCredentialsComplete =\n    appCredentials?.credentials?.provisioningProfile &&\n    distCredentials?.certP12 &&\n    distCredentials?.certPassword;\n\n  if (!areCredentialsComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      Log.warn('Aborting...');\n      return;\n    }\n  }\n\n  Log.log(`Writing Provisioning Profile to ${pprofilePath}`);\n  await updateFileAsync(\n    ctx.projectDir,\n    pprofilePath,\n    appCredentials?.credentials?.provisioningProfile\n  );\n  const shouldWarnPProfile = await isFileUntrackedAsync(pprofilePath);\n\n  Log.log(`Writing Distribution Certificate to ${distCertPath}`);\n  await updateFileAsync(ctx.projectDir, distCertPath, distCredentials?.certP12);\n  const shouldWarnDistCert = await isFileUntrackedAsync(distCertPath);\n\n  rawCredentialsJsonObject.ios = {\n    ...(appCredentials?.credentials?.provisioningProfile\n      ? { provisioningProfilePath: pprofilePath }\n      : {}),\n    ...(distCredentials?.certP12 && distCredentials?.certPassword\n      ? {\n          distributionCertificate: {\n            path: distCertPath,\n            password: distCredentials?.certPassword,\n          },\n        }\n      : {}),\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnPProfile) {\n    newFilePaths.push(pprofilePath);\n  }\n  if (shouldWarnDistCert) {\n    newFilePaths.push(distCertPath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nasync function updateFileAsync(projectDir: string, filePath: string, base64Data?: string) {\n  const absolutePath = path.isAbsolute(filePath) ? filePath : path.join(projectDir, filePath);\n  if (await fs.pathExists(absolutePath)) {\n    await fs.remove(absolutePath);\n  }\n  if (base64Data) {\n    await fs.mkdirp(path.dirname(filePath));\n    await fs.writeFile(filePath, Buffer.from(base64Data, 'base64'));\n  }\n}\n\nasync function isFileUntrackedAsync(path: string): Promise<boolean> {\n  const withUntrackedFiles = await gitStatusAsync({ showUntracked: true });\n  const trackedFiles = await gitStatusAsync({ showUntracked: false });\n  const pathWithoutLeadingDot = path.replace(/^\\.\\//, ''); // remove leading './' from path\n  return (\n    withUntrackedFiles.includes(pathWithoutLeadingDot) &&\n    !trackedFiles.includes(pathWithoutLeadingDot)\n  );\n}\n\nfunction displayUntrackedFilesWarning(newFilePaths: string[]) {\n  if (newFilePaths.length === 1) {\n    Log.warn(\n      `File ${newFilePaths[0]} is currently untracked, remember to add it to .gitignore or to encrypt it. (e.g. with git-crypt)`\n    );\n  } else if (newFilePaths.length > 1) {\n    Log.warn(\n      `Files ${newFilePaths.join(\n        ', '\n      )} are currently untracked, remember to add them to .gitignore or to encrypt them. (e.g. with git-crypt)`\n    );\n  }\n}\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA8C;AAEvC,eAAeA,6BAA6B,CAACC,GAAY,EAAE;EAAA;EAChE,MAAMC,uBAAuB,GAAGC,eAAI,CAACC,IAAI,CAACH,GAAG,CAACI,UAAU,EAAE,kBAAkB,CAAC;EAC7E,IAAIC,wBAA6B,GAAG,CAAC,CAAC;EACtC,IAAI,MAAMC,kBAAE,CAACC,UAAU,CAACN,uBAAuB,CAAC,EAAE;IAChD,IAAI;MACF,MAAMO,OAAO,GAAG,MAAMF,kBAAE,CAACG,QAAQ,CAACR,uBAAuB,EAAE,OAAO,CAAC;MACnEI,wBAAwB,GAAGK,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;IAChD,CAAC,CAAC,OAAOI,KAAU,EAAE;MACnBC,cAAG,CAACD,KAAK,CAAE,sDAAqDA,KAAM,GAAE,CAAC;MACzEC,cAAG,CAACD,KAAK,CAAC,uEAAuE,CAAC;MAClF,MAAMA,KAAK;IACb;EACF;EACA,MAAME,cAAc,GAAI,IAAGd,GAAG,CAACe,YAAa,IAAGf,GAAG,CAACgB,QAAQ,CAACC,IAAK,EAAC;EAClE,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,OAAO,CAACC,aAAa,CAACN,cAAc,CAAC;EAChE,IAAI,CAACI,QAAQ,EAAE;IACbL,cAAG,CAACD,KAAK,CAAC,sEAAsE,CAAC;IACjF;EACF;EAEA,MAAMS,kBAAkB,GACtBH,QAAQ,CAACA,QAAQ,IAAIA,QAAQ,CAACI,gBAAgB,IAAIJ,QAAQ,CAACK,WAAW,IAAIL,QAAQ,CAACM,QAAQ;EAE7F,IAAI,CAACH,kBAAkB,EAAE;IACvB,MAAMI,OAAO,GAAG,MAAM,IAAAC,uBAAY,EAAC;MACjCC,OAAO,EACL;IACJ,CAAC,CAAC;IACF,IAAI,CAACF,OAAO,EAAE;MACZZ,cAAG,CAACe,IAAI,CAAC,aAAa,CAAC;MACvB;IACF;EACF;EAEA,MAAMC,YAAY,sDAChBxB,wBAAwB,qFAAxB,uBAA0Bc,OAAO,qFAAjC,uBAAmCD,QAAQ,2DAA3C,uBAA6CW,YAAY,yEAAI,gCAAgC;EAC/FhB,cAAG,CAACiB,GAAG,CAAE,uBAAsBD,YAAa,EAAC,CAAC;EAC9C,MAAME,eAAe,CAAC/B,GAAG,CAACI,UAAU,EAAEyB,YAAY,EAAEX,QAAQ,CAACA,QAAQ,CAAC;EACtE,MAAMc,kBAAkB,GAAG,MAAMC,oBAAoB,CAACJ,YAAY,CAAC;EAEnExB,wBAAwB,CAACc,OAAO,GAAG;IACjCD,QAAQ,EAAE;MACRW,YAAY;MACZP,gBAAgB,EAAEJ,QAAQ,CAACI,gBAAgB;MAC3CE,QAAQ,EAAEN,QAAQ,CAACM,QAAQ;MAC3BD,WAAW,EAAEL,QAAQ,CAACK;IACxB;EACF,CAAC;EACD,MAAMjB,kBAAE,CAAC4B,SAAS,CAACjC,uBAAuB,EAAEI,wBAAwB,EAAE;IACpE8B,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,yBAAyB,GAAG,MAAMH,oBAAoB,CAAC,kBAAkB,CAAC;EAEhF,MAAMI,YAAY,GAAG,EAAE;EACvB,IAAIL,kBAAkB,EAAE;IACtBK,YAAY,CAACC,IAAI,CAACT,YAAY,CAAC;EACjC;EACA,IAAIO,yBAAyB,EAAE;IAC7BC,YAAY,CAACC,IAAI,CAAC,kBAAkB,CAAC;EACvC;EACAC,4BAA4B,CAACF,YAAY,CAAC;AAC5C;AAEO,eAAeG,yBAAyB,CAACxC,GAAY,EAAEyC,gBAAwB,EAAE;EAAA;EACtF,MAAMxC,uBAAuB,GAAGC,eAAI,CAACC,IAAI,CAACH,GAAG,CAACI,UAAU,EAAE,kBAAkB,CAAC;EAC7E,IAAIC,wBAA6B,GAAG,CAAC,CAAC;EACtC,IAAI,MAAMC,kBAAE,CAACC,UAAU,CAACN,uBAAuB,CAAC,EAAE;IAChD,IAAI;MACF,MAAMO,OAAO,GAAG,MAAMF,kBAAE,CAACG,QAAQ,CAACR,uBAAuB,EAAE,OAAO,CAAC;MACnEI,wBAAwB,GAAGK,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;IAChD,CAAC,CAAC,OAAOI,KAAU,EAAE;MACnBC,cAAG,CAACD,KAAK,CAAE,sDAAqDA,KAAM,GAAE,CAAC;MACzEC,cAAG,CAACD,KAAK,CAAC,uEAAuE,CAAC;MAClF,MAAMA,KAAK;IACb;EACF;EAEA,MAAM8B,eAAe,GAAG;IACtBC,WAAW,EAAE3C,GAAG,CAACe,YAAY;IAC7B6B,WAAW,EAAE5C,GAAG,CAACgB,QAAQ,CAACC,IAAI;IAC9BwB;EACF,CAAC;EACD,MAAMI,YAAY,uDAChBxC,wBAAwB,qFAAxB,uBAA0ByC,GAAG,2DAA7B,uBAA+BC,uBAAuB,2EAAI,mCAAmC;EAC/F,MAAMC,YAAY,uDAChB3C,wBAAwB,sFAAxB,uBAA0ByC,GAAG,uFAA7B,wBAA+BG,uBAAuB,4DAAtD,wBAAwD/C,IAAI,2EAAI,yBAAyB;EAC3F,MAAMgD,cAAc,GAAG,MAAMlD,GAAG,CAAC8C,GAAG,CAACK,iBAAiB,CAACT,eAAe,CAAC;EACvE,MAAMU,eAAe,GAAG,MAAMpD,GAAG,CAAC8C,GAAG,CAACO,WAAW,CAACX,eAAe,CAAC;EAClE,IAAI,EAACQ,cAAc,aAAdA,cAAc,wCAAdA,cAAc,CAAEI,WAAW,kDAA3B,sBAA6BC,mBAAmB,KAAI,CAACH,eAAe,EAAE;IACzEvC,cAAG,CAACD,KAAK,CAAC,sEAAsE,CAAC;IACjF;EACF;EAEA,MAAM4C,sBAAsB,GAC1B,CAAAN,cAAc,aAAdA,cAAc,iDAAdA,cAAc,CAAEI,WAAW,2DAA3B,uBAA6BC,mBAAmB,MAChDH,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEK,OAAO,MACxBL,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEM,YAAY;EAE/B,IAAI,CAACF,sBAAsB,EAAE;IAC3B,MAAM/B,OAAO,GAAG,MAAM,IAAAC,uBAAY,EAAC;MACjCC,OAAO,EACL;IACJ,CAAC,CAAC;IACF,IAAI,CAACF,OAAO,EAAE;MACZZ,cAAG,CAACe,IAAI,CAAC,aAAa,CAAC;MACvB;IACF;EACF;EAEAf,cAAG,CAACiB,GAAG,CAAE,mCAAkCe,YAAa,EAAC,CAAC;EAC1D,MAAMd,eAAe,CACnB/B,GAAG,CAACI,UAAU,EACdyC,YAAY,EACZK,cAAc,aAAdA,cAAc,iDAAdA,cAAc,CAAEI,WAAW,2DAA3B,uBAA6BC,mBAAmB,CACjD;EACD,MAAMI,kBAAkB,GAAG,MAAM1B,oBAAoB,CAACY,YAAY,CAAC;EAEnEhC,cAAG,CAACiB,GAAG,CAAE,uCAAsCkB,YAAa,EAAC,CAAC;EAC9D,MAAMjB,eAAe,CAAC/B,GAAG,CAACI,UAAU,EAAE4C,YAAY,EAAEI,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEK,OAAO,CAAC;EAC7E,MAAMG,kBAAkB,GAAG,MAAM3B,oBAAoB,CAACe,YAAY,CAAC;EAEnE3C,wBAAwB,CAACyC,GAAG,GAAG;IAC7B,IAAII,cAAc,aAAdA,cAAc,yCAAdA,cAAc,CAAEI,WAAW,mDAA3B,uBAA6BC,mBAAmB,GAChD;MAAER,uBAAuB,EAAEF;IAAa,CAAC,GACzC,CAAC,CAAC,CAAC;IACP,IAAIO,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEK,OAAO,IAAIL,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEM,YAAY,GACzD;MACET,uBAAuB,EAAE;QACvB/C,IAAI,EAAE8C,YAAY;QAClBa,QAAQ,EAAET,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEM;MAC7B;IACF,CAAC,GACD,CAAC,CAAC;EACR,CAAC;EACD,MAAMpD,kBAAE,CAAC4B,SAAS,CAACjC,uBAAuB,EAAEI,wBAAwB,EAAE;IACpE8B,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,yBAAyB,GAAG,MAAMH,oBAAoB,CAAC,kBAAkB,CAAC;EAEhF,MAAMI,YAAY,GAAG,EAAE;EACvB,IAAIsB,kBAAkB,EAAE;IACtBtB,YAAY,CAACC,IAAI,CAACO,YAAY,CAAC;EACjC;EACA,IAAIe,kBAAkB,EAAE;IACtBvB,YAAY,CAACC,IAAI,CAACU,YAAY,CAAC;EACjC;EACA,IAAIZ,yBAAyB,EAAE;IAC7BC,YAAY,CAACC,IAAI,CAAC,kBAAkB,CAAC;EACvC;EACAC,4BAA4B,CAACF,YAAY,CAAC;AAC5C;AAEA,eAAeN,eAAe,CAAC3B,UAAkB,EAAE0D,QAAgB,EAAEC,UAAmB,EAAE;EACxF,MAAMC,YAAY,GAAG9D,eAAI,CAAC+D,UAAU,CAACH,QAAQ,CAAC,GAAGA,QAAQ,GAAG5D,eAAI,CAACC,IAAI,CAACC,UAAU,EAAE0D,QAAQ,CAAC;EAC3F,IAAI,MAAMxD,kBAAE,CAACC,UAAU,CAACyD,YAAY,CAAC,EAAE;IACrC,MAAM1D,kBAAE,CAAC4D,MAAM,CAACF,YAAY,CAAC;EAC/B;EACA,IAAID,UAAU,EAAE;IACd,MAAMzD,kBAAE,CAAC6D,MAAM,CAACjE,eAAI,CAACkE,OAAO,CAACN,QAAQ,CAAC,CAAC;IACvC,MAAMxD,kBAAE,CAAC+D,SAAS,CAACP,QAAQ,EAAEQ,MAAM,CAACC,IAAI,CAACR,UAAU,EAAE,QAAQ,CAAC,CAAC;EACjE;AACF;AAEA,eAAe9B,oBAAoB,CAAC/B,IAAY,EAAoB;EAClE,MAAMsE,kBAAkB,GAAG,MAAM,IAAAC,qBAAc,EAAC;IAAEC,aAAa,EAAE;EAAK,CAAC,CAAC;EACxE,MAAMC,YAAY,GAAG,MAAM,IAAAF,qBAAc,EAAC;IAAEC,aAAa,EAAE;EAAM,CAAC,CAAC;EACnE,MAAME,qBAAqB,GAAG1E,IAAI,CAAC2E,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;EACzD,OACEL,kBAAkB,CAACM,QAAQ,CAACF,qBAAqB,CAAC,IAClD,CAACD,YAAY,CAACG,QAAQ,CAACF,qBAAqB,CAAC;AAEjD;AAEA,SAASrC,4BAA4B,CAACF,YAAsB,EAAE;EAC5D,IAAIA,YAAY,CAAC0C,MAAM,KAAK,CAAC,EAAE;IAC7BlE,cAAG,CAACe,IAAI,CACL,QAAOS,YAAY,CAAC,CAAC,CAAE,mGAAkG,CAC3H;EACH,CAAC,MAAM,IAAIA,YAAY,CAAC0C,MAAM,GAAG,CAAC,EAAE;IAClClE,cAAG,CAACe,IAAI,CACL,SAAQS,YAAY,CAAClC,IAAI,CACxB,IAAI,CACJ,wGAAuG,CAC1G;EACH;AACF"}