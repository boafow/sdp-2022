{"version":3,"file":"Select.js","names":["SelectPlatform","open","ctx","platform","prompts","type","name","message","choices","map","value","title","optionsPerPage","view","SelectIosExperience","SelectAndroidExperience","CredentialsManager","get","changeMainView","accountName","hasProjectContext","manifest","owner","undefined","user","username","iosCredentials","ios","getAllCredentials","displayIosCredentials","projectSpecificActions","action","handleAction","getAppLookupParamsFromContext","projectName","slug","projectOwner","bundleIdentifier","Error","iosPushView","CreateAndAssignIosPush","UpdateIosPush","RemoveIosPush","iosDistView","CreateIosDist","UpdateIosDist","RemoveIosDist","app","UseExistingPushNotification","UseExistingDistributionCert","iosProvisionigProfileView","RemoveProvisioningProfile","askAboutProjectMode","experienceName","runProjectContext","confirmAsync","assert","androidView","ExperienceView","credentials","android","fetchAll","displayAndroidCredentials","Object","values","cred","QuitError","constructor","setPrototypeOf","prototype","DoQuit","runAsync","mainpage","AskQuit","selected","process","exit"],"sources":["../../../src/credentials/views/Select.ts"],"sourcesContent":["import assert from 'assert';\n\nimport prompts, { confirmAsync } from '../../utils/prompts';\nimport { displayAndroidCredentials, displayIosCredentials } from '../actions/list';\nimport { AppLookupParams } from '../api/IosApi';\nimport { Context, IView } from '../context';\nimport { CredentialsManager } from '../route';\nimport * as androidView from './AndroidCredentials';\nimport * as iosDistView from './IosDistCert';\nimport * as iosProvisionigProfileView from './IosProvisioningProfile';\nimport * as iosPushView from './IosPushCredentials';\n\nexport class SelectPlatform implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const { platform } = await prompts({\n      type: 'select',\n      name: 'platform',\n      message: 'Select platform',\n      choices: ['ios', 'android'].map(value => ({ value, title: value })),\n      optionsPerPage: 20,\n    });\n    const view = platform === 'ios' ? new SelectIosExperience() : new SelectAndroidExperience();\n    CredentialsManager.get().changeMainView(view);\n    return view;\n  }\n}\n\nexport class SelectIosExperience implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const accountName =\n      (ctx.hasProjectContext ? ctx.manifest.owner : undefined) ?? ctx.user.username;\n    const iosCredentials = await ctx.ios.getAllCredentials(accountName);\n\n    await displayIosCredentials(iosCredentials);\n\n    const projectSpecificActions: { value: string; title: string }[] = ctx.hasProjectContext\n      ? [\n          {\n            value: 'use-existing-push-ios',\n            title: 'Use existing Push Notifications Key in current project',\n          },\n          {\n            value: 'use-existing-dist-ios',\n            title: 'Use existing Distribution Certificate in current project',\n          },\n          // {\n          //   value: 'current-remove-push-ios',\n          //   name: 'Remove Push Notifactions credentials for current project',\n          // },\n          // {\n          //   value: 'current-remove-dist-ios',\n          //   name: 'Remove Distribution Certificate for current project',\n          // },\n          // {\n          //   value: 'current-remove-app-ios',\n          //   name: 'Remove all credentials for current project',\n          // },\n        ]\n      : [];\n\n    const { action } = await prompts({\n      type: 'select',\n      name: 'action',\n      message: 'What do you want to do?',\n      choices: [\n        ...projectSpecificActions,\n        { value: 'remove-provisioning-profile', title: 'Remove Provisioning Profile' },\n        { value: 'create-ios-push', title: 'Add new Push Notifications Key' },\n        { value: 'remove-ios-push', title: 'Remove Push Notification credentials' },\n        { value: 'update-ios-push', title: 'Update Push Notifications Key' },\n        { value: 'create-ios-dist', title: 'Add new Distribution Certificate' },\n        { value: 'remove-ios-dist', title: 'Remove Distribution Certificate' },\n        { value: 'update-ios-dist', title: 'Update Distribution Certificate' },\n      ],\n      optionsPerPage: 20,\n    });\n    return this.handleAction(ctx, accountName, action);\n  }\n\n  getAppLookupParamsFromContext(ctx: Context): AppLookupParams {\n    const projectName = ctx.manifest.slug;\n    const accountName = ctx.projectOwner;\n    const bundleIdentifier = ctx.manifest.ios?.bundleIdentifier;\n    if (!bundleIdentifier) {\n      throw new Error(`ios.bundleIdentifier need to be defined`);\n    }\n\n    return { accountName, projectName, bundleIdentifier };\n  }\n\n  handleAction(ctx: Context, accountName: string, action: string): IView | null {\n    switch (action) {\n      case 'create-ios-push':\n        return new iosPushView.CreateAndAssignIosPush(accountName);\n      case 'update-ios-push':\n        return new iosPushView.UpdateIosPush(accountName);\n      case 'remove-ios-push':\n        return new iosPushView.RemoveIosPush(accountName);\n      case 'create-ios-dist':\n        return new iosDistView.CreateIosDist(accountName);\n      case 'update-ios-dist':\n        return new iosDistView.UpdateIosDist(accountName);\n      case 'remove-ios-dist':\n        return new iosDistView.RemoveIosDist(accountName);\n      case 'use-existing-push-ios': {\n        const app = this.getAppLookupParamsFromContext(ctx);\n        return new iosPushView.UseExistingPushNotification(app);\n      }\n      case 'use-existing-dist-ios': {\n        const app = this.getAppLookupParamsFromContext(ctx);\n        return new iosDistView.UseExistingDistributionCert(app);\n      }\n      case 'remove-provisioning-profile':\n        return new iosProvisionigProfileView.RemoveProvisioningProfile(accountName);\n      default:\n        throw new Error('Unknown action selected');\n    }\n  }\n}\n\nexport class SelectAndroidExperience implements IView {\n  private askAboutProjectMode = true;\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (ctx.hasProjectContext && this.askAboutProjectMode) {\n      const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n\n      const runProjectContext = await confirmAsync({\n        message: `You are currently in a directory with ${experienceName} experience. Do you want to select it?`,\n      });\n\n      if (runProjectContext) {\n        assert(ctx.manifest.slug, 'app.json slug field must be set');\n        const view = new androidView.ExperienceView(experienceName);\n        CredentialsManager.get().changeMainView(view);\n        return view;\n      }\n    }\n    this.askAboutProjectMode = false;\n\n    const credentials = await ctx.android.fetchAll();\n    await displayAndroidCredentials(Object.values(credentials));\n\n    const { experienceName } = await prompts({\n      type: 'select',\n      name: 'experienceName',\n      message: 'Select application',\n      choices: Object.values(credentials).map(cred => ({\n        title: cred.experienceName,\n        value: cred.experienceName,\n      })),\n      optionsPerPage: 20,\n    });\n\n    return new androidView.ExperienceView(experienceName);\n  }\n}\n\nexport class QuitError extends Error {\n  constructor() {\n    super();\n\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, QuitError.prototype);\n  }\n}\n\nexport interface IQuit {\n  runAsync(mainpage: IView): Promise<IView>;\n}\n\nexport class DoQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    throw new QuitError();\n  }\n}\n\nexport class AskQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    const { selected } = await prompts({\n      type: 'select',\n      name: 'selected',\n      message: 'Do you want to quit Credential Manager',\n      choices: [\n        { value: 'exit', title: 'Quit Credential Manager' },\n        { value: 'mainpage', title: 'Go back to experience overview.' },\n      ],\n    });\n    if (selected === 'exit') {\n      process.exit(0);\n    }\n    return mainpage;\n  }\n}\n"],"mappings":"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"}