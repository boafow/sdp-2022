{"version":3,"file":"SetupAndroidKeystore.js","names":["SetupAndroidKeystore","constructor","experienceName","options","open","ctx","keystore","keystorePassword","keyAlias","keyPassword","android","fetchKeystore","nonInteractive","allowMissingKeystore","Log","warn","Error","UpdateKeystore","bestEffortKeystoreGeneration","skipKeystoreValidation","SetupAndroidBuildCredentialsFromLocal","localCredentials","credentialsJsonReader","readAndroidCredentialsAsync","projectDir","error","validateKeystoreAsync","updateKeystore"],"sources":["../../../src/credentials/views/SetupAndroidKeystore.ts"],"sourcesContent":["import Log from '../../log';\nimport { Context, IView } from '../context';\nimport * as credentialsJsonReader from '../credentialsJson/read';\nimport validateKeystoreAsync from '../utils/validateKeystore';\nimport { UpdateKeystore } from './AndroidKeystore';\n\ninterface Options {\n  nonInteractive?: boolean;\n  allowMissingKeystore?: boolean;\n  skipKeystoreValidation: boolean;\n}\n\nexport class SetupAndroidKeystore implements IView {\n  constructor(private experienceName: string, private options: Options) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const { keystore, keystorePassword, keyAlias, keyPassword } =\n      (await ctx.android.fetchKeystore(this.experienceName)) ?? {};\n    if (keystore && keystorePassword && keyAlias && keyPassword) {\n      return null;\n    }\n    if (this.options.nonInteractive) {\n      if (this.options.allowMissingKeystore) {\n        Log.warn(\n          'There is no valid Keystore defined for this app, new one will be generated on Expo servers.'\n        );\n        return null;\n      } else {\n        throw new Error('Generating a new Keystore is not supported in --non-interactive mode');\n      }\n    }\n\n    return new UpdateKeystore(this.experienceName, {\n      bestEffortKeystoreGeneration: true,\n      skipKeystoreValidation: this.options.skipKeystoreValidation,\n    });\n  }\n}\n\nexport class SetupAndroidBuildCredentialsFromLocal implements IView {\n  constructor(\n    private experienceName: string,\n    private options: { skipKeystoreValidation: boolean }\n  ) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    let localCredentials;\n    try {\n      localCredentials = await credentialsJsonReader.readAndroidCredentialsAsync(ctx.projectDir);\n    } catch (error: any) {\n      Log.error(\n        'Reading credentials from credentials.json failed. Make sure this file is correct and all credentials are present there.'\n      );\n      throw error;\n    }\n    if (!this.options.skipKeystoreValidation) {\n      await validateKeystoreAsync(localCredentials.keystore);\n    }\n    await ctx.android.updateKeystore(this.experienceName, localCredentials.keystore);\n    return null;\n  }\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAmD;AAAA;AAAA;AAQ5C,MAAMA,oBAAoB,CAAkB;EACjDC,WAAW,CAASC,cAAsB,EAAUC,OAAgB,EAAE;IAAA,KAAlDD,cAAsB,GAAtBA,cAAsB;IAAA,KAAUC,OAAgB,GAAhBA,OAAgB;EAAG;EAEvE,MAAMC,IAAI,CAACC,GAAY,EAAyB;IAAA;IAC9C,MAAM;MAAEC,QAAQ;MAAEC,gBAAgB;MAAEC,QAAQ;MAAEC;IAAY,CAAC,4BACxD,MAAMJ,GAAG,CAACK,OAAO,CAACC,aAAa,CAAC,IAAI,CAACT,cAAc,CAAC,yEAAK,CAAC,CAAC;IAC9D,IAAII,QAAQ,IAAIC,gBAAgB,IAAIC,QAAQ,IAAIC,WAAW,EAAE;MAC3D,OAAO,IAAI;IACb;IACA,IAAI,IAAI,CAACN,OAAO,CAACS,cAAc,EAAE;MAC/B,IAAI,IAAI,CAACT,OAAO,CAACU,oBAAoB,EAAE;QACrCC,cAAG,CAACC,IAAI,CACN,6FAA6F,CAC9F;QACD,OAAO,IAAI;MACb,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,sEAAsE,CAAC;MACzF;IACF;IAEA,OAAO,KAAIC,iCAAc,EAAC,IAAI,CAACf,cAAc,EAAE;MAC7CgB,4BAA4B,EAAE,IAAI;MAClCC,sBAAsB,EAAE,IAAI,CAAChB,OAAO,CAACgB;IACvC,CAAC,CAAC;EACJ;AACF;AAAC;AAEM,MAAMC,qCAAqC,CAAkB;EAClEnB,WAAW,CACDC,cAAsB,EACtBC,OAA4C,EACpD;IAAA,KAFQD,cAAsB,GAAtBA,cAAsB;IAAA,KACtBC,OAA4C,GAA5CA,OAA4C;EACnD;EAEH,MAAMC,IAAI,CAACC,GAAY,EAAyB;IAC9C,IAAIgB,gBAAgB;IACpB,IAAI;MACFA,gBAAgB,GAAG,MAAMC,qBAAqB,GAACC,2BAA2B,CAAClB,GAAG,CAACmB,UAAU,CAAC;IAC5F,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnBX,cAAG,CAACW,KAAK,CACP,yHAAyH,CAC1H;MACD,MAAMA,KAAK;IACb;IACA,IAAI,CAAC,IAAI,CAACtB,OAAO,CAACgB,sBAAsB,EAAE;MACxC,MAAM,IAAAO,2BAAqB,EAACL,gBAAgB,CAACf,QAAQ,CAAC;IACxD;IACA,MAAMD,GAAG,CAACK,OAAO,CAACiB,cAAc,CAAC,IAAI,CAACzB,cAAc,EAAEmB,gBAAgB,CAACf,QAAQ,CAAC;IAChF,OAAO,IAAI;EACb;AACF;AAAC"}