{"version":3,"file":"exp.js","names":["packageJSON","require","ApiV2","setClientName","version","Command","prototype","urlOpts","addOptions","allowOffline","option","helpGroup","name","commands","length","__helpGroup","parent","longDescription","__longDescription","pad","str","width","len","Math","max","stripAnsi","Array","join","humanReadableArgName","arg","nameOutput","variadic","required","breakSentence","input","wrapAnsi","prepareCommands","filter","cmd","getenv","boolish","includes","map","i","args","_args","description","_description","nameWithAlias","_name","usage","commandsStr","argsStr","arguments","_usage","helpInformation","desc","replaceAll","argsDescription","_argsDescription","padWidth","push","forEach","cmdName","_alias","chalk","bold","dim","commandHelp","options","optionHelp","replace","string","search","split","helpGroupOrder","sortHelpGroups","helpGroups","groupOrder","Set","Object","keys","subGroupOrder","core","sortSubGroupWithOrder","groupName","group","order","sortedCommands","key","shift","index","findIndex","item","startsWith","splice","concat","sortedGroups","reduce","prev","curr","command","sorted","values","noArgsCmd","noArgsCmdArgs","wrappedDescription","paddedName","program","on","Log","log","asyncAction","asyncFn","action","nonInteractive","profileMethod","checkCliVersionAsync","offline","ConnectionStatus","setIsOffline","Promise","all","Analytics","flush","UnifiedAnalytics","err","commandName","handleErrorsAsync","process","exit","asyncActionProjectDir","yellow","projectRoot","opts","cwd","path","resolve","config","learnMore","newLine","addNewLineIfNone","green","cyan","pathToConfig","fs","existsSync","relativeInput","relative","formattedPath","reset","nestedWarn","helpCommand","setCustomConfigPath","logLines","msg","logFn","line","INTERNAL_CALLSITES_REGEX","logStackTrace","chunk","nestedLogFn","traceInfo","JSON","parse","message","stack","isLibraryFrame","stackFrames","lastAppCodeFrameIndex","findLastIndex","lastFrameIndexToLog","min","unloggedFrames","isCollapsed","fileNameOrUrl","matchFileNameOrURLFromStackTrace","test","isDebug","style","printNewLineBeforeNextLog","logWithLevel","level","bunyan","INFO","includesStack","nested","WARN","warn","error","nestedError","bar","PackagerLogsStream","onStartBuildBundle","bundleDetails","platform","getPlatformTagForBuildDetails","ProgressBar","total","clear","complete","incomplete","setBundleProgressBar","onProgressBuildBundle","progress","ticks","tick","onFinishBuildBundle","start","end","terminate","totalBuildTimeMs","getTime","durationSuffix","gray","red","StatusEventEmitter","emit","updateLogs","updater","newLogChunks","newLogChunk","issueId","issueCleared","ProjectUtils","attachLoggerStream","stream","write","tag","deviceId","deviceName","type","checkConfig","ProjectSettings","getCurrentStatusAsync","spinner","ora","setSpinner","Doctor","status","validateWithoutNetworkAsync","skipSDKVersionRequirement","FATAL","Error","stop","bootstrapAnalyticsAsync","initializeClient","userData","UserManager","getCachedUserDataAsync","userId","identifyUser","currentConnection","username","trackUsage","argv","ExpoCommand","undefined","subCommand","find","logEvent","source","source_version","runAsync","programName","_registerLogs","Env","shouldEnableAnalytics","setInteractiveAuthenticationCallback","loginOrRegisterAsync","env","SERVER_URL","serverUrl","parsedUrl","url","port","parseInt","hostname","Config","api","host","registerCommands","availableCommands","suggestion","leven","stdin","isTTY","help","e","updateIsAvailable","current","latest","deprecated","update","checkForUpdateAsync","boxen","borderColor","padding","code","LoadingEvent","START_PROGRESS_BAR","TICK_PROGRESS_BAR","getProgress","STOP_PROGRESS_BAR","START_LOADING","logNewSection","STOP_LOADING","getSpinner","DEBUG","debug","ERROR","Logger","notifications","addStream","global","writePathAsync","Binaries","writePathToUserSettingsAsync","run","catch"],"sources":["../src/exp.ts"],"sourcesContent":["import bunyan from '@expo/bunyan';\nimport { setCustomConfigPath } from '@expo/config';\nimport boxen from 'boxen';\nimport chalk from 'chalk';\nimport program, { Command } from 'commander';\nimport fs from 'fs';\nimport getenv from 'getenv';\nimport leven from 'leven';\nimport findLastIndex from 'lodash/findLastIndex';\nimport path from 'path';\nimport ProgressBar from 'progress';\nimport stripAnsi from 'strip-ansi';\nimport url from 'url';\nimport wrapAnsi from 'wrap-ansi';\nimport {\n  Analytics,\n  ApiV2,\n  Binaries,\n  Config,\n  Env,\n  LoadingEvent,\n  Logger,\n  LogRecord,\n  LogUpdater,\n  PackagerLogsStream,\n  ProjectSettings,\n  ProjectUtils,\n  UnifiedAnalytics,\n  UserManager,\n} from 'xdl';\n\nimport StatusEventEmitter from './analytics/StatusEventEmitter';\nimport { registerCommands } from './commands';\nimport { loginOrRegisterAsync } from './commands/auth/accounts';\nimport { learnMore } from './commands/utils/TerminalLink';\nimport { profileMethod } from './commands/utils/profileMethod';\nimport urlOpts from './commands/utils/urlOpts';\nimport Log from './log';\nimport { handleErrorsAsync } from './utils/handleErrors';\nimport { matchFileNameOrURLFromStackTrace } from './utils/matchFileNameOrURLFromStackTrace';\nimport { logNewSection, ora } from './utils/ora';\nimport update from './utils/update';\n\n// We use require() to exclude package.json from TypeScript's analysis since it lives outside the\n// src directory and would change the directory structure of the emitted files under the build\n// directory\nconst packageJSON = require('../package.json');\n\nApiV2.setClientName(packageJSON.version);\n\n// The following prototyped functions are not used here, but within in each file found in `./commands`\n// Extending commander to easily add more options to certain command line arguments\nCommand.prototype.urlOpts = function () {\n  urlOpts.addOptions(this);\n  return this;\n};\n\nCommand.prototype.allowOffline = function () {\n  this.option('--offline', 'Allows this command to run while offline');\n  return this;\n};\n\n// Add support for logical command groupings\nCommand.prototype.helpGroup = function (name: string) {\n  if (this.commands[this.commands.length - 1]) {\n    this.commands[this.commands.length - 1].__helpGroup = name;\n  } else {\n    this.parent.helpGroup(name);\n  }\n  return this;\n};\n\n// A longer description that will be displayed then the command is used with --help\nCommand.prototype.longDescription = function (name: string) {\n  if (this.commands[this.commands.length - 1]) {\n    this.commands[this.commands.length - 1].__longDescription = name;\n  } else {\n    this.parent.longDescription(name);\n  }\n  return this;\n};\n\nfunction pad(str: string, width: number): string {\n  // Pulled from commander for overriding\n  const len = Math.max(0, width - stripAnsi(str).length);\n  return str + Array(len + 1).join(' ');\n}\n\nfunction humanReadableArgName(arg: any): string {\n  // Pulled from commander for overriding\n  const nameOutput = arg.name + (arg.variadic === true ? '...' : '');\n  return arg.required ? `<${nameOutput}>` : `[${nameOutput}]`;\n}\n\nfunction breakSentence(input: string): string {\n  // Break a sentence by the word after a max character count, adjusting for ansi characters\n  return wrapAnsi(input, 72);\n}\n\nCommand.prototype.prepareCommands = function () {\n  return this.commands\n    .filter(function (cmd: Command) {\n      // Display all commands with EXPO_DEBUG, otherwise use the noHelp option.\n      if (getenv.boolish('EXPO_DEBUG', false)) {\n        return true;\n      }\n      return !['internal'].includes(cmd.__helpGroup);\n    })\n    .map(function (cmd: Command, i: number) {\n      const args = cmd._args.map(humanReadableArgName).join(' ');\n\n      const description = cmd._description;\n      // Remove alias. We still show this with --help on the command.\n      // const alias = cmd._alias;\n      // const nameWithAlias = cmd._name + (alias ? '|' + alias : '');\n      const nameWithAlias = cmd._name;\n      return [\n        nameWithAlias +\n          // Remove the redundant [options] string that's shown after every command.\n          // (cmd.options.length ? ' [options]' : '') +\n          (args ? ' ' + args : ''),\n        breakSentence(description),\n        cmd.__helpGroup ?? 'misc',\n      ];\n    });\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\n// @ts-ignore\nCommand.prototype.usage = function (str: string) {\n  const args = this._args.map(function (arg: any[]) {\n    return humanReadableArgName(arg);\n  });\n\n  const commandsStr = this.commands.length ? '[command]' : '';\n  const argsStr = this._args.length ? args.join(' ') : '';\n\n  let usage = commandsStr + argsStr;\n  if (usage.length) usage += ' ';\n  usage += '[options]';\n\n  if (arguments.length === 0) {\n    return this._usage || usage;\n  }\n  this._usage = str;\n\n  return this;\n};\n\nCommand.prototype.helpInformation = function () {\n  let desc: string[] = [];\n  // Use the long description if available, otherwise use the regular description.\n  const description = this.__longDescription ?? this._description;\n  if (description) {\n    desc = [replaceAll(breakSentence(description), '\\n', pad('\\n', 3)), ''];\n\n    const argsDescription = this._argsDescription;\n    if (argsDescription && this._args.length) {\n      const width = this.padWidth();\n      desc.push('Arguments:');\n      desc.push('');\n      this._args.forEach(({ name }: { name: string }) => {\n        desc.push('  ' + pad(name, width) + '  ' + argsDescription[name]);\n      });\n      desc.push('');\n    }\n  }\n\n  let cmdName = this._name;\n  if (this._alias) {\n    // Here is the only place we show the command alias\n    cmdName = `${cmdName}|${this._alias}`;\n  }\n\n  // Dim the options to keep things consistent.\n  const usage = `${chalk.bold`Usage:`} ${cmdName} ${chalk.dim(this.usage())}\\n`;\n\n  const commandHelp = '' + this.commandHelp();\n\n  const options = [chalk.bold`Options:`, '\\n' + this.optionHelp().replace(/^/gm, '    '), ''];\n\n  // return ['', usage, ...desc, ...options, commandHelp].join('\\n') + '\\n';\n  return ['', usage, ...desc, ...options, commandHelp].join(pad('\\n', 3)) + '\\n';\n};\n\nfunction replaceAll(string: string, search: string, replace: string): string {\n  return string.split(search).join(replace);\n}\n\nexport const helpGroupOrder = [\n  'core',\n  'auth',\n  'client',\n  'info',\n  'eject',\n  'publish',\n  'build',\n  'credentials',\n  'notifications',\n  'url',\n  'webhooks',\n  'upload',\n  'internal',\n  'deprecated',\n];\n\nfunction sortHelpGroups(helpGroups: Record<string, string[][]>): Record<string, string[][]> {\n  const groupOrder = [\n    ...new Set([\n      ...helpGroupOrder,\n      // add any others and remove duplicates\n      ...Object.keys(helpGroups),\n    ]),\n  ];\n\n  const subGroupOrder: Record<string, string[]> = {\n    core: ['init', 'start', 'start:web', 'publish', 'export'],\n  };\n\n  const sortSubGroupWithOrder = (groupName: string, group: string[][]): string[][] => {\n    const order: string[] = subGroupOrder[groupName];\n    if (!order?.length) {\n      return group;\n    }\n\n    const sortedCommands: string[][] = [];\n\n    while (order.length) {\n      const key = order.shift()!;\n      const index = group.findIndex(item => item[0].startsWith(key));\n      if (index >= 0) {\n        const [item] = group.splice(index, 1);\n        sortedCommands.push(item);\n      }\n    }\n\n    return sortedCommands.concat(group);\n  };\n\n  // Reverse the groups\n  const sortedGroups: Record<string, string[][]> = {};\n  while (groupOrder.length) {\n    const group = groupOrder.shift()!;\n    if (group in helpGroups) {\n      sortedGroups[group] = helpGroups[group];\n    }\n  }\n\n  return Object.keys(sortedGroups).reduce(\n    (prev, curr) => ({\n      ...prev,\n      // Sort subgroups that have a defined order\n      [curr]: sortSubGroupWithOrder(curr, helpGroups[curr]),\n    }),\n    {}\n  );\n}\n\n// Extended the help renderer to add a custom format and groupings.\nCommand.prototype.commandHelp = function () {\n  if (!this.commands.length) {\n    return '';\n  }\n  const width: number = this.padWidth();\n  const commands: string[][] = this.prepareCommands();\n\n  const helpGroups: Record<string, string[][]> = {};\n\n  // Sort commands into helpGroups\n  for (const command of commands) {\n    const groupName = command[2];\n    if (!helpGroups[groupName]) {\n      helpGroups[groupName] = [];\n    }\n    helpGroups[groupName].push(command);\n  }\n\n  const sorted = sortHelpGroups(helpGroups);\n\n  // Render everything.\n  return [\n    '' + chalk.bold('Commands:'),\n    '',\n    // Render all of the groups.\n    Object.values(sorted)\n      .map(group =>\n        group\n          // Render the command and description\n          .map(([cmd, description]: string[]) => {\n            // Dim the arguments that come after the command, this makes scanning a bit easier.\n            let [noArgsCmd, ...noArgsCmdArgs] = cmd.split(' ');\n            if (noArgsCmdArgs.length) {\n              noArgsCmd += ` ${chalk.dim(noArgsCmdArgs.join(' '))}`;\n            }\n\n            // Word wrap the description.\n            let wrappedDescription = description;\n            if (description) {\n              // Ensure the wrapped description appears on the same padded line.\n              wrappedDescription = '  ' + replaceAll(description, '\\n', pad('\\n', width + 3));\n            }\n\n            const paddedName = wrappedDescription ? pad(noArgsCmd, width) : noArgsCmd;\n            return paddedName + wrappedDescription;\n          })\n          .join('\\n')\n          .replace(/^/gm, '    ')\n      )\n      // Double new line to add spacing between groups\n      .join('\\n\\n'),\n    '',\n  ].join('\\n');\n};\n\nprogram.on('--help', () => {\n  Log.log(`  Run a command with --help for more info 💡`);\n  Log.log(`    $ expo start --help`);\n  Log.log();\n});\n\nexport type Action = (...args: any[]) => void;\n\n// asyncAction is a wrapper for all commands/actions to be executed after commander is done\n// parsing the command input\nCommand.prototype.asyncAction = function (asyncFn: Action) {\n  return this.action(async (...args: any[]) => {\n    if (!getenv.boolish('EAS_BUILD', false) && !program.nonInteractive) {\n      try {\n        await profileMethod(checkCliVersionAsync)();\n      } catch {}\n    }\n\n    try {\n      const options = args[args.length - 1];\n      if (options.offline) {\n        const { ConnectionStatus } = await import('xdl');\n        ConnectionStatus.setIsOffline(true);\n      }\n\n      await asyncFn(...args);\n      // After a command, flush the analytics queue so the program will not have any active timers\n      // This allows node js to exit immediately\n      await Promise.all([Analytics.flush(), UnifiedAnalytics.flush()]);\n    } catch (err: any) {\n      // If the `--name` property is being used then we can be sure that the error is coming from `expo init`.\n      const commandName = typeof this.name === 'string' ? 'init (probably)' : this.name();\n      await handleErrorsAsync(err, { command: commandName });\n      process.exit(1);\n    }\n  });\n};\n\n// asyncActionProjectDir captures the projectDirectory from the command line,\n// setting it to cwd if it is not provided.\n// Commands such as `start` and `publish` use this.\n// It does several things:\n// - Everything in asyncAction\n// - Checks if the user is logged in or out\n// - Checks for updates\n// - Attaches the bundling logger\n// - Checks if the project directory is valid or not\n// - Runs AsyncAction with the projectDir as an argument\nCommand.prototype.asyncActionProjectDir = function (\n  asyncFn: Action,\n  options: { checkConfig?: boolean; skipSDKVersionRequirement?: boolean } = {}\n) {\n  this.option(\n    '--config [file]',\n    `${chalk.yellow('Deprecated:')} Use app.config.js to switch config files instead.`\n  );\n  return this.asyncAction(async (projectRoot: string, ...args: any[]) => {\n    const opts = args[0];\n\n    if (!projectRoot) {\n      projectRoot = process.cwd();\n    } else {\n      projectRoot = path.resolve(process.cwd(), projectRoot);\n    }\n\n    if (opts.config) {\n      Log.log(\n        chalk.yellow(\n          `\\u203A ${chalk.bold(\n            '--config'\n          )} flag is deprecated. Use app.config.js instead. ${learnMore(\n            'https://expo.fyi/config-flag-migration'\n          )}`\n        )\n      );\n      Log.newLine();\n\n      // @ts-ignore: This guards against someone passing --config without a path.\n      if (opts.config === true) {\n        Log.addNewLineIfNone();\n        Log.log('Please specify your custom config path:');\n        Log.log(chalk.green(`  expo ${this.name()} --config ${chalk.cyan(`<app-config>`)}`));\n        Log.newLine();\n        process.exit(1);\n      }\n\n      const pathToConfig = path.resolve(process.cwd(), opts.config);\n      // Warn the user when the custom config path they provided does not exist.\n      if (!fs.existsSync(pathToConfig)) {\n        const relativeInput = path.relative(process.cwd(), opts.config);\n        const formattedPath = chalk\n          .reset(pathToConfig)\n          .replace(relativeInput, chalk.bold(relativeInput));\n        Log.addNewLineIfNone();\n        Log.nestedWarn(`Custom config file does not exist:\\n${formattedPath}`);\n        Log.newLine();\n        const helpCommand = chalk.green(`expo ${this.name()} --help`);\n        Log.log(`Run ${helpCommand} for more info`);\n        Log.newLine();\n        process.exit(1);\n        // throw new Error(`File at provided config path does not exist: ${pathToConfig}`);\n      }\n      setCustomConfigPath(projectRoot, pathToConfig);\n    }\n\n    const logLines = (msg: any, logFn: (...args: any[]) => void) => {\n      if (typeof msg === 'string') {\n        for (const line of msg.split('\\n')) {\n          logFn(line);\n        }\n      } else {\n        logFn(msg);\n      }\n    };\n\n    const { INTERNAL_CALLSITES_REGEX } = await import('@expo/metro-config');\n\n    const logStackTrace = async (\n      chunk: LogRecord,\n      logFn: (...args: any[]) => void,\n      nestedLogFn: (...args: any[]) => void\n    ) => {\n      let traceInfo;\n      try {\n        traceInfo = JSON.parse(chunk.msg);\n      } catch {\n        return logFn(chunk.msg);\n      }\n\n      const { message, stack } = traceInfo;\n      Log.addNewLineIfNone();\n      logFn(chalk.bold(message));\n\n      const isLibraryFrame = (line: string) => {\n        return line.startsWith('node_modules');\n      };\n\n      const stackFrames: string[] = stack.split('\\n').filter((line: string) => line);\n      const lastAppCodeFrameIndex = findLastIndex(stackFrames, (line: string) => {\n        return !isLibraryFrame(line);\n      });\n      let lastFrameIndexToLog = Math.min(\n        stackFrames.length - 1,\n        lastAppCodeFrameIndex + 2 // show max two more frames after last app code frame\n      );\n      let unloggedFrames = stackFrames.length - lastFrameIndexToLog;\n\n      // If we're only going to exclude one frame, just log them all\n      if (unloggedFrames === 1) {\n        lastFrameIndexToLog = stackFrames.length - 1;\n        unloggedFrames = 0;\n      }\n\n      for (let i = 0; i <= lastFrameIndexToLog; i++) {\n        const line = stackFrames[i];\n\n        if (!line) {\n          continue;\n        }\n\n        let isCollapsed = false;\n        const fileNameOrUrl = matchFileNameOrURLFromStackTrace(line);\n        if (fileNameOrUrl) {\n          // Use the same regex we use in Metro config to filter out traces:\n          isCollapsed = INTERNAL_CALLSITES_REGEX.test(fileNameOrUrl);\n\n          // Unless the user is in debug mode, skip printing the collapsed files.\n          if (!Log.isDebug && isCollapsed) {\n            continue;\n          }\n        }\n\n        // If a file is collapsed, print it with dim styling.\n        const style = isCollapsed ? chalk.dim : (message: string) => message;\n        // Use the `at` prefix to match Node.js\n        nestedLogFn(style('at ' + line));\n      }\n\n      if (unloggedFrames > 0) {\n        nestedLogFn(`- ... ${unloggedFrames} more stack frames from framework internals`);\n      }\n\n      Log.printNewLineBeforeNextLog();\n    };\n\n    const logWithLevel = (chunk: LogRecord) => {\n      if (!chunk.msg) {\n        return;\n      }\n      if (chunk.level <= bunyan.INFO) {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, Log.log, Log.nested);\n        } else {\n          logLines(chunk.msg, Log.log);\n        }\n      } else if (chunk.level === bunyan.WARN) {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, Log.warn, Log.nestedWarn);\n        } else {\n          logLines(chunk.msg, Log.warn);\n        }\n      } else {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, Log.error, Log.nestedError);\n        } else {\n          logLines(chunk.msg, Log.error);\n        }\n      }\n    };\n\n    let bar: ProgressBar | null;\n    // eslint-disable-next-line no-new\n    new PackagerLogsStream({\n      projectRoot,\n      onStartBuildBundle({ bundleDetails }) {\n        // TODO: Unify with commands/utils/progress.ts\n        const platform = PackagerLogsStream.getPlatformTagForBuildDetails(bundleDetails);\n        bar = new ProgressBar(`${platform}Bundling JavaScript [:bar] :percent`, {\n          width: 64,\n          total: 100,\n          clear: true,\n          complete: '=',\n          incomplete: ' ',\n        });\n\n        Log.setBundleProgressBar(bar);\n      },\n      onProgressBuildBundle({ progress }) {\n        if (!bar || bar.complete) return;\n        const ticks = progress - bar.curr;\n        ticks > 0 && bar.tick(ticks);\n      },\n      onFinishBuildBundle({ error, start, end, bundleDetails }) {\n        if (bar && !bar.complete) {\n          bar.tick(100 - bar.curr);\n        }\n\n        if (bar) {\n          Log.setBundleProgressBar(null);\n          bar.terminate();\n          bar = null;\n\n          const platform = PackagerLogsStream.getPlatformTagForBuildDetails(bundleDetails);\n          const totalBuildTimeMs = end.getTime() - start.getTime();\n          const durationSuffix = chalk.gray(` ${totalBuildTimeMs}ms`);\n          if (error) {\n            Log.log(chalk.red(`${platform}Bundling failed` + durationSuffix));\n          } else {\n            Log.log(chalk.green(`${platform}Bundling complete` + durationSuffix));\n            StatusEventEmitter.emit('bundleBuildFinish', { totalBuildTimeMs });\n          }\n        }\n      },\n      updateLogs: (updater: LogUpdater) => {\n        const newLogChunks = updater([]);\n        newLogChunks.forEach((newLogChunk: LogRecord) => {\n          if (newLogChunk.issueId && newLogChunk.issueCleared) {\n            return;\n          }\n          logWithLevel(newLogChunk);\n        });\n      },\n    });\n\n    // needed for validation logging to function\n    ProjectUtils.attachLoggerStream(projectRoot, {\n      stream: {\n        write: (chunk: LogRecord) => {\n          if (chunk.tag === 'device') {\n            logWithLevel(chunk);\n            StatusEventEmitter.emit('deviceLogReceive', {\n              deviceId: chunk.deviceId,\n              deviceName: chunk.deviceName,\n            });\n          }\n        },\n      },\n      type: 'raw',\n    });\n\n    // The existing CLI modules only pass one argument to this function, so skipProjectValidation\n    // will be undefined in most cases. we can explicitly pass a truthy value here to avoid\n    // validation (eg for init)\n    //\n    // If the packager/manifest server is running and healthy, there is no need\n    // to rerun Doctor because the directory was already checked previously\n    // This is relevant for command such as `send`\n    if (\n      options.checkConfig &&\n      (await ProjectSettings.getCurrentStatusAsync(projectRoot)) !== 'running'\n    ) {\n      const spinner = ora('Making sure project is set up correctly...').start();\n      Log.setSpinner(spinner);\n      // validate that this is a good projectDir before we try anything else\n\n      const { Doctor } = await import('xdl');\n      const status = await Doctor.validateWithoutNetworkAsync(projectRoot, {\n        skipSDKVersionRequirement: options.skipSDKVersionRequirement,\n      });\n      if (status === Doctor.FATAL) {\n        throw new Error(`There is an error with your project. See above logs for information.`);\n      }\n      spinner.stop();\n      Log.setSpinner(null);\n    }\n\n    // the existing CLI modules only pass one argument to this function, so skipProjectValidation\n    // will be undefined in most cases. we can explicitly pass a truthy value here to avoid validation (eg for init)\n\n    return asyncFn(projectRoot, ...args);\n  });\n};\n\nexport async function bootstrapAnalyticsAsync(): Promise<void> {\n  Analytics.initializeClient(\n    '1wHTzmVgmZvNjCalKL45chlc2VN',\n    'https://cdp.expo.dev',\n    packageJSON.version\n  );\n\n  UnifiedAnalytics.initializeClient(\n    '1wabJGd5IiuF9Q8SGlcI90v8WTs',\n    'https://cdp.expo.dev',\n    packageJSON.version\n  );\n\n  const userData = await profileMethod(\n    UserManager.getCachedUserDataAsync,\n    'getCachedUserDataAsync'\n  )();\n\n  if (!userData?.userId) return;\n\n  UnifiedAnalytics.identifyUser(userData.userId, {\n    userId: userData.userId,\n    currentConnection: userData?.currentConnection,\n    username: userData?.username,\n  });\n}\n\nexport function trackUsage(commands: Command[] = []) {\n  const input = process.argv[2];\n  const ExpoCommand = (cmd: Command): boolean =>\n    (cmd._name === input || cmd._alias === input) && input !== undefined;\n  const subCommand = commands.find(ExpoCommand)?._name;\n\n  if (!subCommand) return; // only track valid expo commands\n\n  UnifiedAnalytics.logEvent('action', {\n    action: `expo ${subCommand}`,\n    source: 'expo cli',\n    source_version: UnifiedAnalytics.version,\n  });\n}\n\nasync function runAsync(programName: string) {\n  try {\n    _registerLogs();\n\n    if (Env.shouldEnableAnalytics()) {\n      await bootstrapAnalyticsAsync();\n    }\n\n    UserManager.setInteractiveAuthenticationCallback(loginOrRegisterAsync);\n\n    if (process.env.SERVER_URL) {\n      let serverUrl = process.env.SERVER_URL;\n      if (!serverUrl.startsWith('http')) {\n        serverUrl = `http://${serverUrl}`;\n      }\n      const parsedUrl = url.parse(serverUrl);\n      const port = parseInt(parsedUrl.port || '', 10);\n      if (parsedUrl.hostname && port) {\n        Config.api.host = parsedUrl.hostname;\n        Config.api.port = port;\n      } else {\n        throw new Error('Environment variable SERVER_URL is not a valid url');\n      }\n    }\n\n    // Setup our commander instance\n    program.name(programName);\n    program\n      .version(packageJSON.version)\n      .option('--non-interactive', 'Fail, if an interactive prompt would be required to continue.');\n\n    // Load each module found in ./commands by 'registering' it with our commander instance\n    profileMethod(registerCommands)(program);\n\n    trackUsage(program.commands); // must be after register commands\n\n    program.on('command:detach', () => {\n      Log.warn('To eject your project to ExpoKit (previously \"detach\"), use `expo eject`.');\n      process.exit(0);\n    });\n\n    program.on('command:diagnostics', () => {\n      Log.warn('The `expo diagnostics` command is deprecated, use `npx expo-env-info` instead.');\n      process.exit(0);\n    });\n\n    program.on('command:*', subCommand => {\n      let msg = `\"${subCommand}\" is not an expo command. See \"expo --help\" for the full list of commands.`;\n      const availableCommands = program.commands.map((cmd: Command) => cmd._name);\n      // finding the best match whose edit distance is less than 40% of their length.\n      const suggestion = availableCommands.find(\n        (commandName: string) => leven(commandName, subCommand[0]) < commandName.length * 0.4\n      );\n      if (suggestion) {\n        msg = `\"${subCommand}\" is not an expo command -- did you mean ${suggestion}?\\n See \"expo --help\" for the full list of commands.`;\n      }\n      Log.warn(msg);\n    });\n\n    if (typeof program.nonInteractive === 'undefined') {\n      // Commander doesn't initialize boolean args with default values.\n      program.nonInteractive = !process.stdin.isTTY;\n    }\n\n    program.parse(process.argv);\n\n    // Show help when no sub-command specified\n    if (program.args.length === 0) {\n      program.help();\n    }\n  } catch (e: any) {\n    Log.error(e);\n    throw e;\n  }\n}\n\nasync function checkCliVersionAsync() {\n  // Skip checking for latest version on EAS Build\n  if (getenv.boolish('EAS_BUILD', false)) {\n    return;\n  }\n\n  const { updateIsAvailable, current, latest, deprecated } = await update.checkForUpdateAsync();\n  if (updateIsAvailable) {\n    Log.nestedWarn(\n      boxen(\n        chalk.green(`There is a new version of ${packageJSON.name} available (${latest}).\nYou are currently using ${packageJSON.name} ${current}\nInstall expo-cli globally using the package manager of your choice;\nfor example: \\`npm install -g ${packageJSON.name}\\` to get the latest version`),\n        { borderColor: 'green', padding: 1 }\n      )\n    );\n  }\n\n  if (deprecated) {\n    Log.nestedWarn(\n      boxen(\n        chalk.red(\n          `This version of expo-cli is not supported anymore.\nIt's highly recommended to update to the newest version.\n\nThe API endpoints used in this version of expo-cli might not exist,\nany interaction with Expo servers may result in unexpected behaviour.`\n        ),\n        { borderColor: 'red', padding: 1 }\n      )\n    );\n  }\n}\n\nfunction _registerLogs() {\n  const stream: bunyan.Stream = {\n    level: Log.isDebug ? 'debug' : 'info',\n    stream: {\n      write: (chunk: any) => {\n        if (chunk.code) {\n          switch (chunk.code) {\n            case LoadingEvent.START_PROGRESS_BAR: {\n              const bar = new ProgressBar(chunk.msg, {\n                width: 64,\n                total: 100,\n                clear: true,\n                complete: '=',\n                incomplete: ' ',\n              });\n              Log.setBundleProgressBar(bar);\n              return;\n            }\n            case LoadingEvent.TICK_PROGRESS_BAR: {\n              const bar = Log.getProgress();\n              if (bar) {\n                bar.tick(1, chunk.msg);\n              }\n              return;\n            }\n            case LoadingEvent.STOP_PROGRESS_BAR: {\n              const bar = Log.getProgress();\n              if (bar) {\n                Log.setBundleProgressBar(null);\n                bar.terminate();\n              }\n              return;\n            }\n            case LoadingEvent.START_LOADING:\n              logNewSection(chunk.msg || '');\n              return;\n            case LoadingEvent.STOP_LOADING: {\n              const spinner = Log.getSpinner();\n              if (spinner) {\n                spinner.stop();\n              }\n              return;\n            }\n          }\n        }\n\n        if (chunk.level === bunyan.INFO) {\n          Log.log(chunk.msg);\n        } else if (chunk.level === bunyan.WARN) {\n          Log.warn(chunk.msg);\n        } else if (chunk.level === bunyan.DEBUG) {\n          Log.debug(chunk.msg);\n        } else if (chunk.level >= bunyan.ERROR) {\n          Log.error(chunk.msg);\n        }\n      },\n    },\n    type: 'raw',\n  };\n\n  Logger.notifications.addStream(stream);\n  Logger.global.addStream(stream);\n}\n\nasync function writePathAsync() {\n  const subCommand = process.argv[2];\n  if (subCommand === 'prepare-detached-build') {\n    // This is being run from Android Studio or Xcode. Don't want to write PATH in this case.\n    return;\n  }\n\n  await Binaries.writePathToUserSettingsAsync();\n}\n\n// This is the entry point of the CLI\nexport function run(programName: string) {\n  (async function () {\n    await Promise.all([writePathAsync(), runAsync(programName)]);\n  })().catch(e => {\n    Log.error('Uncaught Error', e);\n    process.exit(1);\n  });\n}\n"],"mappings":"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"}