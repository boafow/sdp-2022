{"version":3,"file":"BundleIdentifier.js","names":["logInfo","logWarning","ProjectUtils","BundleIdentiferSource","configureBundleIdentifierAsync","projectRoot","exp","configDescription","getProjectConfigDescription","bundleIdentifierFromPbxproj","IOSConfig","BundleIdentifier","getBundleIdentifierFromPbxproj","bundleIdentifierFromConfig","getBundleIdentifier","hasBundleIdentifierInStaticConfig","hasBundleIdentifierInStaticConfigAsync","bundleIdentifierSource","prompt","type","name","message","choices","title","chalk","bold","value","XcodeProject","AppJson","setBundleIdentifierForPbxproj","updateAppJsonConfigAsync","Error","missingBundleIdentifierMessage","getConfigFilePaths","staticConfigPath","newBundleIdentifier","paths","assert","rawStaticConfig","JsonFile","readAsync","expo","ios","bundleIdentifier","writeAsync","read"],"sources":["../src/BundleIdentifier.ts"],"sourcesContent":["/**\n * BundleIdentifier.ts\n *\n * NOTE:\n * The code in this module originates from eas-cli and the canonical version of\n * it is in\n * https://github.com/expo/eas-cli/blob/6a0a9bbaaad03b053b5930f7d14bde35b4d0a9f0/packages/eas-cli/src/build/ios/bundleIdentifer.ts#L36\n * Any changes to this code should be applied to eas-cli as well!\n *\n * TODO: move the code for configuring and validating the bundle identifier\n * to a shared package that can be used for both eas-cli and expo-cli.\n */\nimport { ExpoConfig, getConfigFilePaths, getProjectConfigDescription } from '@expo/config';\nimport { IOSConfig } from '@expo/config-plugins';\nimport JsonFile from '@expo/json-file';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport { prompt } from 'prompts';\n\nimport { ProjectUtils } from './internal';\n\nconst { logInfo, logWarning } = ProjectUtils;\n\nenum BundleIdentiferSource {\n  XcodeProject,\n  AppJson,\n}\n\nexport async function configureBundleIdentifierAsync(\n  projectRoot: string,\n  exp: ExpoConfig\n): Promise<string> {\n  const configDescription = getProjectConfigDescription(projectRoot);\n  const bundleIdentifierFromPbxproj = IOSConfig.BundleIdentifier.getBundleIdentifierFromPbxproj(\n    projectRoot\n  );\n  const bundleIdentifierFromConfig = IOSConfig.BundleIdentifier.getBundleIdentifier(exp);\n  if (bundleIdentifierFromPbxproj && bundleIdentifierFromConfig) {\n    if (bundleIdentifierFromPbxproj === bundleIdentifierFromConfig) {\n      return bundleIdentifierFromConfig;\n    } else {\n      logWarning(\n        projectRoot,\n        'expo',\n        `We detected that your Xcode project is configured with a different bundle identifier than the one defined in ${configDescription}.`\n      );\n      const hasBundleIdentifierInStaticConfig = await hasBundleIdentifierInStaticConfigAsync(\n        projectRoot,\n        exp\n      );\n      if (!hasBundleIdentifierInStaticConfig) {\n        logInfo(\n          projectRoot,\n          'expo',\n          `If you choose the one defined in ${configDescription} we'll automatically configure your Xcode project with it.\nHowever, if you choose the one defined in the Xcode project you'll have to update ${configDescription} on your own.`\n        );\n      }\n      const { bundleIdentifierSource } = await prompt({\n        type: 'select',\n        name: 'bundleIdentifierSource',\n        message: 'Which bundle identifier should we use?',\n        choices: [\n          {\n            title: `${chalk.bold(bundleIdentifierFromPbxproj)} - In Xcode project`,\n            value: BundleIdentiferSource.XcodeProject,\n          },\n          {\n            title: `${chalk.bold(bundleIdentifierFromConfig)} - In your ${configDescription}`,\n            value: BundleIdentiferSource.AppJson,\n          },\n        ],\n      });\n      if (bundleIdentifierSource === BundleIdentiferSource.AppJson) {\n        IOSConfig.BundleIdentifier.setBundleIdentifierForPbxproj(\n          projectRoot,\n          bundleIdentifierFromConfig\n        );\n        return bundleIdentifierFromConfig;\n      } else {\n        if (hasBundleIdentifierInStaticConfig) {\n          await updateAppJsonConfigAsync(projectRoot, exp, bundleIdentifierFromPbxproj);\n        } else {\n          throw new Error(missingBundleIdentifierMessage(configDescription));\n        }\n        return bundleIdentifierFromPbxproj;\n      }\n    }\n  } else if (bundleIdentifierFromPbxproj && !bundleIdentifierFromConfig) {\n    if (getConfigFilePaths(projectRoot).staticConfigPath) {\n      await updateAppJsonConfigAsync(projectRoot, exp, bundleIdentifierFromPbxproj);\n    }\n    return bundleIdentifierFromPbxproj;\n  } else if (!bundleIdentifierFromPbxproj && bundleIdentifierFromConfig) {\n    IOSConfig.BundleIdentifier.setBundleIdentifierForPbxproj(\n      projectRoot,\n      bundleIdentifierFromConfig\n    );\n    return bundleIdentifierFromConfig;\n  } else {\n    throw new Error(missingBundleIdentifierMessage(configDescription));\n  }\n}\n\nfunction missingBundleIdentifierMessage(configDescription: string): string {\n  return `Please define \"ios.bundleIdentifier\" in ${configDescription}.`;\n}\n\nasync function updateAppJsonConfigAsync(\n  projectRoot: string,\n  exp: ExpoConfig,\n  newBundleIdentifier: string\n): Promise<void> {\n  const paths = getConfigFilePaths(projectRoot);\n  assert(paths.staticConfigPath, \"Can't update dynamic configs\");\n\n  const rawStaticConfig = (await JsonFile.readAsync(paths.staticConfigPath)) as any;\n  rawStaticConfig.expo = {\n    ...rawStaticConfig.expo,\n    ios: { ...rawStaticConfig.expo?.ios, bundleIdentifier: newBundleIdentifier },\n  };\n  await JsonFile.writeAsync(paths.staticConfigPath, rawStaticConfig);\n\n  exp.ios = { ...exp.ios, bundleIdentifier: newBundleIdentifier };\n}\n\n/**\n * Check if static config exists and if ios.bundleIdentifier is defined there.\n * It will return false if the value in static config is different than \"ios.bundleIdentifier\" in ExpoConfig\n */\nasync function hasBundleIdentifierInStaticConfigAsync(\n  projectRoot: string,\n  exp: ExpoConfig\n): Promise<boolean> {\n  if (!exp.ios?.bundleIdentifier) {\n    return false;\n  }\n  const paths = getConfigFilePaths(projectRoot);\n  if (!paths.staticConfigPath) {\n    return false;\n  }\n  const rawStaticConfig = JsonFile.read(paths.staticConfigPath) as any;\n  return rawStaticConfig?.expo?.ios?.bundleIdentifier === exp.ios.bundleIdentifier;\n}\n"],"mappings":"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"}