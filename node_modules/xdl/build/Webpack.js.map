{"version":3,"file":"Webpack.js","names":["WEBPACK_LOG_TAG","webpackDevServerInstance","webpackServerPort","customMessageSocketBroadcaster","clearWebCacheAsync","projectRoot","mode","cacheFolder","path","join","ProjectUtils","logInfo","chalk","dim","fs","remove","broadcastMessage","message","data","WebpackDevServer","hackyConvertedMessage","connections","webSocketServer","clients","length","console","warn","sendMessage","startAsync","options","stopAsync","logError","red","fullOptions","transformCLIOptions","env","getWebpackConfigEnvFromBundlingOptionsAsync","clear","https","process","SSL_CRT_FILE","SSL_KEY_FILE","ssl","getSSLCertAsync","name","directory","certPath","keyPath","port","getAvailablePortAsync","defaultPort","underline","protocol","config","loadConfigAsync","platform","compiler","webpack","server","devServer","host","WebpackEnvironment","WEB_HOST","start","onWebpackFinished","error","ProjectSettings","setPackagerInfoAsync","ip","address","url","originalClose","stopCallback","bind","callback","err","finally","location","messageSocket","broadcast","Promise","res","compileWebAppAsync","warnings","resolve","reject","run","stats","messages","formatWebpackMessages","errors","_showErrors","_showWarnings","toJson","all","XDLError","getenv","boolish","logWarning","yellow","bundleWebAppAsync","green","bundleAsync","offline","Error","getUrlAsync","getProtocolAsync","readAsync","DEFAULT_PORT","choosePortAsync","setMode","BABEL_ENV","NODE_ENV","validateBoolOption","value","defaultValue","isImageEditingEnabled","pwa","applyOptionsToProjectSettingsAsync","newSettings","Object","keys","setAsync","dev","logger","getLogger","webpackEnv","log","magenta","result","devcert","certificateFor","key","cert","folder","ensureDir","writeFile","applyEnvironmentVariables","isDebugModeEnabled","bgYellow","black","output","optimization","pathinfo","moduleIds","chunkIds","assign","argv","projectWebpackConfig","existsSync","webpackConfig","require","loadDefaultConfigAsync","openAsync","UrlUtils","constructWebAppUrlAsync","hostType","openBrowserAsync","success","e","Logger","global"],"sources":["../src/Webpack.ts"],"sourcesContent":["import type Log from '@expo/bunyan';\nimport { MessageSocket } from '@expo/dev-server';\nimport * as devcert from '@expo/devcert';\nimport openBrowserAsync from 'better-opn';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport * as path from 'path';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport {\n  choosePortAsync,\n  ip,\n  Logger,\n  ProjectSettings,\n  ProjectUtils,\n  UrlUtils,\n  WebpackEnvironment,\n  XDLError,\n} from './internal';\nimport { formatWebpackMessages } from './webpack-utils/formatWebpackMessages';\n\nconst WEBPACK_LOG_TAG = 'expo';\n\nlet webpackDevServerInstance: WebpackDevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: WebpackDevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  onWebpackFinished?: (error?: Error) => void;\n  forceManifestType?: 'classic' | 'expo-updates';\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  port?: number;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  entryFile?: string;\n  platform?: string;\n  webpackEnv?: object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype WebpackConfiguration = webpack.Configuration;\n\nexport type WebEnvironment = {\n  projectRoot: string;\n  isImageEditingEnabled: boolean;\n  // deprecated\n  pwa: boolean;\n  mode: 'development' | 'production' | 'test' | 'none';\n  https: boolean;\n  logger: Log;\n  port?: number;\n  platform?: string;\n};\n\n// A custom message websocket broadcaster used to send messages to a React Native runtime.\nlet customMessageSocketBroadcaster:\n  | undefined\n  | ((message: string, data?: Record<string, any>) => void);\n\nasync function clearWebCacheAsync(projectRoot: string, mode: string): Promise<void> {\n  const cacheFolder = path.join(projectRoot, '.expo', 'web', 'cache', mode);\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    chalk.dim(`Clearing ${mode} cache directory...`)\n  );\n  try {\n    await fs.remove(cacheFolder);\n  } catch {}\n}\n\nexport type WebpackDevServerResults = {\n  server: WebpackDevServer;\n  location: Omit<WebpackSettings, 'server'>;\n  messageSocket: MessageSocket;\n};\n\nexport async function broadcastMessage(message: 'reload' | string, data?: any) {\n  if (!webpackDevServerInstance || !(webpackDevServerInstance instanceof WebpackDevServer)) {\n    return;\n  }\n\n  // Allow any message on native\n  if (customMessageSocketBroadcaster) {\n    customMessageSocketBroadcaster(message, data);\n    // return;\n  }\n\n  if (message !== 'reload') {\n    // TODO:\n    // Webpack currently only supports reloading the client (browser),\n    // remove this when we have custom sockets, and native support.\n    return;\n  }\n\n  // TODO:\n  // Default webpack-dev-server sockets use \"content-changed\" instead of \"reload\" (what we use on native).\n  // For now, just manually convert the value so our CLI interface can be unified.\n  const hackyConvertedMessage = message === 'reload' ? 'content-changed' : message;\n\n  // @ts-ignore: type not exposed\n  const connections = webpackDevServerInstance.webSocketServer.clients;\n\n  if (!connections.length) {\n    console.warn('No HMR clients are connected to the dev server');\n  }\n  webpackDevServerInstance.sendMessage(connections, hackyConvertedMessage, data);\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {}\n): Promise<WebpackDevServerResults | null> {\n  await stopAsync(projectRoot);\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red(`Webpack is already running.`));\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  if (env.https) {\n    if (!process.env.SSL_CRT_FILE || !process.env.SSL_KEY_FILE) {\n      const ssl = await getSSLCertAsync({\n        name: 'localhost',\n        directory: projectRoot,\n      });\n      if (ssl) {\n        process.env.SSL_CRT_FILE = ssl.certPath;\n        process.env.SSL_KEY_FILE = ssl.keyPath;\n      }\n    }\n  }\n\n  const port = await getAvailablePortAsync({\n    projectRoot,\n    defaultPort: options.port,\n  });\n\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    `Starting Webpack on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n\n  const config = await loadConfigAsync({\n    ...env,\n    platform: 'web',\n  });\n\n  // Create a webpack compiler\n  const compiler = webpack(config);\n\n  const server = new WebpackDevServer(\n    {\n      ...config.devServer!,\n      port,\n      host: WebpackEnvironment.WEB_HOST,\n    },\n    compiler\n  );\n  try {\n    // Launch WebpackDevServer.\n    await server.start();\n\n    if (typeof options.onWebpackFinished === 'function') {\n      options.onWebpackFinished();\n    }\n  } catch (error: any) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n    if (typeof options.onWebpackFinished === 'function') {\n      options.onWebpackFinished(error);\n    }\n  }\n\n  webpackDevServerInstance = server;\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${port}`;\n\n  // Extend the close method to ensure that we clean up the local info.\n  const originalClose = server.stopCallback.bind(server);\n\n  server.stopCallback = (callback?: (err?: Error) => void) => {\n    return originalClose((err?: Error) => {\n      ProjectSettings.setPackagerInfoAsync(projectRoot, {\n        webpackServerPort: null,\n      }).finally(() => {\n        callback?.(err);\n        webpackDevServerInstance = null;\n        webpackServerPort = null;\n      });\n    });\n  };\n\n  return {\n    server,\n    location: {\n      url,\n      port,\n      protocol,\n      host,\n    },\n    // Match the native protocol.\n    messageSocket: {\n      broadcast: broadcastMessage,\n    },\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    await new Promise<Error | undefined>(res => {\n      if (webpackDevServerInstance) {\n        ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Stopping Webpack server');\n        webpackDevServerInstance.stopCallback(res);\n      }\n    });\n  }\n}\n\n// TODO: Reuse logging system that we use in dev server + extras\nasync function compileWebAppAsync(projectRoot: string, compiler: webpack.Compiler): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages: {\n        errors?: string[];\n        warnings?: string[];\n      };\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          // @ts-ignore: TODO\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats?.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages?.errors?.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.errors.join('\\n\\n')));\n      }\n      if (\n        getenv.boolish('EXPO_WEB_BUILD_STRICT', false) &&\n        getenv.boolish('CI', false) &&\n        messages?.warnings?.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          chalk.yellow(\n            '\\nTreating warnings as errors because `process.env.CI = true` and `process.env.EXPO_WEB_BUILD_STRICT = true`. \\n' +\n              'Most CI servers set it automatically.\\n'\n          )\n        );\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nasync function bundleWebAppAsync(projectRoot: string, config: WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        chalk.yellow('Compiled with warnings.\\n')\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, chalk.green('Compiled successfully.\\n'));\n    }\n  } catch (error: any) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red('Failed to compile.\\n'));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const fullOptions = transformCLIOptions({\n    ...options,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  // @ts-ignore\n  if (typeof env.offline !== 'undefined') {\n    throw new Error(\n      'offline support must be added manually: https://expo.fyi/enabling-web-service-workers'\n    );\n  }\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  const config = await loadConfigAsync(env);\n  await bundleWebAppAsync(projectRoot, config);\n}\n\n/**\n * Get the URL for the running instance of Webpack dev server.\n *\n * @param projectRoot\n */\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  if (!webpackDevServerInstance) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nasync function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nasync function getAvailablePortAsync(options: {\n  host?: string;\n  defaultPort?: number;\n  projectRoot: string;\n}): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort\n        ? options.defaultPort\n        : WebpackEnvironment.DEFAULT_PORT;\n    const port = await choosePortAsync(options.projectRoot, {\n      defaultPort,\n      host: 'host' in options && options.host ? options.host : WebpackEnvironment.WEB_HOST,\n    });\n    if (!port) {\n      throw new Error(`Port ${defaultPort} not available.`);\n    }\n    return port;\n  } catch (error: any) {\n    throw new XDLError('NO_PORT_FOUND', error.message);\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  const newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<WebEnvironment> {\n  const { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    isImageEditingEnabled,\n    mode,\n    https,\n    logger: ProjectUtils.getLogger(projectRoot),\n    port: options.port,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function getSSLCertAsync({\n  name,\n  directory,\n}: {\n  name: string;\n  directory: string;\n}): Promise<{ keyPath: string; certPath: string } | false> {\n  console.log(\n    chalk.magenta`Ensuring auto SSL certificate is created (you might need to re-run with sudo)`\n  );\n  try {\n    const result = await devcert.certificateFor(name);\n    if (result) {\n      const { key, cert } = result;\n      const folder = path.join(directory, '.expo', 'web', 'development', 'ssl');\n      await fs.ensureDir(folder);\n\n      const keyPath = path.join(folder, `key-${name}.pem`);\n      await fs.writeFile(keyPath, key);\n\n      const certPath = path.join(folder, `cert-${name}.pem`);\n      await fs.writeFile(certPath, cert);\n\n      return {\n        keyPath,\n        certPath,\n      };\n    }\n    return result;\n  } catch (error: any) {\n    console.log(`Error creating SSL certificates: ${error}`);\n  }\n\n  return false;\n}\n\nfunction applyEnvironmentVariables(config: WebpackConfiguration): WebpackConfiguration {\n  // Use EXPO_DEBUG_WEB=true to enable debugging features for cases where the prod build\n  // has errors that aren't caught in development mode.\n  // Related: https://github.com/expo/expo-cli/issues/614\n  if (WebpackEnvironment.isDebugModeEnabled() && config.mode === 'production') {\n    console.log(chalk.bgYellow.black('Bundling the project in debug mode.'));\n\n    const output = config.output || {};\n    const optimization = config.optimization || {};\n\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    output.pathinfo = true;\n    // Readable ids for better debugging.\n    optimization.moduleIds = 'named';\n    // if optimization.namedChunks is enabled optimization.chunkIds is set to 'named'.\n    // This will manually enable it just to be safe.\n    optimization.chunkIds = 'named';\n\n    Object.assign(config, { output, optimization });\n  }\n\n  return config;\n}\n\nasync function loadConfigAsync(\n  env: WebEnvironment,\n  argv?: string[]\n): Promise<WebpackConfiguration> {\n  setMode(env.mode);\n  // Check if the project has a webpack.config.js in the root.\n  const projectWebpackConfig = path.resolve(env.projectRoot, 'webpack.config.js');\n  let config: WebpackConfiguration;\n  if (fs.existsSync(projectWebpackConfig)) {\n    const webpackConfig = require(projectWebpackConfig);\n    if (typeof webpackConfig === 'function') {\n      config = await webpackConfig(env, argv);\n    } else {\n      config = webpackConfig;\n    }\n  } else {\n    // Fallback to the default expo webpack config.\n    const loadDefaultConfigAsync = require('@expo/webpack-config');\n    config = await loadDefaultConfigAsync(env, argv);\n  }\n  return applyEnvironmentVariables(config);\n}\n\nexport async function openAsync(\n  projectRoot: string\n): Promise<{ success: true; url: string } | { success: false; error: Error }> {\n  try {\n    const url = await UrlUtils.constructWebAppUrlAsync(projectRoot, { hostType: 'localhost' });\n    if (!url) {\n      throw new Error('Webpack Dev Server is not running');\n    }\n    openBrowserAsync(url);\n    return { success: true, url };\n  } catch (e: any) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"],"mappings":"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"}