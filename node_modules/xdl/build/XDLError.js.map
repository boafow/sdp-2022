{"version":3,"file":"XDLError.js","names":["ERROR_PREFIX","XDLError","Error","constructor","code","message","startsWith","substring","length","isXDLError"],"sources":["../src/XDLError.ts"],"sourcesContent":["import { ErrorCode } from './internal';\n\nconst ERROR_PREFIX = 'Error: ';\n\nexport default class XDLError extends Error {\n  readonly name = 'XDLError';\n\n  code: string;\n  isXDLError: true;\n\n  constructor(code: ErrorCode, message: string) {\n    super('');\n\n    // If e.toString() was called to get `message` we don't want it to look\n    // like \"Error: Error:\".\n    if (message.startsWith(ERROR_PREFIX)) {\n      message = message.substring(ERROR_PREFIX.length);\n    }\n\n    this.message = message;\n    this.code = code;\n    this.isXDLError = true;\n  }\n}\n"],"mappings":";;;;;;;;;AAEA,MAAMA,YAAY,GAAG,SAAS;AAEf,MAAMC,QAAQ,SAASC,KAAK,CAAC;EAM1CC,WAAW,CAACC,IAAe,EAAEC,OAAe,EAAE;IAC5C,KAAK,CAAC,EAAE,CAAC;;IAET;IACA;IAAA,8BATc,UAAU;IAAA;IAAA;IAUxB,IAAIA,OAAO,CAACC,UAAU,CAACN,YAAY,CAAC,EAAE;MACpCK,OAAO,GAAGA,OAAO,CAACE,SAAS,CAACP,YAAY,CAACQ,MAAM,CAAC;IAClD;IAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACK,UAAU,GAAG,IAAI;EACxB;AACF;AAAC"}