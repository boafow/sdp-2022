{"version":3,"file":"debugserver.js","names":["debug","Debug","DebugserverClient","ServiceClient","constructor","socket","GDBProtocolClient","setMaxPacketSize","size","sendCommand","toString","setWorkingDir","workingDir","checkLaunchSuccess","attachByName","name","hexName","Buffer","from","continue","halt","protocolClient","write","kill","msg","cmd","args","sendMessage","resp","resolve","reject","parts","split","part","includes","launchApp","appPath","executableName","fullPath","path","join","hexAppPath","appCommand","length"],"sources":["../../../../../../src/apple/native-run/ios/lib/client/debugserver.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Debug from 'debug';\nimport type * as net from 'net';\nimport * as path from 'path';\n\nimport { GDBProtocolClient } from '../protocol/gdb';\nimport { ServiceClient } from './client';\n\nconst debug = Debug('expo:xdl:ios:lib:client:debugserver');\n\nexport class DebugserverClient extends ServiceClient<GDBProtocolClient> {\n  constructor(public socket: net.Socket) {\n    super(socket, new GDBProtocolClient(socket));\n  }\n\n  async setMaxPacketSize(size: number) {\n    return this.sendCommand('QSetMaxPacketSize:', [size.toString()]);\n  }\n\n  async setWorkingDir(workingDir: string) {\n    return this.sendCommand('QSetWorkingDir:', [workingDir]);\n  }\n\n  async checkLaunchSuccess() {\n    return this.sendCommand('qLaunchSuccess', []);\n  }\n\n  async attachByName(name: string) {\n    const hexName = Buffer.from(name).toString('hex');\n    return this.sendCommand(`vAttachName;${hexName}`, []);\n  }\n\n  async continue() {\n    return this.sendCommand('c', []);\n  }\n\n  halt() {\n    // ^C\n    debug('Sending ^C to debugserver');\n    return this.protocolClient.socket.write('\\u0003');\n  }\n\n  async kill() {\n    const msg: any = { cmd: 'k', args: [] };\n    return this.protocolClient.sendMessage(msg, (resp: string, resolve: any, reject: any) => {\n      this.protocolClient.socket.write('+');\n      const parts = resp.split(';');\n      for (const part of parts) {\n        if (part.includes('description')) {\n          // description:{hex encoded message like: \"Terminated with signal 9\"}\n          resolve(Buffer.from(part.split(':')[1], 'hex').toString('ascii'));\n        }\n      }\n    });\n  }\n\n  // TODO support app args\n  // https://sourceware.org/gdb/onlinedocs/gdb/Packets.html#Packets\n  // A arglen,argnum,arg,\n  async launchApp(appPath: string, executableName: string) {\n    const fullPath = path.join(appPath, executableName);\n    const hexAppPath = Buffer.from(fullPath).toString('hex');\n    const appCommand = `A${hexAppPath.length},0,${hexAppPath}`;\n    return this.sendCommand(appCommand, []);\n  }\n\n  async sendCommand(cmd: string, args: string[]) {\n    const msg = { cmd, args };\n    debug(`Sending command: ${cmd}, args: ${args}`);\n    const resp = await this.protocolClient.sendMessage(msg);\n    // we need to ACK as well\n    this.protocolClient.socket.write('+');\n    return resp;\n  }\n}\n"],"mappings":"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"}