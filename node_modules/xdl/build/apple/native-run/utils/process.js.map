{"version":3,"file":"process.js","names":["debug","Debug","once","fn","called","r","wrapper","args","exec","util","promisify","cp","execFile","wait","setTimeout","exitQueue","onBeforeExit","push","BEFORE_EXIT_SIGNALS","beforeExitHandlerWrapper","signal","length","i","entries","e","process","exitCode","exit","on"],"sources":["../../../../src/apple/native-run/utils/process.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as cp from 'child_process';\nimport Debug from 'debug';\nimport * as util from 'util';\n\nconst debug = Debug('expo:xdl:utils:process');\n\nexport function once<T extends (...args: any[]) => any>(fn: T): T {\n  let called = false;\n  let r: any;\n\n  const wrapper: any = (...args: any[]): any => {\n    if (!called) {\n      called = true;\n      r = fn(...args);\n    }\n\n    return r;\n  };\n\n  return wrapper;\n}\nexport const exec = util.promisify(cp.exec);\nexport const execFile = util.promisify(cp.execFile);\nexport const wait = util.promisify(setTimeout);\n\nexport type ExitQueueFn = () => Promise<void>;\n\nconst exitQueue: ExitQueueFn[] = [];\n\nexport function onBeforeExit(fn: ExitQueueFn): void {\n  exitQueue.push(fn);\n}\n\nconst BEFORE_EXIT_SIGNALS: NodeJS.Signals[] = ['SIGINT', 'SIGTERM', 'SIGHUP', 'SIGBREAK'];\n\nconst beforeExitHandlerWrapper = (signal: NodeJS.Signals) =>\n  once(async () => {\n    debug('onBeforeExit handler: %s received', signal);\n    debug('onBeforeExit handler: running %s queued functions', exitQueue.length);\n\n    for (const [i, fn] of exitQueue.entries()) {\n      try {\n        await fn();\n      } catch (e: any) {\n        debug('Error from function %d in exit queue: %O', i, e);\n      }\n    }\n\n    debug('onBeforeExit handler: exiting (exit code %s)', process.exitCode ? process.exitCode : 0);\n\n    process.exit();\n  });\n\nfor (const signal of BEFORE_EXIT_SIGNALS) {\n  process.on(signal, beforeExitHandlerWrapper(signal));\n}\n"],"mappings":";;;;;;;;;AAQA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA6B;AAAA;AAAA;AAV7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,MAAMA,KAAK,GAAG,IAAAC,gBAAK,EAAC,wBAAwB,CAAC;AAEtC,SAASC,IAAI,CAAoCC,EAAK,EAAK;EAChE,IAAIC,MAAM,GAAG,KAAK;EAClB,IAAIC,CAAM;EAEV,MAAMC,OAAY,GAAG,CAAC,GAAGC,IAAW,KAAU;IAC5C,IAAI,CAACH,MAAM,EAAE;MACXA,MAAM,GAAG,IAAI;MACbC,CAAC,GAAGF,EAAE,CAAC,GAAGI,IAAI,CAAC;IACjB;IAEA,OAAOF,CAAC;EACV,CAAC;EAED,OAAOC,OAAO;AAChB;AACO,MAAME,IAAI,GAAGC,IAAI,GAACC,SAAS,CAACC,EAAE,GAACH,IAAI,CAAC;AAAC;AACrC,MAAMI,QAAQ,GAAGH,IAAI,GAACC,SAAS,CAACC,EAAE,GAACC,QAAQ,CAAC;AAAC;AAC7C,MAAMC,IAAI,GAAGJ,IAAI,GAACC,SAAS,CAACI,UAAU,CAAC;AAAC;AAI/C,MAAMC,SAAwB,GAAG,EAAE;AAE5B,SAASC,YAAY,CAACb,EAAe,EAAQ;EAClDY,SAAS,CAACE,IAAI,CAACd,EAAE,CAAC;AACpB;AAEA,MAAMe,mBAAqC,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;AAEzF,MAAMC,wBAAwB,GAAIC,MAAsB,IACtDlB,IAAI,CAAC,YAAY;EACfF,KAAK,CAAC,mCAAmC,EAAEoB,MAAM,CAAC;EAClDpB,KAAK,CAAC,mDAAmD,EAAEe,SAAS,CAACM,MAAM,CAAC;EAE5E,KAAK,MAAM,CAACC,CAAC,EAAEnB,EAAE,CAAC,IAAIY,SAAS,CAACQ,OAAO,EAAE,EAAE;IACzC,IAAI;MACF,MAAMpB,EAAE,EAAE;IACZ,CAAC,CAAC,OAAOqB,CAAM,EAAE;MACfxB,KAAK,CAAC,0CAA0C,EAAEsB,CAAC,EAAEE,CAAC,CAAC;IACzD;EACF;EAEAxB,KAAK,CAAC,8CAA8C,EAAEyB,OAAO,CAACC,QAAQ,GAAGD,OAAO,CAACC,QAAQ,GAAG,CAAC,CAAC;EAE9FD,OAAO,CAACE,IAAI,EAAE;AAChB,CAAC,CAAC;AAEJ,KAAK,MAAMP,MAAM,IAAIF,mBAAmB,EAAE;EACxCO,OAAO,CAACG,EAAE,CAACR,MAAM,EAAED,wBAAwB,CAACC,MAAM,CAAC,CAAC;AACtD"}