{"version":3,"file":"Detach.js","names":["SERVICE_CONTEXT_PROJECT_NAME","ensureBuildConstantsExistsIOSAsync","configFilePath","doesBuildConstantsExist","fs","existsSync","path","join","IosPlist","createBlankAsync","logger","info","_getIosExpoKitVersionThrowErrorAsync","iosProjectDirectory","expoKitVersion","podfileLockPath","podfileLock","readFile","expoKitVersionRegex","match","exec","Error","e","readNullableConfigJsonAsync","projectDir","getConfig","prepareDetachedBuildIosAsync","args","config","exp","name","prepareDetachedUserContextIosAsync","prepareDetachedServiceContextIosAsync","expoRootDir","workspaceSourcePath","buildFlags","StandaloneBuildFlags","createIos","context","StandaloneContext","createServiceContext","supportingDirectory","IosWorkspace","getPaths","prodApiKeys","_readDefaultApiKeysAsync","data","expoSourcePath","skipSDKVersionRequirement","modifyAsync","constantsConfig","contextType","STANDALONE_CONTEXT_TYPE","EXPO_RUNTIME_VERSION","API_SERVER_ENDPOINT","process","env","ENVIRONMENT","DEFAULT_API_KEYS","sdkVersion","TEMPORARY_SDK_VERSION","jsonFilePath","keys","allKeys","JsonFile","readAsync","validKeys","key","hasOwnProperty","includes","createUserContext","podsDirectory","ExponentTools","isDirectory","rnPodDirectory","rnFilesToDelete","globSync","absolute","cwd","i","length","unlink","skipXcodeConfig","devUrl","UrlUtils","constructManifestUrlAsync","defaultApiKeys","developmentUrl","prepareDetachedBuildAsync","platform","expoBuildConstantsMatches","expoBuildConstants","regexFileAsync","bundleAssetsAsync","options","bundledManifestPath","EmbeddedAssets","getEmbeddedManifestPath","warn","manifest","JSON","parse","ex","message","Object","AssetBundle","bundleAsync","bundledAssets","dest","getExportUrl","bundleUrl","DEFAULT_CDN_HOST","bundleUrlParts","split","slice"],"sources":["../../src/detach/Detach.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport fs from 'fs-extra';\nimport { sync as globSync } from 'glob';\nimport path from 'path';\n\nimport {\n  AssetBundle,\n  EmbeddedAssets,\n  ExponentTools,\n  IosPlist,\n  IosWorkspace,\n  LoggerDetach as logger,\n  StandaloneBuildFlags,\n  StandaloneContext,\n  UrlUtils,\n} from '../internal';\n\nconst SERVICE_CONTEXT_PROJECT_NAME = 'exponent-view-template';\n\nasync function ensureBuildConstantsExistsIOSAsync(configFilePath: string) {\n  // EXBuildConstants is included in newer ExpoKit projects.\n  // create it if it doesn't exist.\n  const doesBuildConstantsExist = fs.existsSync(\n    path.join(configFilePath, 'EXBuildConstants.plist')\n  );\n  if (!doesBuildConstantsExist) {\n    await IosPlist.createBlankAsync(configFilePath, 'EXBuildConstants');\n    logger.info('Created `EXBuildConstants.plist` because it did not exist yet');\n  }\n}\n\nasync function _getIosExpoKitVersionThrowErrorAsync(iosProjectDirectory: string) {\n  let expoKitVersion = '';\n  const podfileLockPath = path.join(iosProjectDirectory, 'Podfile.lock');\n  try {\n    const podfileLock = await fs.readFile(podfileLockPath, 'utf8');\n    const expoKitVersionRegex = /ExpoKit\\/Core\\W?\\(([0-9.]+)\\)/gi;\n    const match = expoKitVersionRegex.exec(podfileLock);\n    if (!match) {\n      throw new Error('ExpoKit/Core not found');\n    }\n    expoKitVersion = match[1];\n  } catch (e: any) {\n    throw new Error(\n      `Unable to read ExpoKit version from Podfile.lock. Make sure your project depends on ExpoKit. (${e})`\n    );\n  }\n  return expoKitVersion;\n}\n\nasync function readNullableConfigJsonAsync(projectDir: string) {\n  try {\n    return getConfig(projectDir);\n  } catch {\n    return null;\n  }\n}\n\nasync function prepareDetachedBuildIosAsync(projectDir: string, args: any) {\n  const config = await readNullableConfigJsonAsync(projectDir);\n  if (config && config.exp.name !== SERVICE_CONTEXT_PROJECT_NAME) {\n    return prepareDetachedUserContextIosAsync(projectDir, config.exp, args);\n  } else {\n    return prepareDetachedServiceContextIosAsync(projectDir, args);\n  }\n}\n\nasync function prepareDetachedServiceContextIosAsync(projectDir: string, args: any) {\n  // service context\n  // TODO: very brittle hack: the paths here are hard coded to match the single workspace\n  // path generated inside IosShellApp. When we support more than one path, this needs to\n  // be smarter.\n  const expoRootDir = path.join(projectDir, '..', '..');\n  const workspaceSourcePath = path.join(projectDir, 'ios');\n  const buildFlags = StandaloneBuildFlags.createIos('Release', { workspaceSourcePath });\n  // @ts-ignore missing 9th argument\n  const context = StandaloneContext.createServiceContext(\n    expoRootDir,\n    null,\n    null,\n    null,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    null,\n    null\n  );\n  const { iosProjectDirectory, supportingDirectory } = IosWorkspace.getPaths(context);\n  const expoKitVersion = await _getIosExpoKitVersionThrowErrorAsync(iosProjectDirectory);\n\n  // use prod api keys if available\n  const prodApiKeys = await _readDefaultApiKeysAsync(\n    path.join(context.data.expoSourcePath, '__internal__', 'keys.json')\n  );\n\n  const { exp } = getConfig(expoRootDir, { skipSDKVersionRequirement: true });\n\n  await IosPlist.modifyAsync(supportingDirectory, 'EXBuildConstants', constantsConfig => {\n    // verify that we are actually in a service context and not a misconfigured project\n    const contextType = constantsConfig.STANDALONE_CONTEXT_TYPE;\n    if (contextType !== 'service') {\n      throw new Error(\n        'Unable to configure a project which has no app.json and also no STANDALONE_CONTEXT_TYPE.'\n      );\n    }\n    constantsConfig.EXPO_RUNTIME_VERSION = expoKitVersion;\n    constantsConfig.API_SERVER_ENDPOINT =\n      process.env.ENVIRONMENT === 'staging'\n        ? 'https://staging.exp.host/--/api/v2/'\n        : 'https://exp.host/--/api/v2/';\n    if (prodApiKeys) {\n      constantsConfig.DEFAULT_API_KEYS = prodApiKeys;\n    }\n    if (exp && exp.sdkVersion) {\n      constantsConfig.TEMPORARY_SDK_VERSION = exp.sdkVersion;\n    }\n    return constantsConfig;\n  });\n}\n\nasync function _readDefaultApiKeysAsync(jsonFilePath: string) {\n  if (fs.existsSync(jsonFilePath)) {\n    const keys: any = {};\n    const allKeys = await new JsonFile(jsonFilePath).readAsync();\n    const validKeys = ['AMPLITUDE_KEY', 'GOOGLE_MAPS_IOS_API_KEY'];\n    for (const key in allKeys) {\n      if (allKeys.hasOwnProperty(key) && validKeys.includes(key)) {\n        keys[key] = allKeys[key];\n      }\n    }\n    return keys;\n  }\n  return null;\n}\n\nasync function prepareDetachedUserContextIosAsync(projectDir: string, exp: ExpoConfig, args: any) {\n  const context = StandaloneContext.createUserContext(projectDir, exp);\n  const { iosProjectDirectory, supportingDirectory } = IosWorkspace.getPaths(context);\n\n  logger.info(`Preparing iOS build at ${iosProjectDirectory}...`);\n  // These files cause @providesModule naming collisions\n  // but are not available until after `pod install` has run.\n  const podsDirectory = path.join(iosProjectDirectory, 'Pods');\n  if (!ExponentTools.isDirectory(podsDirectory)) {\n    throw new Error(`Can't find directory ${podsDirectory}, make sure you've run pod install.`);\n  }\n  const rnPodDirectory = path.join(podsDirectory, 'React');\n  if (ExponentTools.isDirectory(rnPodDirectory)) {\n    const rnFilesToDelete = globSync('**/*.@(js|json)', {\n      absolute: true,\n      cwd: rnPodDirectory,\n    });\n    if (rnFilesToDelete) {\n      for (let i = 0; i < rnFilesToDelete.length; i++) {\n        await fs.unlink(rnFilesToDelete[i]);\n      }\n    }\n  }\n\n  // insert expo development url into iOS config\n  if (!args.skipXcodeConfig) {\n    // populate EXPO_RUNTIME_VERSION from ExpoKit pod version\n    const expoKitVersion = await _getIosExpoKitVersionThrowErrorAsync(iosProjectDirectory);\n\n    // populate development url\n    const devUrl = await UrlUtils.constructManifestUrlAsync(projectDir);\n\n    // populate default api keys\n    const defaultApiKeys = await _readDefaultApiKeysAsync(\n      path.join(podsDirectory, 'ExpoKit', 'template-files', 'keys.json')\n    );\n\n    await ensureBuildConstantsExistsIOSAsync(supportingDirectory);\n    await IosPlist.modifyAsync(supportingDirectory, 'EXBuildConstants', constantsConfig => {\n      constantsConfig.developmentUrl = devUrl;\n      constantsConfig.EXPO_RUNTIME_VERSION = expoKitVersion;\n      if (defaultApiKeys) {\n        constantsConfig.DEFAULT_API_KEYS = defaultApiKeys;\n      }\n      if (exp.sdkVersion) {\n        constantsConfig.TEMPORARY_SDK_VERSION = exp.sdkVersion;\n      }\n      return constantsConfig;\n    });\n  }\n}\n\nexport async function prepareDetachedBuildAsync(projectDir: string, args: any) {\n  if (args.platform === 'ios') {\n    await prepareDetachedBuildIosAsync(projectDir, args);\n  } else {\n    const expoBuildConstantsMatches = globSync('android/**/DetachBuildConstants.java', {\n      absolute: true,\n      cwd: projectDir,\n    });\n    if (expoBuildConstantsMatches && expoBuildConstantsMatches.length) {\n      const expoBuildConstants = expoBuildConstantsMatches[0];\n      const devUrl = await UrlUtils.constructManifestUrlAsync(projectDir);\n      await ExponentTools.regexFileAsync(\n        /DEVELOPMENT_URL = \"[^\"]*\";/,\n        `DEVELOPMENT_URL = \"${devUrl}\";`,\n        expoBuildConstants\n      );\n    }\n  }\n}\n\n// args.dest: string,\n// This is the path where assets will be copied to. It should be\n// `$CONFIGURATION_BUILD_DIR/$UNLOCALIZED_RESOURCES_FOLDER_PATH` on iOS\n// (see `exponent-view-template.xcodeproj/project.pbxproj` for an example)\n// and `$buildDir/intermediates/assets/$targetPath` on Android (see\n// `android/app/expo.gradle` for an example).\nexport async function bundleAssetsAsync(projectDir: string, args: any) {\n  const options = await readNullableConfigJsonAsync(projectDir);\n  if (!options || options.exp.name === SERVICE_CONTEXT_PROJECT_NAME) {\n    // Don't run assets bundling for the service context.\n    return;\n  }\n  const { exp } = options;\n  const bundledManifestPath = EmbeddedAssets.getEmbeddedManifestPath(\n    args.platform,\n    projectDir,\n    exp as any\n  );\n  if (!bundledManifestPath) {\n    logger.warn(\n      `Skipped assets bundling because the '${args.platform}.publishManifestPath' key is not specified in the app manifest.`\n    );\n    return;\n  }\n\n  let manifest;\n  try {\n    manifest = JSON.parse(await fs.readFile(bundledManifestPath, 'utf8'));\n  } catch (ex: any) {\n    throw new Error(\n      `Error reading the manifest file. Make sure the path '${bundledManifestPath}' is correct.\\n\\nError: ${ex.message}`\n    );\n  }\n  if (!manifest || !Object.keys(manifest).length) {\n    throw new Error(`The manifest at '${bundledManifestPath}' was empty or invalid.`);\n  }\n\n  await AssetBundle.bundleAsync(null, manifest.bundledAssets, args.dest, getExportUrl(manifest));\n}\n\n/**\n * This function extracts the exported public URL that is set in the manifest\n * when the developer runs `expo export --public-url x`. We use this to ensure\n * that we fetch the resources from the appropriate place when doing builds\n * against self-hosted apps.\n */\nfunction getExportUrl(manifest: any) {\n  const { bundleUrl } = manifest;\n  if (bundleUrl.includes(AssetBundle.DEFAULT_CDN_HOST)) {\n    return null;\n  }\n\n  try {\n    const bundleUrlParts = bundleUrl.split('/');\n    return bundleUrlParts.slice(0, bundleUrlParts.length - 2).join('/');\n  } catch {\n    throw Error(\n      `Expected bundleUrl to be of the format https://domain/bundles/bundle-hash-id, ${bundleUrl} does not follow this format.`\n    );\n  }\n}\n"],"mappings":"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"}