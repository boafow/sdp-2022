{"version":3,"file":"ExponentTools.js","names":["saveUrlToPathAsync","url","path","timeout","response","axios","get","responseType","Promise","resolve","reject","stream","fs","createWriteStream","on","data","pipe","getManifestAsync","headers","options","buildPhaseLogger","logger","LoggerDetach","withFields","buildPhase","_retryPromise","replace","err","error","Error","info","JSON","stringify","fn","retries","spawnAsyncThrowError","command","args","stdio","cwd","process","pipeToLogger","promise","spawnAsyncQuiet","child","streams","stdout","stderr","pipeOutputToLogger","loggerFields","spawnAsync","e","message","isDirectory","dir","statSync","getResolvedLocalesAsync","projectRoot","exp","locales","undefined","lang","localePath","Object","entries","s","readFile","parse","XDLError","regexFileAsync","regex","filename","file","fileString","toString","writeFile","deleteLinesInFileAsync","startRegex","endRegex","lines","split","filteredLines","inDeleteRange","i","length","match","push","join"],"sources":["../../src/detach/ExponentTools.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport spawnAsyncQuiet, { SpawnOptions, SpawnResult } from '@expo/spawn-async';\nimport axios from 'axios';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { Readable } from 'stream';\n\nimport { LoggerDetach, pipeOutputToLogger, XDLError } from '../internal';\n\nasync function saveUrlToPathAsync(url: string, path: string, timeout = 20000) {\n  const response = await axios.get(url, { responseType: 'stream', timeout });\n\n  return new Promise(function (resolve, reject) {\n    const stream = fs.createWriteStream(path);\n    stream.on('close', resolve);\n    stream.on('error', reject);\n    response.data.on('error', reject).pipe(stream);\n  });\n}\n\nasync function getManifestAsync(url: string, headers: any, options: any = {}) {\n  const buildPhaseLogger =\n    options.logger || LoggerDetach.withFields({ buildPhase: 'reading manifest' });\n\n  let response;\n  try {\n    response = await _retryPromise(() => axios.get(url.replace('exp://', 'http://'), { headers }));\n  } catch (err: any) {\n    buildPhaseLogger.error(err);\n    throw new Error('Failed to fetch manifest from www');\n  }\n\n  buildPhaseLogger.info('Using manifest:', JSON.stringify(response.data, null, 2));\n  return response.data;\n}\n\nasync function _retryPromise<T>(fn: (...args: any[]) => T, retries = 5): Promise<T> {\n  try {\n    return await fn();\n  } catch (err: any) {\n    if (retries-- > 0) {\n      return await _retryPromise(fn, retries);\n    } else {\n      throw err;\n    }\n  }\n}\n\nexport type AsyncSpawnOptions = SpawnOptions & {\n  loggerFields?: any;\n  pipeToLogger?: boolean | { stdout?: boolean; stderr?: boolean };\n  stdoutOnly?: boolean;\n  loggerLineTransformer?: (line: any) => any;\n};\n\nasync function spawnAsyncThrowError(\n  command: string,\n  args: string[],\n  options: AsyncSpawnOptions = {\n    stdio: 'inherit',\n    cwd: process.cwd(),\n  }\n): Promise<SpawnResult> {\n  const { pipeToLogger } = options;\n  if (pipeToLogger) {\n    options.stdio = 'pipe';\n    options.cwd = options.cwd || process.cwd();\n  }\n  const promise = spawnAsyncQuiet(command, args, options);\n  if (pipeToLogger && promise.child) {\n    const streams: { stdout?: Readable | null; stderr?: Readable | null } = {};\n    if (pipeToLogger === true || pipeToLogger.stdout) {\n      streams.stdout = promise.child.stdout;\n    }\n    if (pipeToLogger === true || pipeToLogger.stderr) {\n      streams.stderr = promise.child.stderr;\n    }\n    pipeOutputToLogger(streams, options.loggerFields, options);\n  }\n  return promise;\n}\n\nasync function spawnAsync(\n  command: string,\n  args: string[],\n  options: SpawnOptions\n): Promise<SpawnResult | void> {\n  try {\n    return await spawnAsyncThrowError(command, args, options);\n  } catch (e: any) {\n    LoggerDetach.error(e.message);\n  }\n}\n\nfunction isDirectory(dir: string) {\n  try {\n    if (fs.statSync(dir).isDirectory()) {\n      return true;\n    }\n\n    return false;\n  } catch {\n    return false;\n  }\n}\n\ntype LocaleMap = { [lang: string]: any };\n\nasync function getResolvedLocalesAsync(projectRoot: string, exp: ExpoConfig): Promise<LocaleMap> {\n  const locales: LocaleMap = {};\n  if (exp.locales !== undefined) {\n    for (const [lang, localePath] of Object.entries(exp.locales)) {\n      const s = await fs.readFile(path.resolve(projectRoot, localePath as string), 'utf8');\n      try {\n        locales[lang] = JSON.parse(s);\n      } catch (e: any) {\n        throw new XDLError('INVALID_JSON', JSON.stringify(e));\n      }\n    }\n  }\n  return locales;\n}\n\nasync function regexFileAsync(\n  regex: RegExp | string,\n  replace: string,\n  filename: string\n): Promise<void> {\n  const file = await fs.readFile(filename);\n  const fileString = file.toString();\n  await fs.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(\n  startRegex: RegExp | string,\n  endRegex: RegExp | string,\n  filename: string\n): Promise<void> {\n  const file = await fs.readFile(filename);\n  const fileString = file.toString();\n  const lines = fileString.split(/\\r?\\n/);\n  const filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.writeFile(filename, filteredLines.join('\\n'));\n}\n\nexport {\n  isDirectory,\n  saveUrlToPathAsync,\n  getManifestAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  getResolvedLocalesAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n};\n"],"mappings":"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"}