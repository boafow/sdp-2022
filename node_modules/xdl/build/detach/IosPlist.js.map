{"version":3,"file":"IosPlist.js","names":["spawnAsyncThrowError","ExponentTools","_getNormalizedPlistFilename","plistName","plistFilename","indexOf","modifyAsync","plistPath","transform","configPlistName","path","join","configFilename","config","process","platform","configContents","fs","readFile","JSON","parse","e","logger","info","plist","readFileSync","copyFileSync","writeFile","stringify","build","createBlankAsync","emptyConfig","tmpConfigFile","removeSync"],"sources":["../../src/detach/IosPlist.ts"],"sourcesContent":["import plist from '@expo/plist';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport { ExponentTools, LoggerDetach as logger } from '../internal';\n\nconst { spawnAsyncThrowError } = ExponentTools;\n\nfunction _getNormalizedPlistFilename(plistName: string) {\n  let plistFilename;\n  if (plistName.indexOf('.') !== -1) {\n    plistFilename = plistName;\n  } else {\n    plistFilename = `${plistName}.plist`;\n  }\n  return plistFilename;\n}\n\n/**\n *  @param plistName base filename of property list. if no extension, assumes .plist\n */\nasync function modifyAsync(plistPath: string, plistName: string, transform: (config: any) => any) {\n  const plistFilename = _getNormalizedPlistFilename(plistName);\n  const configPlistName = path.join(plistPath, plistFilename);\n  const configFilename = path.join(plistPath, `${plistName}.json`);\n\n  // grab original plist as json object\n  let config;\n  if (process.platform === 'darwin') {\n    await spawnAsyncThrowError('plutil', [\n      '-convert',\n      'json',\n      configPlistName,\n      '-o',\n      configFilename,\n    ]);\n    const configContents = await fs.readFile(configFilename, 'utf8');\n\n    try {\n      config = JSON.parse(configContents);\n    } catch (e: any) {\n      logger.info(`Error parsing ${configFilename}`, e);\n      logger.info('The erroneous file contents was:', configContents);\n      config = {};\n    }\n  } else {\n    config = plist.parse(fs.readFileSync(configPlistName, 'utf8'));\n  }\n\n  // apply transformation\n  config = await transform(config);\n\n  // back up old plist and swap in modified one\n  fs.copyFileSync(configPlistName, `${configPlistName}.bak`);\n  await fs.writeFile(configFilename, JSON.stringify(config));\n  if (process.platform === 'darwin') {\n    await spawnAsyncThrowError('plutil', [\n      '-convert',\n      'xml1',\n      configFilename,\n      '-o',\n      configPlistName,\n    ]);\n  } else {\n    await fs.writeFile(configPlistName, plist.build(config));\n  }\n\n  return config;\n}\n\nasync function createBlankAsync(plistPath: string, plistName: string) {\n  // write empty json file\n  const emptyConfig = {};\n  const tmpConfigFile = path.join(plistPath, `${plistName}.json`);\n  await fs.writeFile(tmpConfigFile, JSON.stringify(emptyConfig));\n\n  // convert to plist\n  const plistFilename = _getNormalizedPlistFilename(plistName);\n  const configPlistName = path.join(plistPath, plistFilename);\n  if (process.platform === 'darwin') {\n    await spawnAsyncThrowError('plutil', [\n      '-convert',\n      'xml1',\n      tmpConfigFile,\n      '-o',\n      configPlistName,\n    ]);\n  } else {\n    await fs.writeFile(configPlistName, JSON.stringify(plist.build(emptyConfig)));\n  }\n\n  // remove tmp json file\n  fs.removeSync(tmpConfigFile);\n}\n\nexport { modifyAsync, createBlankAsync };\n"],"mappings":"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"}