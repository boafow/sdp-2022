{"version":3,"file":"Doctor.js","names":["NO_ISSUES","WARNING","ERROR","FATAL","MIN_WATCHMAN_VERSION","MIN_NPM_VERSION","CORRECT_NPM_VERSION","WARN_NPM_VERSION_RANGES","BAD_NPM_VERSION_RANGES","EXPO_NO_DOCTOR","getenv","boolish","_isNpmVersionWithinRanges","npmVersion","ranges","some","range","semver","satisfies","_checkNpmVersionAsync","projectRoot","yarnVersionResponse","spawnAsync","status","execSync","stdio","toString","trim","lt","ProjectUtils","logError","logWarning","clearNotification","_checkWatchmanVersionAsync","Watchman","isPlatformSupported","watchmanVersion","unblockAndGetVersionAsync","validSemver","valid","gte","validNewVersion","test","warningMessage","process","platform","validateWithSchema","_internal","exp","schema","configName","validateAssets","schemaErrorMessage","assetsErrorMessage","validator","Schemer","rootDir","validateSchemaAsync","e","SchemerError","errors","length","learnMore","map","formatValidationError","join","validateAssetsAsync","validationError","fieldPath","message","_validateExpJsonAsync","pkg","allowNetwork","skipSDKVersionRequirement","sdkVersion","configFilename","env","EXPO_SKIP_MANIFEST_VALIDATION_TOKEN","sdkVersions","Versions","sdkVersionsAsync","Object","keys","ExpSchema","getSchemaAsync","reactNativeIssue","_validateReactNativeVersionAsync","resolveReactNativeVersionFromProjectRoot","memoize","require","resolveFrom","version","reactNative","dependencies","devDependencies","peerDependencies","gteSdkVersion","isExpoForkedReactNative","isDetached","exactReactNativeVersion","profileMethod","facebookReactNativeVersion","anyReactNativePatchVersion","reactNativeTag","match","sdkVersionObject","major","parseSdkVersionFromTag","_validateNodeModulesAsync","silent","validateWithoutNetworkAsync","options","validateAsync","validateWithNetworkAsync","getConfig","strict","expStatus","Math","max","nodeModulesStatus","validateExpoServersAsync","domains","attempts","Promise","all","domain","reachable","isReachable","failures","filter","attempt","forEach","failure","console","log"],"sources":["../../src/project/Doctor.ts"],"sourcesContent":["import { configFilename, ExpoConfig, getConfig, PackageJSONConfig } from '@expo/config';\nimport Schemer, { SchemerError, ValidationError } from '@expo/schemer';\nimport spawnAsync from '@expo/spawn-async';\nimport { execSync } from 'child_process';\nimport getenv from 'getenv';\nimport isReachable from 'is-reachable';\nimport memoize from 'lodash/memoize';\nimport resolveFrom from 'resolve-from';\nimport semver from 'semver';\n\nimport { ExpSchema, ProjectUtils, Versions, Watchman } from '../internal';\nimport { learnMore } from '../logs/TerminalLink';\nimport { profileMethod } from '../utils/profileMethod';\n\nexport const NO_ISSUES = 0;\nexport const WARNING = 1;\nexport const ERROR = 2;\nexport const FATAL = 3;\n\nconst MIN_WATCHMAN_VERSION = '4.6.0';\nconst MIN_NPM_VERSION = '3.0.0';\nconst CORRECT_NPM_VERSION = 'latest';\nconst WARN_NPM_VERSION_RANGES = ['>= 5.0.0 < 5.7.0'];\nconst BAD_NPM_VERSION_RANGES = ['>= 5.0.0 <= 5.0.3'];\n\nconst EXPO_NO_DOCTOR = getenv.boolish('EXPO_NO_DOCTOR', false);\n\nfunction _isNpmVersionWithinRanges(npmVersion: string, ranges: string[]) {\n  return ranges.some(range => semver.satisfies(npmVersion, range));\n}\n\nasync function _checkNpmVersionAsync(projectRoot: string) {\n  try {\n    try {\n      const yarnVersionResponse = await spawnAsync('yarnpkg', ['--version']);\n      if (yarnVersionResponse.status === 0) {\n        return NO_ISSUES;\n      }\n    } catch {}\n\n    const npmVersion = execSync('npm --version', { stdio: 'pipe' }).toString().trim();\n\n    if (\n      semver.lt(npmVersion, MIN_NPM_VERSION) ||\n      _isNpmVersionWithinRanges(npmVersion, BAD_NPM_VERSION_RANGES)\n    ) {\n      ProjectUtils.logError(\n        projectRoot,\n        'expo',\n        `Error: You are using npm version ${npmVersion}. We recommend the latest version ${CORRECT_NPM_VERSION}. To install it, run 'npm i -g npm@${CORRECT_NPM_VERSION}'.`,\n        'doctor-npm-version'\n      );\n      return WARNING;\n    } else if (_isNpmVersionWithinRanges(npmVersion, WARN_NPM_VERSION_RANGES)) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: You are using npm version ${npmVersion}. There may be bugs in this version, use it at your own risk. We recommend version ${CORRECT_NPM_VERSION}.`,\n        'doctor-npm-version'\n      );\n    } else {\n      ProjectUtils.clearNotification(projectRoot, 'doctor-npm-version');\n    }\n  } catch {\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `Warning: Could not determine npm version. Make sure your version is >= ${MIN_NPM_VERSION} - we recommend ${CORRECT_NPM_VERSION}.`,\n      'doctor-npm-version'\n    );\n    return WARNING;\n  }\n\n  return NO_ISSUES;\n}\n\nasync function _checkWatchmanVersionAsync(projectRoot: string) {\n  // There's no point in checking any of this stuff if watchman isn't supported on this platform\n  if (!Watchman.isPlatformSupported()) {\n    ProjectUtils.clearNotification(projectRoot, 'doctor-watchman-version');\n    return;\n  }\n\n  const watchmanVersion = await Watchman.unblockAndGetVersionAsync(projectRoot);\n\n  // If we can't get the watchman version, `getVersionAsync` will return `null`\n  if (!watchmanVersion) {\n    // watchman is probably just not installed\n    ProjectUtils.clearNotification(projectRoot, 'doctor-watchman-version');\n    return;\n  }\n\n  // Watchman versioning through homebrew is changed from semver to date since \"2021.05.31.00\"\n  // see: https://github.com/Homebrew/homebrew-core/commit/d299c2867503cb6ad8d90792343993c80e745071\n  const validSemver =\n    !!semver.valid(watchmanVersion) && semver.gte(watchmanVersion, MIN_WATCHMAN_VERSION);\n\n  // This new format is used later than the MIN_WATCHMAN_VERSION, we assume/estimate if the version is correct here.\n  const validNewVersion =\n    !validSemver && /[0-9]{4}\\.[0-9]{2}\\.[0-9]{2}\\.[0-9]{2}/.test(watchmanVersion);\n\n  if (!validSemver && !validNewVersion) {\n    let warningMessage = `Warning: You are using an old version of watchman (v${watchmanVersion}).\\n\\nIt is recommend to always use the latest version, or at least v${MIN_WATCHMAN_VERSION}.`;\n\n    // Add a note about homebrew if the user is on a Mac\n    if (process.platform === 'darwin') {\n      warningMessage += `\\n\\nIf you are using homebrew, try:\\nbrew uninstall watchman; brew install watchman`;\n    }\n    ProjectUtils.logWarning(projectRoot, 'expo', warningMessage, 'doctor-watchman-version');\n    return;\n  }\n\n  ProjectUtils.clearNotification(projectRoot, 'doctor-watchman-version');\n}\n\nasync function validateWithSchema(\n  projectRoot: string,\n  {\n    // Extract internal from the config object.\n    _internal,\n    ...exp\n  }: ExpoConfig,\n  schema: any,\n  configName: string,\n  validateAssets: boolean\n): Promise<{ schemaErrorMessage: string | undefined; assetsErrorMessage: string | undefined }> {\n  let schemaErrorMessage;\n  let assetsErrorMessage;\n  const validator = new Schemer(schema, { rootDir: projectRoot });\n\n  // Validate the schema itself\n  try {\n    await validator.validateSchemaAsync(exp);\n  } catch (e: any) {\n    if (e instanceof SchemerError) {\n      schemaErrorMessage = `Error: Problem${\n        e.errors.length > 1 ? 's' : ''\n      } validating fields in ${configName}. ${learnMore(\n        'https://docs.expo.dev/workflow/configuration/'\n      )}`;\n      schemaErrorMessage += e.errors.map(formatValidationError).join('');\n    }\n  }\n\n  if (validateAssets) {\n    try {\n      await validator.validateAssetsAsync(exp);\n    } catch (e: any) {\n      if (e instanceof SchemerError) {\n        assetsErrorMessage = `Error: Problem${\n          e.errors.length > 1 ? '' : 's'\n        } validating asset fields in ${configName}. ${learnMore('https://docs.expo.dev/')}`;\n        assetsErrorMessage += e.errors.map(formatValidationError).join('');\n      }\n    }\n  }\n  return { schemaErrorMessage, assetsErrorMessage };\n}\n\nfunction formatValidationError(validationError: ValidationError) {\n  return `\\n â€¢ ${validationError.fieldPath ? 'Field: ' + validationError.fieldPath + ' - ' : ''}${\n    validationError.message\n  }.`;\n}\n\nasync function _validateExpJsonAsync(\n  exp: ExpoConfig,\n  pkg: PackageJSONConfig,\n  projectRoot: string,\n  allowNetwork: boolean,\n  skipSDKVersionRequirement: boolean | undefined\n): Promise<number> {\n  if (!exp || !pkg) {\n    // getConfig already logged an error\n    return FATAL;\n  }\n\n  try {\n    await _checkWatchmanVersionAsync(projectRoot);\n  } catch (e: any) {\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `Warning: Problem checking watchman version. ${e.message}.`,\n      'doctor-problem-checking-watchman-version'\n    );\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-problem-checking-watchman-version');\n\n  const sdkVersion = exp.sdkVersion;\n  const configName = configFilename(projectRoot);\n\n  // Warn if sdkVersion is UNVERSIONED\n  if (sdkVersion === 'UNVERSIONED' && !process.env.EXPO_SKIP_MANIFEST_VALIDATION_TOKEN) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Using unversioned Expo SDK. Do not publish until you set sdkVersion in ${configName}`,\n      'doctor-unversioned'\n    );\n    return ERROR;\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-unversioned');\n  const sdkVersions = await Versions.sdkVersionsAsync();\n  if (!sdkVersions) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Couldn't connect to SDK versions server`,\n      'doctor-versions-endpoint-failed'\n    );\n    return ERROR;\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-versions-endpoint-failed');\n\n  if (!skipSDKVersionRequirement && (!sdkVersion || !sdkVersions[sdkVersion])) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Invalid sdkVersion. Valid options are ${Object.keys(sdkVersions).join(', ')}`,\n      'doctor-invalid-sdk-version'\n    );\n    return ERROR;\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-invalid-sdk-version');\n\n  // Skip validation if the correct token is set in env\n  if (sdkVersion && sdkVersion !== 'UNVERSIONED') {\n    try {\n      const schema = await ExpSchema.getSchemaAsync(sdkVersion);\n      const { schemaErrorMessage, assetsErrorMessage } = await validateWithSchema(\n        projectRoot,\n        exp,\n        schema,\n        configName,\n        allowNetwork\n      );\n\n      if (schemaErrorMessage) {\n        ProjectUtils.logError(projectRoot, 'expo', schemaErrorMessage, 'doctor-schema-validation');\n      } else {\n        ProjectUtils.clearNotification(projectRoot, 'doctor-schema-validation');\n      }\n      if (assetsErrorMessage) {\n        ProjectUtils.logError(\n          projectRoot,\n          'expo',\n          assetsErrorMessage,\n          `doctor-validate-asset-fields`\n        );\n      } else {\n        ProjectUtils.clearNotification(projectRoot, `doctor-validate-asset-fields`);\n      }\n      ProjectUtils.clearNotification(projectRoot, 'doctor-schema-validation-exception');\n      if (schemaErrorMessage || assetsErrorMessage) return ERROR;\n    } catch (e: any) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: Problem validating ${configName}: ${e.message}.`,\n        'doctor-schema-validation-exception'\n      );\n    }\n  }\n\n  if (sdkVersion) {\n    const reactNativeIssue = await _validateReactNativeVersionAsync(\n      exp,\n      pkg,\n      projectRoot,\n      sdkVersions,\n      sdkVersion\n    );\n\n    if (reactNativeIssue !== NO_ISSUES) {\n      return reactNativeIssue;\n    }\n  }\n\n  // TODO: Check any native module versions here\n\n  return NO_ISSUES;\n}\n\nconst resolveReactNativeVersionFromProjectRoot = memoize((projectRoot: string): string | null => {\n  try {\n    return require(resolveFrom(projectRoot, 'react-native/package.json')).version;\n  } catch {}\n  return null;\n});\n\nasync function _validateReactNativeVersionAsync(\n  exp: ExpoConfig,\n  pkg: PackageJSONConfig,\n  projectRoot: string,\n  sdkVersions: Versions.SDKVersions,\n  sdkVersion: string\n): Promise<number> {\n  let reactNative = null;\n\n  if (pkg.dependencies?.['react-native']) {\n    reactNative = pkg.dependencies['react-native'];\n  } else if (pkg.devDependencies?.['react-native']) {\n    reactNative = pkg.devDependencies['react-native'];\n  } else if (pkg.peerDependencies?.['react-native']) {\n    reactNative = pkg.peerDependencies['react-native'];\n  }\n\n  // react-native is required\n  if (!reactNative) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Can't find react-native in package.json dependencies`,\n      'doctor-no-react-native-in-package-json'\n    );\n    return ERROR;\n  }\n\n  ProjectUtils.clearNotification(projectRoot, 'doctor-no-react-native-in-package-json');\n\n  if (\n    Versions.gteSdkVersion(exp, '41.0.0') &&\n    pkg.dependencies?.['@react-native-community/async-storage']\n  ) {\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `\\n@react-native-community/async-storage has been renamed. To upgrade:\\n- remove @react-native-community/async-storage from package.json\\n- run \"expo install @react-native-async-storage/async-storage\"\\n- update your imports manually, or run \"npx expo-codemod sdk41-async-storage './**/*'\".\\n`,\n      'doctor-legacy-async-storage'\n    );\n    return WARNING;\n  } else {\n    ProjectUtils.clearNotification(projectRoot, 'doctor-legacy-async-storage');\n  }\n\n  const isExpoForkedReactNative = /expo\\/react-native/.test(reactNative);\n  if (!isExpoForkedReactNative) {\n    // Expo fork of react-native is required for deprecated `isDetached` project\n    if (exp.isDetached) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: Not using the Expo fork of react-native (${reactNative}). ${learnMore(\n          'https://docs.expo.dev/'\n        )}`,\n        'doctor-not-using-expo-fork'\n      );\n      return WARNING;\n    }\n    ProjectUtils.clearNotification(projectRoot, 'doctor-not-using-expo-fork');\n\n    // Get the exact version as late as possible\n    // `semver` will match `semver.satisfies('~1.0.0', '~1.0.0')` as `false` even though it's technically allowed,\n    // to combat this, attempt to get the exact installed version.\n    const exactReactNativeVersion = profileMethod(resolveReactNativeVersionFromProjectRoot)(\n      projectRoot\n    );\n\n    reactNative = exactReactNativeVersion || reactNative;\n\n    // Check react-native version satisfies with sdk's `facebookReactNativeVersion`\n    const { facebookReactNativeVersion } = sdkVersions[sdkVersion];\n    const anyReactNativePatchVersion = `~${facebookReactNativeVersion}`;\n    if (!semver.satisfies(reactNative, anyReactNativePatchVersion)) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: Invalid version react-native@${reactNative} for expo sdkVersion ${sdkVersion}. Use react-native@${facebookReactNativeVersion}`,\n        'doctor-invalid-version-of-react-native'\n      );\n      return WARNING;\n    }\n    ProjectUtils.clearNotification(projectRoot, 'doctor-invalid-version-of-react-native');\n  } else {\n    // If `isExpoForkedReactNative === true`\n    try {\n      const reactNativeTag = reactNative.match(/sdk-\\d+\\.\\d+\\.\\d+/)[0];\n      const sdkVersionObject = sdkVersions[sdkVersion];\n\n      // TODO: Want to be smarter about this. Maybe warn if there's a newer version.\n      if (\n        semver.major(Versions.parseSdkVersionFromTag(reactNativeTag)) !==\n        semver.major(Versions.parseSdkVersionFromTag(sdkVersionObject['expoReactNativeTag']))\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          'expo',\n          `Warning: Invalid version of react-native for sdkVersion ${sdkVersion}. Use github:expo/react-native#${sdkVersionObject['expoReactNativeTag']}`,\n          'doctor-invalid-version-of-react-native'\n        );\n        return WARNING;\n      }\n      ProjectUtils.clearNotification(projectRoot, 'doctor-invalid-version-of-react-native');\n\n      ProjectUtils.clearNotification(projectRoot, 'doctor-malformed-version-of-react-native');\n    } catch {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: ${reactNative} is not a valid version. Version must be in the form of sdk-x.y.z. Please update your package.json file.`,\n        'doctor-malformed-version-of-react-native'\n      );\n      return WARNING;\n    }\n  }\n\n  return NO_ISSUES;\n}\n\nasync function _validateNodeModulesAsync(projectRoot: string): Promise<number> {\n  // Check to make sure react-native is installed\n\n  if (resolveFrom.silent(projectRoot, 'react-native/local-cli/cli.js')) {\n    ProjectUtils.clearNotification(projectRoot, 'doctor-react-native-not-installed');\n  } else {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: react-native is not installed. Please run \\`npm install\\` or \\`yarn\\` in your project directory.`,\n      'doctor-react-native-not-installed'\n    );\n    return FATAL;\n  }\n  return NO_ISSUES;\n}\n\nexport async function validateWithoutNetworkAsync(\n  projectRoot: string,\n  options: { skipSDKVersionRequirement?: boolean } = {}\n): Promise<number> {\n  return validateAsync(projectRoot, false, options.skipSDKVersionRequirement);\n}\n\nexport async function validateWithNetworkAsync(\n  projectRoot: string,\n  options: { skipSDKVersionRequirement?: boolean } = {}\n): Promise<number> {\n  return validateAsync(projectRoot, true, options.skipSDKVersionRequirement);\n}\n\nasync function validateAsync(\n  projectRoot: string,\n  allowNetwork: boolean,\n  skipSDKVersionRequirement: boolean | undefined\n): Promise<number> {\n  if (EXPO_NO_DOCTOR) {\n    return NO_ISSUES;\n  }\n\n  const { exp, pkg } = getConfig(projectRoot, {\n    strict: true,\n    skipSDKVersionRequirement,\n  });\n\n  ProjectUtils.clearNotification(projectRoot, 'doctor-config-json-not-read');\n\n  let status = await _checkNpmVersionAsync(projectRoot);\n  if (status === FATAL) {\n    return status;\n  }\n\n  const expStatus = await _validateExpJsonAsync(\n    exp,\n    pkg,\n    projectRoot,\n    allowNetwork,\n    skipSDKVersionRequirement\n  );\n  if (expStatus === FATAL) {\n    return expStatus;\n  }\n\n  status = Math.max(status, expStatus);\n\n  const nodeModulesStatus = await _validateNodeModulesAsync(projectRoot);\n  if (nodeModulesStatus > status) {\n    return nodeModulesStatus;\n  }\n\n  return status;\n}\n\nexport async function validateExpoServersAsync(projectRoot: string): Promise<number> {\n  const domains = ['expo.io', 'expo.fyi', 'expo.dev', 'static.expo.dev', 'exp.host'];\n  const attempts = await Promise.all(\n    domains.map(async domain => ({\n      domain,\n      reachable: await isReachable(domain),\n    }))\n  );\n  const failures = attempts.filter(attempt => !attempt.reachable);\n\n  if (failures.length) {\n    failures.forEach(failure => {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: could not reach \\`${failure.domain}\\`.`,\n        `doctor-server-dashboard-not-reachable-${failure.domain}`\n      );\n    });\n    console.log();\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `We couldn't reach some of our domains, this might cause issues on our website or services.\\nPlease check your network configuration and try to access these domains in your browser.`,\n      'doctor-server-dashboard-not-reachable'\n    );\n    console.log();\n    return WARNING;\n  }\n  return NO_ISSUES;\n}\n"],"mappings":"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"}