{"version":3,"file":"resolveEntryPoint.js","names":["supportedPlatforms","resolveEntryPoint","projectRoot","platform","projectConfig","includes","Error","platforms","entry","getEntryPoint","path","relative"],"sources":["../../src/tools/resolveEntryPoint.ts"],"sourcesContent":["import { ProjectConfig } from '@expo/config';\nimport { getEntryPoint } from '@expo/config/paths';\nimport path from 'path';\n\nconst supportedPlatforms = ['ios', 'android', 'web'];\n\nexport function resolveEntryPoint(\n  projectRoot: string,\n  platform?: string,\n  projectConfig?: ProjectConfig\n): string {\n  if (platform && !supportedPlatforms.includes(platform)) {\n    throw new Error(\n      `Failed to resolve the project's entry file: The platform \"${platform}\" is not supported.`\n    );\n  }\n  // TODO: Bacon: support platform extension resolution like .ios, .native\n  // const platforms = [platform, 'native'].filter(Boolean) as string[];\n  const platforms: string[] = [];\n\n  const entry = getEntryPoint(projectRoot, ['./index'], platforms, projectConfig);\n  if (!entry)\n    throw new Error(\n      `The project entry file could not be resolved. Please either define it in the \\`package.json\\` (main), \\`app.json\\` (expo.entryPoint), create an \\`index.js\\`, or install the \\`expo\\` package.`\n    );\n\n  return path.relative(projectRoot, entry);\n}\n"],"mappings":";;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAwB;AAExB,MAAMA,kBAAkB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC;AAE7C,SAASC,iBAAiB,CAC/BC,WAAmB,EACnBC,QAAiB,EACjBC,aAA6B,EACrB;EACR,IAAID,QAAQ,IAAI,CAACH,kBAAkB,CAACK,QAAQ,CAACF,QAAQ,CAAC,EAAE;IACtD,MAAM,IAAIG,KAAK,CACZ,6DAA4DH,QAAS,qBAAoB,CAC3F;EACH;EACA;EACA;EACA,MAAMI,SAAmB,GAAG,EAAE;EAE9B,MAAMC,KAAK,GAAG,IAAAC,sBAAa,EAACP,WAAW,EAAE,CAAC,SAAS,CAAC,EAAEK,SAAS,EAAEH,aAAa,CAAC;EAC/E,IAAI,CAACI,KAAK,EACR,MAAM,IAAIF,KAAK,CACZ,gMAA+L,CACjM;EAEH,OAAOI,eAAI,CAACC,QAAQ,CAACT,WAAW,EAAEM,KAAK,CAAC;AAC1C"}